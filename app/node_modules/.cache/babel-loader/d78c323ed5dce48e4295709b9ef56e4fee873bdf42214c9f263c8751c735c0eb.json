{"ast":null,"code":"import _defineProperty from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SolanaWalletAdapterWalletAccount_adapter, _SolanaWalletAdapterWallet_instances, _SolanaWalletAdapterWallet_listeners, _SolanaWalletAdapterWallet_adapter, _SolanaWalletAdapterWallet_supportedTransactionVersions, _SolanaWalletAdapterWallet_chain, _SolanaWalletAdapterWallet_endpoint, _SolanaWalletAdapterWallet_account, _SolanaWalletAdapterWallet_connected, _SolanaWalletAdapterWallet_disconnected, _SolanaWalletAdapterWallet_connect, _SolanaWalletAdapterWallet_disconnect, _SolanaWalletAdapterWallet_on, _SolanaWalletAdapterWallet_emit, _SolanaWalletAdapterWallet_off, _SolanaWalletAdapterWallet_deserializeTransaction, _SolanaWalletAdapterWallet_signAndSendTransaction, _SolanaWalletAdapterWallet_signTransaction, _SolanaWalletAdapterWallet_signMessage, _SolanaWalletAdapterWallet_signIn;\nimport { isVersionedTransaction, WalletReadyState } from '@solana/wallet-adapter-base';\nimport { isSolanaChain } from '@solana/wallet-standard-chains';\nimport { SolanaSignAndSendTransaction, SolanaSignIn, SolanaSignMessage, SolanaSignTransaction } from '@solana/wallet-standard-features';\nimport { getEndpointForChain } from '@solana/wallet-standard-util';\nimport { Connection, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { getWallets } from '@wallet-standard/app';\nimport { StandardConnect, StandardDisconnect, StandardEvents } from '@wallet-standard/features';\nimport { arraysEqual, bytesEqual, ReadonlyWalletAccount } from '@wallet-standard/wallet';\nimport bs58 from 'bs58';\n/** TODO: docs */\nexport var SolanaWalletAdapterWalletAccount = /*#__PURE__*/function (_ReadonlyWalletAccoun) {\n  _inherits(SolanaWalletAdapterWalletAccount, _ReadonlyWalletAccoun);\n  var _super = _createSuper(SolanaWalletAdapterWalletAccount);\n  function SolanaWalletAdapterWalletAccount(_ref) {\n    var _this;\n    var adapter = _ref.adapter,\n      address = _ref.address,\n      publicKey = _ref.publicKey,\n      chains = _ref.chains;\n    _classCallCheck(this, SolanaWalletAdapterWalletAccount);\n    var features = [SolanaSignAndSendTransaction];\n    if ('signTransaction' in adapter) {\n      features.push(SolanaSignTransaction);\n    }\n    if ('signMessage' in adapter) {\n      features.push(SolanaSignMessage);\n    }\n    if ('signIn' in adapter) {\n      features.push(SolanaSignIn);\n    }\n    _this = _super.call(this, {\n      address: address,\n      publicKey: publicKey,\n      chains: chains,\n      features: features\n    });\n    _SolanaWalletAdapterWalletAccount_adapter.set(_assertThisInitialized(_this), void 0);\n    if ((this instanceof SolanaWalletAdapterWalletAccount ? this.constructor : void 0) === SolanaWalletAdapterWalletAccount) {\n      Object.freeze(_assertThisInitialized(_this));\n    }\n    __classPrivateFieldSet(_assertThisInitialized(_this), _SolanaWalletAdapterWalletAccount_adapter, adapter, \"f\");\n    return _this;\n  }\n  return _createClass(SolanaWalletAdapterWalletAccount);\n}(ReadonlyWalletAccount);\n_SolanaWalletAdapterWalletAccount_adapter = new WeakMap();\n/** TODO: docs */\nexport var SolanaWalletAdapterWallet = /*#__PURE__*/function () {\n  function SolanaWalletAdapterWallet(adapter, chain, endpoint) {\n    var _this2 = this;\n    _classCallCheck(this, SolanaWalletAdapterWallet);\n    _SolanaWalletAdapterWallet_instances.add(this);\n    _SolanaWalletAdapterWallet_listeners.set(this, {});\n    _SolanaWalletAdapterWallet_adapter.set(this, void 0);\n    _SolanaWalletAdapterWallet_supportedTransactionVersions.set(this, void 0);\n    _SolanaWalletAdapterWallet_chain.set(this, void 0);\n    _SolanaWalletAdapterWallet_endpoint.set(this, void 0);\n    _SolanaWalletAdapterWallet_account.set(this, void 0);\n    _SolanaWalletAdapterWallet_connect.set(this, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _ref3,\n        silent,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _ref3 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, silent = _ref3.silent;\n            if (!(!silent && !__classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").connected)) {\n              _context.next = 4;\n              break;\n            }\n            _context.next = 4;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").connect();\n          case 4:\n            __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_connected).call(_this2);\n            return _context.abrupt(\"return\", {\n              accounts: _this2.accounts\n            });\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    _SolanaWalletAdapterWallet_disconnect.set(this, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").disconnect();\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    })));\n    _SolanaWalletAdapterWallet_on.set(this, function (event, listener) {\n      var _classPrivateFieldGe;\n      ((_classPrivateFieldGe = __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_listeners, \"f\")[event]) === null || _classPrivateFieldGe === void 0 ? void 0 : _classPrivateFieldGe.push(listener)) || (__classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_listeners, \"f\")[event] = [listener]);\n      return function () {\n        return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_off).call(_this2, event, listener);\n      };\n    });\n    _SolanaWalletAdapterWallet_signAndSendTransaction.set(this, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var outputs,\n        _len,\n        inputs,\n        _key,\n        input,\n        transaction,\n        _ref6,\n        commitment,\n        preflightCommitment,\n        skipPreflight,\n        maxRetries,\n        minContextSlot,\n        _endpoint,\n        connection,\n        latestBlockhash,\n        signature,\n        _iterator,\n        _step,\n        _input,\n        _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            outputs = [];\n            for (_len = _args3.length, inputs = new Array(_len), _key = 0; _key < _len; _key++) {\n              inputs[_key] = _args3[_key];\n            }\n            if (!(inputs.length === 1)) {\n              _context3.next = 29;\n              break;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            input = inputs[0];\n            if (!(input.account !== __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_account, \"f\"))) {\n              _context3.next = 6;\n              break;\n            }\n            throw new Error('invalid account');\n          case 6:\n            if (isSolanaChain(input.chain)) {\n              _context3.next = 8;\n              break;\n            }\n            throw new Error('invalid chain');\n          case 8:\n            transaction = __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_deserializeTransaction).call(_this2, input.transaction);\n            _ref6 = input.options || {}, commitment = _ref6.commitment, preflightCommitment = _ref6.preflightCommitment, skipPreflight = _ref6.skipPreflight, maxRetries = _ref6.maxRetries, minContextSlot = _ref6.minContextSlot;\n            _endpoint = getEndpointForChain(input.chain, __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_endpoint, \"f\"));\n            connection = new Connection(_endpoint, commitment || 'confirmed');\n            if (!commitment) {\n              _context3.next = 18;\n              break;\n            }\n            _context3.next = 15;\n            return connection.getLatestBlockhash({\n              commitment: preflightCommitment || commitment,\n              minContextSlot: minContextSlot\n            });\n          case 15:\n            _context3.t0 = _context3.sent;\n            _context3.next = 19;\n            break;\n          case 18:\n            _context3.t0 = undefined;\n          case 19:\n            latestBlockhash = _context3.t0;\n            _context3.next = 22;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").sendTransaction(transaction, connection, {\n              preflightCommitment: preflightCommitment,\n              skipPreflight: skipPreflight,\n              maxRetries: maxRetries,\n              minContextSlot: minContextSlot\n            });\n          case 22:\n            signature = _context3.sent;\n            if (!latestBlockhash) {\n              _context3.next = 26;\n              break;\n            }\n            _context3.next = 26;\n            return connection.confirmTransaction(_objectSpread(_objectSpread({}, latestBlockhash), {}, {\n              signature: signature\n            }), commitment || 'confirmed');\n          case 26:\n            outputs.push({\n              signature: bs58.decode(signature)\n            });\n            _context3.next = 53;\n            break;\n          case 29:\n            if (!(inputs.length > 1)) {\n              _context3.next = 53;\n              break;\n            }\n            // Adapters have no `sendAllTransactions` method, so just sign and send each transaction in serial.\n            _iterator = _createForOfIteratorHelper(inputs);\n            _context3.prev = 31;\n            _iterator.s();\n          case 33:\n            if ((_step = _iterator.n()).done) {\n              _context3.next = 45;\n              break;\n            }\n            _input = _step.value;\n            _context3.t1 = outputs.push;\n            _context3.t2 = outputs;\n            _context3.t3 = _toConsumableArray;\n            _context3.next = 40;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_signAndSendTransaction, \"f\").call(_this2, _input);\n          case 40:\n            _context3.t4 = _context3.sent;\n            _context3.t5 = (0, _context3.t3)(_context3.t4);\n            _context3.t1.apply.call(_context3.t1, _context3.t2, _context3.t5);\n          case 43:\n            _context3.next = 33;\n            break;\n          case 45:\n            _context3.next = 50;\n            break;\n          case 47:\n            _context3.prev = 47;\n            _context3.t6 = _context3[\"catch\"](31);\n            _iterator.e(_context3.t6);\n          case 50:\n            _context3.prev = 50;\n            _iterator.f();\n            return _context3.finish(50);\n          case 53:\n            return _context3.abrupt(\"return\", outputs);\n          case 54:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[31, 47, 50, 53]]);\n    })));\n    _SolanaWalletAdapterWallet_signTransaction.set(this, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var outputs,\n        _len2,\n        inputs,\n        _key2,\n        input,\n        transaction,\n        signedTransaction,\n        serializedTransaction,\n        _iterator2,\n        _step2,\n        _input2,\n        transactions,\n        signedTransactions,\n        _args4 = arguments;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if ('signTransaction' in __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\")) {\n              _context4.next = 2;\n              break;\n            }\n            throw new Error('signTransaction not implemented by adapter');\n          case 2:\n            outputs = [];\n            for (_len2 = _args4.length, inputs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              inputs[_key2] = _args4[_key2];\n            }\n            if (!(inputs.length === 1)) {\n              _context4.next = 18;\n              break;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            input = inputs[0];\n            if (!(input.account !== __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_account, \"f\"))) {\n              _context4.next = 8;\n              break;\n            }\n            throw new Error('invalid account');\n          case 8:\n            if (!(input.chain && !isSolanaChain(input.chain))) {\n              _context4.next = 10;\n              break;\n            }\n            throw new Error('invalid chain');\n          case 10:\n            transaction = __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_deserializeTransaction).call(_this2, input.transaction);\n            _context4.next = 13;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").signTransaction(transaction);\n          case 13:\n            signedTransaction = _context4.sent;\n            serializedTransaction = isVersionedTransaction(signedTransaction) ? signedTransaction.serialize() : new Uint8Array(signedTransaction.serialize({\n              requireAllSignatures: false,\n              verifySignatures: false\n            }));\n            outputs.push({\n              signedTransaction: serializedTransaction\n            });\n            _context4.next = 43;\n            break;\n          case 18:\n            if (!(inputs.length > 1)) {\n              _context4.next = 43;\n              break;\n            }\n            _iterator2 = _createForOfIteratorHelper(inputs);\n            _context4.prev = 20;\n            _iterator2.s();\n          case 22:\n            if ((_step2 = _iterator2.n()).done) {\n              _context4.next = 30;\n              break;\n            }\n            _input2 = _step2.value;\n            if (!(_input2.account !== __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_account, \"f\"))) {\n              _context4.next = 26;\n              break;\n            }\n            throw new Error('invalid account');\n          case 26:\n            if (!(_input2.chain && !isSolanaChain(_input2.chain))) {\n              _context4.next = 28;\n              break;\n            }\n            throw new Error('invalid chain');\n          case 28:\n            _context4.next = 22;\n            break;\n          case 30:\n            _context4.next = 35;\n            break;\n          case 32:\n            _context4.prev = 32;\n            _context4.t0 = _context4[\"catch\"](20);\n            _iterator2.e(_context4.t0);\n          case 35:\n            _context4.prev = 35;\n            _iterator2.f();\n            return _context4.finish(35);\n          case 38:\n            transactions = inputs.map(function (_ref8) {\n              var transaction = _ref8.transaction;\n              return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_deserializeTransaction).call(_this2, transaction);\n            });\n            _context4.next = 41;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").signAllTransactions(transactions);\n          case 41:\n            signedTransactions = _context4.sent;\n            outputs.push.apply(outputs, _toConsumableArray(signedTransactions.map(function (signedTransaction) {\n              var serializedTransaction = isVersionedTransaction(signedTransaction) ? signedTransaction.serialize() : new Uint8Array(signedTransaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false\n              }));\n              return {\n                signedTransaction: serializedTransaction\n              };\n            })));\n          case 43:\n            return _context4.abrupt(\"return\", outputs);\n          case 44:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[20, 32, 35, 38]]);\n    })));\n    _SolanaWalletAdapterWallet_signMessage.set(this, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var outputs,\n        _len3,\n        inputs,\n        _key3,\n        input,\n        signature,\n        _iterator3,\n        _step3,\n        _input3,\n        _args5 = arguments;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if ('signMessage' in __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\")) {\n              _context5.next = 2;\n              break;\n            }\n            throw new Error('signMessage not implemented by adapter');\n          case 2:\n            outputs = [];\n            for (_len3 = _args5.length, inputs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              inputs[_key3] = _args5[_key3];\n            }\n            if (!(inputs.length === 1)) {\n              _context5.next = 14;\n              break;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            input = inputs[0];\n            if (!(input.account !== __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_account, \"f\"))) {\n              _context5.next = 8;\n              break;\n            }\n            throw new Error('invalid account');\n          case 8:\n            _context5.next = 10;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").signMessage(input.message);\n          case 10:\n            signature = _context5.sent;\n            outputs.push({\n              signedMessage: input.message,\n              signature: signature\n            });\n            _context5.next = 38;\n            break;\n          case 14:\n            if (!(inputs.length > 1)) {\n              _context5.next = 38;\n              break;\n            }\n            // Adapters have no `signAllMessages` method, so just sign each message in serial.\n            _iterator3 = _createForOfIteratorHelper(inputs);\n            _context5.prev = 16;\n            _iterator3.s();\n          case 18:\n            if ((_step3 = _iterator3.n()).done) {\n              _context5.next = 30;\n              break;\n            }\n            _input3 = _step3.value;\n            _context5.t0 = outputs.push;\n            _context5.t1 = outputs;\n            _context5.t2 = _toConsumableArray;\n            _context5.next = 25;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_signMessage, \"f\").call(_this2, _input3);\n          case 25:\n            _context5.t3 = _context5.sent;\n            _context5.t4 = (0, _context5.t2)(_context5.t3);\n            _context5.t0.apply.call(_context5.t0, _context5.t1, _context5.t4);\n          case 28:\n            _context5.next = 18;\n            break;\n          case 30:\n            _context5.next = 35;\n            break;\n          case 32:\n            _context5.prev = 32;\n            _context5.t5 = _context5[\"catch\"](16);\n            _iterator3.e(_context5.t5);\n          case 35:\n            _context5.prev = 35;\n            _iterator3.f();\n            return _context5.finish(35);\n          case 38:\n            return _context5.abrupt(\"return\", outputs);\n          case 39:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[16, 32, 35, 38]]);\n    })));\n    _SolanaWalletAdapterWallet_signIn.set(this, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var _len4,\n        inputs,\n        _key4,\n        outputs,\n        _iterator4,\n        _step4,\n        input,\n        _args6 = arguments;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            if ('signIn' in __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\")) {\n              _context6.next = 2;\n              break;\n            }\n            throw new Error('signIn not implemented by adapter');\n          case 2:\n            for (_len4 = _args6.length, inputs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              inputs[_key4] = _args6[_key4];\n            }\n            if (!(inputs.length > 1)) {\n              _context6.next = 28;\n              break;\n            }\n            // Adapters don't support `signIn` with multiple inputs, so just sign in with each input in serial.\n            outputs = [];\n            _iterator4 = _createForOfIteratorHelper(inputs);\n            _context6.prev = 6;\n            _iterator4.s();\n          case 8:\n            if ((_step4 = _iterator4.n()).done) {\n              _context6.next = 17;\n              break;\n            }\n            input = _step4.value;\n            _context6.t0 = outputs;\n            _context6.next = 13;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").signIn(input);\n          case 13:\n            _context6.t1 = _context6.sent;\n            _context6.t0.push.call(_context6.t0, _context6.t1);\n          case 15:\n            _context6.next = 8;\n            break;\n          case 17:\n            _context6.next = 22;\n            break;\n          case 19:\n            _context6.prev = 19;\n            _context6.t2 = _context6[\"catch\"](6);\n            _iterator4.e(_context6.t2);\n          case 22:\n            _context6.prev = 22;\n            _iterator4.f();\n            return _context6.finish(22);\n          case 25:\n            return _context6.abrupt(\"return\", outputs);\n          case 28:\n            _context6.next = 30;\n            return __classPrivateFieldGet(_this2, _SolanaWalletAdapterWallet_adapter, \"f\").signIn(inputs[0]);\n          case 30:\n            _context6.t3 = _context6.sent;\n            return _context6.abrupt(\"return\", [_context6.t3]);\n          case 32:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[6, 19, 22, 25]]);\n    })));\n    if ((this instanceof SolanaWalletAdapterWallet ? this.constructor : void 0) === SolanaWalletAdapterWallet) {\n      Object.freeze(this);\n    }\n    var supportedTransactionVersions = _toConsumableArray(adapter.supportedTransactionVersions || ['legacy']);\n    if (!supportedTransactionVersions.length) {\n      supportedTransactionVersions.push('legacy');\n    }\n    __classPrivateFieldSet(this, _SolanaWalletAdapterWallet_adapter, adapter, \"f\");\n    __classPrivateFieldSet(this, _SolanaWalletAdapterWallet_supportedTransactionVersions, supportedTransactionVersions, \"f\");\n    __classPrivateFieldSet(this, _SolanaWalletAdapterWallet_chain, chain, \"f\");\n    __classPrivateFieldSet(this, _SolanaWalletAdapterWallet_endpoint, endpoint, \"f\");\n    adapter.on('connect', __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_connected), this);\n    adapter.on('disconnect', __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_disconnected), this);\n    __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_connected).call(this);\n  }\n  _createClass(SolanaWalletAdapterWallet, [{\n    key: \"version\",\n    get: function get() {\n      return '1.0.0';\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\").name;\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\").icon;\n    }\n  }, {\n    key: \"chains\",\n    get: function get() {\n      return [__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_chain, \"f\")];\n    }\n  }, {\n    key: \"features\",\n    get: function get() {\n      var _features;\n      var features = (_features = {}, _defineProperty(_features, StandardConnect, {\n        version: '1.0.0',\n        connect: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_connect, \"f\")\n      }), _defineProperty(_features, StandardDisconnect, {\n        version: '1.0.0',\n        disconnect: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_disconnect, \"f\")\n      }), _defineProperty(_features, StandardEvents, {\n        version: '1.0.0',\n        on: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_on, \"f\")\n      }), _defineProperty(_features, SolanaSignAndSendTransaction, {\n        version: '1.0.0',\n        supportedTransactionVersions: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_supportedTransactionVersions, \"f\"),\n        signAndSendTransaction: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_signAndSendTransaction, \"f\")\n      }), _features);\n      var signTransactionFeature;\n      if ('signTransaction' in __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\")) {\n        signTransactionFeature = _defineProperty({}, SolanaSignTransaction, {\n          version: '1.0.0',\n          supportedTransactionVersions: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_supportedTransactionVersions, \"f\"),\n          signTransaction: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_signTransaction, \"f\")\n        });\n      }\n      var signMessageFeature;\n      if ('signMessage' in __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\")) {\n        signMessageFeature = _defineProperty({}, SolanaSignMessage, {\n          version: '1.0.0',\n          signMessage: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_signMessage, \"f\")\n        });\n      }\n      var signInFeature;\n      if ('signIn' in __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\")) {\n        signInFeature = _defineProperty({}, SolanaSignIn, {\n          version: '1.0.0',\n          signIn: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_signIn, \"f\")\n        });\n      }\n      return _objectSpread(_objectSpread(_objectSpread({}, features), signTransactionFeature), signMessageFeature);\n    }\n  }, {\n    key: \"accounts\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_account, \"f\") ? [__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_account, \"f\")] : [];\n    }\n  }, {\n    key: \"endpoint\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_endpoint, \"f\");\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\").off('connect', __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_connected), this);\n      __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\").off('disconnect', __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_disconnected), this);\n    }\n  }]);\n  return SolanaWalletAdapterWallet;\n}();\n_SolanaWalletAdapterWallet_listeners = new WeakMap(), _SolanaWalletAdapterWallet_adapter = new WeakMap(), _SolanaWalletAdapterWallet_supportedTransactionVersions = new WeakMap(), _SolanaWalletAdapterWallet_chain = new WeakMap(), _SolanaWalletAdapterWallet_endpoint = new WeakMap(), _SolanaWalletAdapterWallet_account = new WeakMap(), _SolanaWalletAdapterWallet_connect = new WeakMap(), _SolanaWalletAdapterWallet_disconnect = new WeakMap(), _SolanaWalletAdapterWallet_on = new WeakMap(), _SolanaWalletAdapterWallet_signAndSendTransaction = new WeakMap(), _SolanaWalletAdapterWallet_signTransaction = new WeakMap(), _SolanaWalletAdapterWallet_signMessage = new WeakMap(), _SolanaWalletAdapterWallet_signIn = new WeakMap(), _SolanaWalletAdapterWallet_instances = new WeakSet(), _SolanaWalletAdapterWallet_connected = function _SolanaWalletAdapterWallet_connected() {\n  var _classPrivateFieldGe2;\n  var publicKey = (_classPrivateFieldGe2 = __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\").publicKey) === null || _classPrivateFieldGe2 === void 0 ? void 0 : _classPrivateFieldGe2.toBytes();\n  if (publicKey) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var address = __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\").publicKey.toBase58();\n    var account = __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_account, \"f\");\n    if (!account || account.address !== address || account.chains.includes(__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_chain, \"f\")) || !bytesEqual(account.publicKey, publicKey)) {\n      __classPrivateFieldSet(this, _SolanaWalletAdapterWallet_account, new SolanaWalletAdapterWalletAccount({\n        adapter: __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_adapter, \"f\"),\n        address: address,\n        publicKey: publicKey,\n        chains: [__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_chain, \"f\")]\n      }), \"f\");\n      __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_emit).call(this, 'change', {\n        accounts: this.accounts\n      });\n    }\n  }\n}, _SolanaWalletAdapterWallet_disconnected = function _SolanaWalletAdapterWallet_disconnected() {\n  if (__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_account, \"f\")) {\n    __classPrivateFieldSet(this, _SolanaWalletAdapterWallet_account, undefined, \"f\");\n    __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_instances, \"m\", _SolanaWalletAdapterWallet_emit).call(this, 'change', {\n      accounts: this.accounts\n    });\n  }\n}, _SolanaWalletAdapterWallet_emit = function _SolanaWalletAdapterWallet_emit(event) {\n  var _classPrivateFieldGe3;\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  // eslint-disable-next-line prefer-spread\n  (_classPrivateFieldGe3 = __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_listeners, \"f\")[event]) === null || _classPrivateFieldGe3 === void 0 || _classPrivateFieldGe3.forEach(function (listener) {\n    return listener.apply(null, args);\n  });\n}, _SolanaWalletAdapterWallet_off = function _SolanaWalletAdapterWallet_off(event, listener) {\n  var _classPrivateFieldGe4;\n  __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_listeners, \"f\")[event] = (_classPrivateFieldGe4 = __classPrivateFieldGet(this, _SolanaWalletAdapterWallet_listeners, \"f\")[event]) === null || _classPrivateFieldGe4 === void 0 ? void 0 : _classPrivateFieldGe4.filter(function (existingListener) {\n    return listener !== existingListener;\n  });\n}, _SolanaWalletAdapterWallet_deserializeTransaction = function _SolanaWalletAdapterWallet_deserializeTransaction(serializedTransaction) {\n  var transaction = VersionedTransaction.deserialize(serializedTransaction);\n  if (!__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_supportedTransactionVersions, \"f\").includes(transaction.version)) throw new Error('unsupported transaction version');\n  if (transaction.version === 'legacy' && arraysEqual(__classPrivateFieldGet(this, _SolanaWalletAdapterWallet_supportedTransactionVersions, \"f\"), ['legacy'])) return Transaction.from(serializedTransaction);\n  return transaction;\n};\n/** TODO: docs */\nexport function registerWalletAdapter(adapter, chain, endpoint) {\n  var match = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (wallet) {\n    return wallet.name === adapter.name;\n  };\n  var _getWallets = getWallets(),\n    register = _getWallets.register,\n    get = _getWallets.get,\n    on = _getWallets.on;\n  var destructors = [];\n  function destroy() {\n    destructors.forEach(function (destroy) {\n      return destroy();\n    });\n    destructors.length = 0;\n  }\n  function setup() {\n    // If the adapter is unsupported, or a standard wallet that matches it has already been registered, do nothing.\n    if (adapter.readyState === WalletReadyState.Unsupported || get().some(match)) return true;\n    // If the adapter isn't ready, try again later.\n    var ready = adapter.readyState === WalletReadyState.Installed || adapter.readyState === WalletReadyState.Loadable;\n    if (ready) {\n      var wallet = new SolanaWalletAdapterWallet(adapter, chain, endpoint);\n      destructors.push(function () {\n        return wallet.destroy();\n      });\n      // Register the adapter wrapped as a standard wallet, and receive a function to unregister the adapter.\n      destructors.push(register(wallet));\n      // Whenever a standard wallet is registered ...\n      destructors.push(on('register', function () {\n        for (var _len6 = arguments.length, wallets = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          wallets[_key6] = arguments[_key6];\n        }\n        // ... check if it matches the adapter.\n        if (wallets.some(match)) {\n          // If it does, remove the event listener and unregister the adapter.\n          destroy();\n        }\n      }));\n    }\n    return ready;\n  }\n  if (!setup()) {\n    var listener = function listener() {\n      if (setup()) {\n        adapter.off('readyStateChange', listener);\n      }\n    };\n    adapter.on('readyStateChange', listener);\n    destructors.push(function () {\n      return adapter.off('readyStateChange', listener);\n    });\n  }\n  return destroy;\n}","map":{"version":3,"names":["isVersionedTransaction","WalletReadyState","isSolanaChain","SolanaSignAndSendTransaction","SolanaSignIn","SolanaSignMessage","SolanaSignTransaction","getEndpointForChain","Connection","Transaction","VersionedTransaction","getWallets","StandardConnect","StandardDisconnect","StandardEvents","arraysEqual","bytesEqual","ReadonlyWalletAccount","bs58","SolanaWalletAdapterWalletAccount","_ReadonlyWalletAccoun","_inherits","_super","_createSuper","_ref","_this","adapter","address","publicKey","chains","_classCallCheck","features","push","call","_SolanaWalletAdapterWalletAccount_adapter","set","_assertThisInitialized","constructor","Object","freeze","__classPrivateFieldSet","_createClass","SolanaWalletAdapterWallet","chain","endpoint","_this2","_SolanaWalletAdapterWallet_listeners","_SolanaWalletAdapterWallet_adapter","_SolanaWalletAdapterWallet_supportedTransactionVersions","_SolanaWalletAdapterWallet_chain","_SolanaWalletAdapterWallet_endpoint","_SolanaWalletAdapterWallet_account","_SolanaWalletAdapterWallet_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref3","silent","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","__classPrivateFieldGet","connected","connect","_SolanaWalletAdapterWallet_instances","_SolanaWalletAdapterWallet_connected","abrupt","accounts","stop","_SolanaWalletAdapterWallet_disconnect","_callee2","_callee2$","_context2","disconnect","_SolanaWalletAdapterWallet_on","event","listener","_classPrivateFieldGe","_SolanaWalletAdapterWallet_off","_SolanaWalletAdapterWallet_signAndSendTransaction","_callee3","outputs","_len","inputs","_key","input","transaction","_ref6","commitment","preflightCommitment","skipPreflight","maxRetries","minContextSlot","_endpoint","connection","latestBlockhash","signature","_iterator","_step","_input","_args3","_callee3$","_context3","Array","account","Error","_SolanaWalletAdapterWallet_deserializeTransaction","options","getLatestBlockhash","t0","sent","sendTransaction","confirmTransaction","_objectSpread","decode","_createForOfIteratorHelper","s","n","done","value","t1","t2","t3","_toConsumableArray","t4","t5","apply","t6","e","f","finish","_SolanaWalletAdapterWallet_signTransaction","_callee4","_len2","_key2","signedTransaction","serializedTransaction","_iterator2","_step2","_input2","transactions","signedTransactions","_args4","_callee4$","_context4","signTransaction","serialize","Uint8Array","requireAllSignatures","verifySignatures","map","_ref8","signAllTransactions","_SolanaWalletAdapterWallet_signMessage","_callee5","_len3","_key3","_iterator3","_step3","_input3","_args5","_callee5$","_context5","signMessage","message","signedMessage","_SolanaWalletAdapterWallet_signIn","_callee6","_len4","_key4","_iterator4","_step4","_args6","_callee6$","_context6","signIn","supportedTransactionVersions","on","_SolanaWalletAdapterWallet_disconnected","key","get","name","icon","_features","_defineProperty","version","signAndSendTransaction","signTransactionFeature","signMessageFeature","signInFeature","destroy","off","_classPrivateFieldGe2","toBytes","toBase58","includes","_SolanaWalletAdapterWallet_emit","_classPrivateFieldGe3","_len5","args","_key5","forEach","_classPrivateFieldGe4","filter","existingListener","deserialize","from","registerWalletAdapter","match","wallet","_getWallets","register","destructors","setup","readyState","Unsupported","some","ready","Installed","Loadable","_len6","wallets","_key6"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@solana/wallet-standard-wallet-adapter-base/src/wallet.ts"],"sourcesContent":["import { type Adapter, isVersionedTransaction, WalletReadyState } from '@solana/wallet-adapter-base';\nimport { isSolanaChain, type SolanaChain } from '@solana/wallet-standard-chains';\nimport {\n    SolanaSignAndSendTransaction,\n    type SolanaSignAndSendTransactionFeature,\n    type SolanaSignAndSendTransactionMethod,\n    type SolanaSignAndSendTransactionOutput,\n    SolanaSignIn,\n    type SolanaSignInFeature,\n    type SolanaSignInMethod,\n    type SolanaSignInOutput,\n    SolanaSignMessage,\n    type SolanaSignMessageFeature,\n    type SolanaSignMessageMethod,\n    type SolanaSignMessageOutput,\n    SolanaSignTransaction,\n    type SolanaSignTransactionFeature,\n    type SolanaSignTransactionMethod,\n    type SolanaSignTransactionOutput,\n    type SolanaTransactionVersion,\n} from '@solana/wallet-standard-features';\nimport { getEndpointForChain } from '@solana/wallet-standard-util';\nimport { Connection, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { getWallets } from '@wallet-standard/app';\nimport type { Wallet, WalletIcon } from '@wallet-standard/base';\nimport {\n    StandardConnect,\n    type StandardConnectFeature,\n    type StandardConnectMethod,\n    StandardDisconnect,\n    type StandardDisconnectFeature,\n    type StandardDisconnectMethod,\n    StandardEvents,\n    type StandardEventsFeature,\n    type StandardEventsListeners,\n    type StandardEventsNames,\n    type StandardEventsOnMethod,\n} from '@wallet-standard/features';\nimport { arraysEqual, bytesEqual, ReadonlyWalletAccount } from '@wallet-standard/wallet';\nimport bs58 from 'bs58';\n\n/** TODO: docs */\nexport class SolanaWalletAdapterWalletAccount extends ReadonlyWalletAccount {\n    readonly #adapter: Adapter;\n\n    constructor({\n        adapter,\n        address,\n        publicKey,\n        chains,\n    }: {\n        adapter: Adapter;\n        address: string;\n        publicKey: Uint8Array;\n        chains: readonly SolanaChain[];\n    }) {\n        const features: (keyof (SolanaSignAndSendTransactionFeature &\n            SolanaSignTransactionFeature &\n            SolanaSignMessageFeature &\n            SolanaSignInFeature))[] = [SolanaSignAndSendTransaction];\n        if ('signTransaction' in adapter) {\n            features.push(SolanaSignTransaction);\n        }\n        if ('signMessage' in adapter) {\n            features.push(SolanaSignMessage);\n        }\n        if ('signIn' in adapter) {\n            features.push(SolanaSignIn);\n        }\n\n        super({ address, publicKey, chains, features });\n        if (new.target === SolanaWalletAdapterWalletAccount) {\n            Object.freeze(this);\n        }\n\n        this.#adapter = adapter;\n    }\n}\n\n/** TODO: docs */\nexport class SolanaWalletAdapterWallet implements Wallet {\n    readonly #listeners: {\n        [E in StandardEventsNames]?: StandardEventsListeners[E][];\n    } = {};\n    readonly #adapter: Adapter;\n    readonly #supportedTransactionVersions: readonly SolanaTransactionVersion[];\n    readonly #chain: SolanaChain;\n    readonly #endpoint: string | undefined;\n    #account: SolanaWalletAdapterWalletAccount | undefined;\n\n    get version() {\n        return '1.0.0' as const;\n    }\n\n    get name() {\n        return this.#adapter.name;\n    }\n\n    get icon() {\n        return this.#adapter.icon as WalletIcon;\n    }\n\n    get chains() {\n        return [this.#chain];\n    }\n\n    get features(): StandardConnectFeature &\n        StandardDisconnectFeature &\n        SolanaSignAndSendTransactionFeature &\n        Partial<SolanaSignTransactionFeature & SolanaSignMessageFeature & SolanaSignInFeature> {\n        const features: StandardConnectFeature &\n            StandardDisconnectFeature &\n            StandardEventsFeature &\n            SolanaSignAndSendTransactionFeature = {\n            [StandardConnect]: {\n                version: '1.0.0',\n                connect: this.#connect,\n            },\n            [StandardDisconnect]: {\n                version: '1.0.0',\n                disconnect: this.#disconnect,\n            },\n            [StandardEvents]: {\n                version: '1.0.0',\n                on: this.#on,\n            },\n            [SolanaSignAndSendTransaction]: {\n                version: '1.0.0',\n                supportedTransactionVersions: this.#supportedTransactionVersions,\n                signAndSendTransaction: this.#signAndSendTransaction,\n            },\n        };\n\n        let signTransactionFeature: SolanaSignTransactionFeature | undefined;\n        if ('signTransaction' in this.#adapter) {\n            signTransactionFeature = {\n                [SolanaSignTransaction]: {\n                    version: '1.0.0',\n                    supportedTransactionVersions: this.#supportedTransactionVersions,\n                    signTransaction: this.#signTransaction,\n                },\n            };\n        }\n\n        let signMessageFeature: SolanaSignMessageFeature | undefined;\n        if ('signMessage' in this.#adapter) {\n            signMessageFeature = {\n                [SolanaSignMessage]: {\n                    version: '1.0.0',\n                    signMessage: this.#signMessage,\n                },\n            };\n        }\n\n        let signInFeature: SolanaSignInFeature | undefined;\n        if ('signIn' in this.#adapter) {\n            signInFeature = {\n                [SolanaSignIn]: {\n                    version: '1.0.0',\n                    signIn: this.#signIn,\n                },\n            };\n        }\n\n        return { ...features, ...signTransactionFeature, ...signMessageFeature };\n    }\n\n    get accounts() {\n        return this.#account ? [this.#account] : [];\n    }\n\n    get endpoint() {\n        return this.#endpoint;\n    }\n\n    constructor(adapter: Adapter, chain: SolanaChain, endpoint?: string) {\n        if (new.target === SolanaWalletAdapterWallet) {\n            Object.freeze(this);\n        }\n\n        const supportedTransactionVersions = [...(adapter.supportedTransactionVersions || ['legacy'])];\n        if (!supportedTransactionVersions.length) {\n            supportedTransactionVersions.push('legacy');\n        }\n\n        this.#adapter = adapter;\n        this.#supportedTransactionVersions = supportedTransactionVersions;\n        this.#chain = chain;\n        this.#endpoint = endpoint;\n\n        adapter.on('connect', this.#connected, this);\n        adapter.on('disconnect', this.#disconnected, this);\n\n        this.#connected();\n    }\n\n    destroy(): void {\n        this.#adapter.off('connect', this.#connected, this);\n        this.#adapter.off('disconnect', this.#disconnected, this);\n    }\n\n    #connected(): void {\n        const publicKey = this.#adapter.publicKey?.toBytes();\n        if (publicKey) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const address = this.#adapter.publicKey!.toBase58();\n            const account = this.#account;\n            if (\n                !account ||\n                account.address !== address ||\n                account.chains.includes(this.#chain) ||\n                !bytesEqual(account.publicKey, publicKey)\n            ) {\n                this.#account = new SolanaWalletAdapterWalletAccount({\n                    adapter: this.#adapter,\n                    address,\n                    publicKey,\n                    chains: [this.#chain],\n                });\n                this.#emit('change', { accounts: this.accounts });\n            }\n        }\n    }\n\n    #disconnected(): void {\n        if (this.#account) {\n            this.#account = undefined;\n            this.#emit('change', { accounts: this.accounts });\n        }\n    }\n\n    #connect: StandardConnectMethod = async ({ silent } = {}) => {\n        if (!silent && !this.#adapter.connected) {\n            await this.#adapter.connect();\n        }\n\n        this.#connected();\n\n        return { accounts: this.accounts };\n    };\n\n    #disconnect: StandardDisconnectMethod = async () => {\n        await this.#adapter.disconnect();\n    };\n\n    #on: StandardEventsOnMethod = (event, listener) => {\n        this.#listeners[event]?.push(listener) || (this.#listeners[event] = [listener]);\n        return (): void => this.#off(event, listener);\n    };\n\n    #emit<E extends StandardEventsNames>(event: E, ...args: Parameters<StandardEventsListeners[E]>): void {\n        // eslint-disable-next-line prefer-spread\n        this.#listeners[event]?.forEach((listener) => listener.apply(null, args));\n    }\n\n    #off<E extends StandardEventsNames>(event: E, listener: StandardEventsListeners[E]): void {\n        this.#listeners[event] = this.#listeners[event]?.filter((existingListener) => listener !== existingListener);\n    }\n\n    #deserializeTransaction(serializedTransaction: Uint8Array): Transaction | VersionedTransaction {\n        const transaction = VersionedTransaction.deserialize(serializedTransaction);\n        if (!this.#supportedTransactionVersions.includes(transaction.version))\n            throw new Error('unsupported transaction version');\n        if (transaction.version === 'legacy' && arraysEqual(this.#supportedTransactionVersions, ['legacy']))\n            return Transaction.from(serializedTransaction);\n        return transaction;\n    }\n\n    #signAndSendTransaction: SolanaSignAndSendTransactionMethod = async (...inputs) => {\n        const outputs: SolanaSignAndSendTransactionOutput[] = [];\n\n        if (inputs.length === 1) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const input = inputs[0]!;\n            if (input.account !== this.#account) throw new Error('invalid account');\n            if (!isSolanaChain(input.chain)) throw new Error('invalid chain');\n            const transaction = this.#deserializeTransaction(input.transaction);\n            const { commitment, preflightCommitment, skipPreflight, maxRetries, minContextSlot } = input.options || {};\n            const endpoint = getEndpointForChain(input.chain, this.#endpoint);\n            const connection = new Connection(endpoint, commitment || 'confirmed');\n\n            const latestBlockhash = commitment\n                ? await connection.getLatestBlockhash({\n                      commitment: preflightCommitment || commitment,\n                      minContextSlot,\n                  })\n                : undefined;\n\n            const signature = await this.#adapter.sendTransaction(transaction, connection, {\n                preflightCommitment,\n                skipPreflight,\n                maxRetries,\n                minContextSlot,\n            });\n\n            if (latestBlockhash) {\n                await connection.confirmTransaction(\n                    {\n                        ...latestBlockhash,\n                        signature,\n                    },\n                    commitment || 'confirmed'\n                );\n            }\n\n            outputs.push({ signature: bs58.decode(signature) });\n        } else if (inputs.length > 1) {\n            // Adapters have no `sendAllTransactions` method, so just sign and send each transaction in serial.\n            for (const input of inputs) {\n                outputs.push(...(await this.#signAndSendTransaction(input)));\n            }\n        }\n\n        return outputs;\n    };\n\n    #signTransaction: SolanaSignTransactionMethod = async (...inputs) => {\n        if (!('signTransaction' in this.#adapter)) throw new Error('signTransaction not implemented by adapter');\n        const outputs: SolanaSignTransactionOutput[] = [];\n\n        if (inputs.length === 1) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const input = inputs[0]!;\n            if (input.account !== this.#account) throw new Error('invalid account');\n            if (input.chain && !isSolanaChain(input.chain)) throw new Error('invalid chain');\n            const transaction = this.#deserializeTransaction(input.transaction);\n\n            const signedTransaction = await this.#adapter.signTransaction(transaction);\n\n            const serializedTransaction = isVersionedTransaction(signedTransaction)\n                ? signedTransaction.serialize()\n                : new Uint8Array(\n                      signedTransaction.serialize({\n                          requireAllSignatures: false,\n                          verifySignatures: false,\n                      })\n                  );\n\n            outputs.push({ signedTransaction: serializedTransaction });\n        } else if (inputs.length > 1) {\n            for (const input of inputs) {\n                if (input.account !== this.#account) throw new Error('invalid account');\n                if (input.chain && !isSolanaChain(input.chain)) throw new Error('invalid chain');\n            }\n            const transactions = inputs.map(({ transaction }) => this.#deserializeTransaction(transaction));\n\n            const signedTransactions = await this.#adapter.signAllTransactions(transactions);\n\n            outputs.push(\n                ...signedTransactions.map((signedTransaction) => {\n                    const serializedTransaction = isVersionedTransaction(signedTransaction)\n                        ? signedTransaction.serialize()\n                        : new Uint8Array(\n                              signedTransaction.serialize({\n                                  requireAllSignatures: false,\n                                  verifySignatures: false,\n                              })\n                          );\n\n                    return { signedTransaction: serializedTransaction };\n                })\n            );\n        }\n\n        return outputs;\n    };\n\n    #signMessage: SolanaSignMessageMethod = async (...inputs) => {\n        if (!('signMessage' in this.#adapter)) throw new Error('signMessage not implemented by adapter');\n        const outputs: SolanaSignMessageOutput[] = [];\n\n        if (inputs.length === 1) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const input = inputs[0]!;\n            if (input.account !== this.#account) throw new Error('invalid account');\n\n            const signature = await this.#adapter.signMessage(input.message);\n\n            outputs.push({ signedMessage: input.message, signature });\n        } else if (inputs.length > 1) {\n            // Adapters have no `signAllMessages` method, so just sign each message in serial.\n            for (const input of inputs) {\n                outputs.push(...(await this.#signMessage(input)));\n            }\n        }\n\n        return outputs;\n    };\n\n    #signIn: SolanaSignInMethod = async (...inputs) => {\n        if (!('signIn' in this.#adapter)) throw new Error('signIn not implemented by adapter');\n\n        if (inputs.length > 1) {\n            // Adapters don't support `signIn` with multiple inputs, so just sign in with each input in serial.\n            const outputs: SolanaSignInOutput[] = [];\n            for (const input of inputs) {\n                outputs.push(await this.#adapter.signIn(input));\n            }\n            return outputs;\n        } else {\n            return [await this.#adapter.signIn(inputs[0])];\n        }\n    };\n}\n\n/** TODO: docs */\nexport function registerWalletAdapter(\n    adapter: Adapter,\n    chain: SolanaChain,\n    endpoint?: string,\n    match: (wallet: Wallet) => boolean = (wallet) => wallet.name === adapter.name\n): () => void {\n    const { register, get, on } = getWallets();\n    const destructors: (() => void)[] = [];\n\n    function destroy(): void {\n        destructors.forEach((destroy) => destroy());\n        destructors.length = 0;\n    }\n\n    function setup(): boolean {\n        // If the adapter is unsupported, or a standard wallet that matches it has already been registered, do nothing.\n        if (adapter.readyState === WalletReadyState.Unsupported || get().some(match)) return true;\n\n        // If the adapter isn't ready, try again later.\n        const ready =\n            adapter.readyState === WalletReadyState.Installed || adapter.readyState === WalletReadyState.Loadable;\n        if (ready) {\n            const wallet = new SolanaWalletAdapterWallet(adapter, chain, endpoint);\n            destructors.push(() => wallet.destroy());\n            // Register the adapter wrapped as a standard wallet, and receive a function to unregister the adapter.\n            destructors.push(register(wallet));\n            // Whenever a standard wallet is registered ...\n            destructors.push(\n                on('register', (...wallets) => {\n                    // ... check if it matches the adapter.\n                    if (wallets.some(match)) {\n                        // If it does, remove the event listener and unregister the adapter.\n                        destroy();\n                    }\n                })\n            );\n        }\n        return ready;\n    }\n\n    if (!setup()) {\n        function listener(): void {\n            if (setup()) {\n                adapter.off('readyStateChange', listener);\n            }\n        }\n\n        adapter.on('readyStateChange', listener);\n        destructors.push(() => adapter.off('readyStateChange', listener));\n    }\n\n    return destroy;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}