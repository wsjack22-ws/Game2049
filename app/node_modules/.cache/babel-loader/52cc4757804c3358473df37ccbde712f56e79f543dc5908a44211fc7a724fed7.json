{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _slicedToArray = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _asyncToGenerator = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.associated = exports.findProgramAddressSync = exports.createProgramAddressSync = exports.createWithSeedSync = void 0;\nvar buffer_1 = require(\"buffer\");\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar js_sha256_1 = require(\"js-sha256\");\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar common_js_1 = require(\"../program/common.js\");\n// Sync version of web3.PublicKey.createWithSeed.\nfunction createWithSeedSync(fromPublicKey, seed, programId) {\n  var buffer = buffer_1.Buffer.concat([fromPublicKey.toBuffer(), buffer_1.Buffer.from(seed), programId.toBuffer()]);\n  var hash = js_sha256_1.sha256.digest(buffer);\n  return new web3_js_1.PublicKey(buffer_1.Buffer.from(hash));\n}\nexports.createWithSeedSync = createWithSeedSync;\n// Sync version of web3.PublicKey.createProgramAddress.\nfunction createProgramAddressSync(seeds, programId) {\n  var MAX_SEED_LENGTH = 32;\n  var buffer = buffer_1.Buffer.alloc(0);\n  seeds.forEach(function (seed) {\n    if (seed.length > MAX_SEED_LENGTH) {\n      throw new TypeError(\"Max seed length exceeded\");\n    }\n    buffer = buffer_1.Buffer.concat([buffer, toBuffer(seed)]);\n  });\n  buffer = buffer_1.Buffer.concat([buffer, programId.toBuffer(), buffer_1.Buffer.from(\"ProgramDerivedAddress\")]);\n  var hash = (0, js_sha256_1.sha256)(new Uint8Array(buffer));\n  var publicKeyBytes = new bn_js_1.default(hash, 16).toArray(undefined, 32);\n  if (web3_js_1.PublicKey.isOnCurve(new Uint8Array(publicKeyBytes))) {\n    throw new Error(\"Invalid seeds, address must fall off the curve\");\n  }\n  return new web3_js_1.PublicKey(publicKeyBytes);\n}\nexports.createProgramAddressSync = createProgramAddressSync;\n// Sync version of web3.PublicKey.findProgramAddress.\nfunction findProgramAddressSync(seeds, programId) {\n  var nonce = 255;\n  var address;\n  while (nonce != 0) {\n    try {\n      var seedsWithNonce = seeds.concat(buffer_1.Buffer.from([nonce]));\n      address = createProgramAddressSync(seedsWithNonce, programId);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw err;\n      }\n      nonce--;\n      continue;\n    }\n    return [address, nonce];\n  }\n  throw new Error(\"Unable to find a viable program address nonce\");\n}\nexports.findProgramAddressSync = findProgramAddressSync;\nvar toBuffer = function toBuffer(arr) {\n  if (arr instanceof buffer_1.Buffer) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return buffer_1.Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return buffer_1.Buffer.from(arr);\n  }\n};\nfunction associated(_x) {\n  return _associated.apply(this, arguments);\n}\nfunction _associated() {\n  _associated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(programId) {\n    var seeds,\n      _len,\n      args,\n      _key,\n      _yield$web3_js_1$Publ,\n      _yield$web3_js_1$Publ2,\n      assoc,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          seeds = [buffer_1.Buffer.from([97, 110, 99, 104, 111, 114])]; // b\"anchor\".\n          for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = _args[_key];\n          }\n          args.forEach(function (arg) {\n            seeds.push(arg instanceof buffer_1.Buffer ? arg : (0, common_js_1.translateAddress)(arg).toBuffer());\n          });\n          _context.next = 5;\n          return web3_js_1.PublicKey.findProgramAddress(seeds, (0, common_js_1.translateAddress)(programId));\n        case 5:\n          _yield$web3_js_1$Publ = _context.sent;\n          _yield$web3_js_1$Publ2 = _slicedToArray(_yield$web3_js_1$Publ, 1);\n          assoc = _yield$web3_js_1$Publ2[0];\n          return _context.abrupt(\"return\", assoc);\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _associated.apply(this, arguments);\n}\nexports.associated = associated;","map":{"version":3,"names":["buffer_1","require","bn_js_1","__importDefault","js_sha256_1","web3_js_1","common_js_1","createWithSeedSync","fromPublicKey","seed","programId","buffer","Buffer","concat","toBuffer","from","hash","sha256","digest","PublicKey","exports","createProgramAddressSync","seeds","MAX_SEED_LENGTH","alloc","forEach","length","TypeError","Uint8Array","publicKeyBytes","default","toArray","undefined","isOnCurve","Error","findProgramAddressSync","nonce","address","seedsWithNonce","err","arr","byteOffset","byteLength","associated","_x","_associated","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_len","args","_key","_yield$web3_js_1$Publ","_yield$web3_js_1$Publ2","assoc","_args","wrap","_callee$","_context","prev","next","Array","arg","push","translateAddress","findProgramAddress","sent","_slicedToArray","abrupt","stop"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/utils/pubkey.ts"],"sourcesContent":["import { Buffer } from \"buffer\";\nimport BN from \"bn.js\";\nimport { sha256 as sha256Sync } from \"js-sha256\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Address, translateAddress } from \"../program/common.js\";\n\n// Sync version of web3.PublicKey.createWithSeed.\nexport function createWithSeedSync(\n  fromPublicKey: PublicKey,\n  seed: string,\n  programId: PublicKey\n): PublicKey {\n  const buffer = Buffer.concat([\n    fromPublicKey.toBuffer(),\n    Buffer.from(seed),\n    programId.toBuffer(),\n  ]);\n  const hash = sha256Sync.digest(buffer);\n  return new PublicKey(Buffer.from(hash));\n}\n\n// Sync version of web3.PublicKey.createProgramAddress.\nexport function createProgramAddressSync(\n  seeds: Array<Buffer | Uint8Array>,\n  programId: PublicKey\n): PublicKey {\n  const MAX_SEED_LENGTH = 32;\n\n  let buffer = Buffer.alloc(0);\n  seeds.forEach(function (seed) {\n    if (seed.length > MAX_SEED_LENGTH) {\n      throw new TypeError(`Max seed length exceeded`);\n    }\n    buffer = Buffer.concat([buffer, toBuffer(seed)]);\n  });\n  buffer = Buffer.concat([\n    buffer,\n    programId.toBuffer(),\n    Buffer.from(\"ProgramDerivedAddress\"),\n  ]);\n  let hash = sha256Sync(new Uint8Array(buffer));\n  let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n  if (PublicKey.isOnCurve(new Uint8Array(publicKeyBytes))) {\n    throw new Error(`Invalid seeds, address must fall off the curve`);\n  }\n  return new PublicKey(publicKeyBytes);\n}\n\n// Sync version of web3.PublicKey.findProgramAddress.\nexport function findProgramAddressSync(\n  seeds: Array<Buffer | Uint8Array>,\n  programId: PublicKey\n): [PublicKey, number] {\n  let nonce = 255;\n  let address: PublicKey | undefined;\n  while (nonce != 0) {\n    try {\n      const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n      address = createProgramAddressSync(seedsWithNonce, programId);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw err;\n      }\n      nonce--;\n      continue;\n    }\n    return [address, nonce];\n  }\n  throw new Error(`Unable to find a viable program address nonce`);\n}\n\nconst toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (arr instanceof Buffer) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\nexport async function associated(\n  programId: Address,\n  ...args: Array<Address | Buffer>\n): Promise<PublicKey> {\n  let seeds = [Buffer.from([97, 110, 99, 104, 111, 114])]; // b\"anchor\".\n  args.forEach((arg) => {\n    seeds.push(arg instanceof Buffer ? arg : translateAddress(arg).toBuffer());\n  });\n  const [assoc] = await PublicKey.findProgramAddress(\n    seeds,\n    translateAddress(programId)\n  );\n  return assoc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}