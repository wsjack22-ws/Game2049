{"ast":null,"code":"import _objectSpread from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _regeneratorRuntime from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"signers\"];\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _StandardWalletAdapter_instances, _StandardWalletAdapter_account, _StandardWalletAdapter_publicKey, _StandardWalletAdapter_connecting, _StandardWalletAdapter_disconnecting, _StandardWalletAdapter_off, _StandardWalletAdapter_supportedTransactionVersions, _StandardWalletAdapter_wallet, _StandardWalletAdapter_readyState, _StandardWalletAdapter_connect, _StandardWalletAdapter_connected, _StandardWalletAdapter_disconnected, _StandardWalletAdapter_reset, _StandardWalletAdapter_changed, _StandardWalletAdapter_signTransaction, _StandardWalletAdapter_signAllTransactions, _StandardWalletAdapter_signMessage, _StandardWalletAdapter_signIn;\nimport { BaseWalletAdapter, isVersionedTransaction, WalletAccountError, WalletConfigError, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletNotReadyError, WalletPublicKeyError, WalletReadyState, WalletSendTransactionError, WalletSignInError, WalletSignMessageError, WalletSignTransactionError } from '@solana/wallet-adapter-base';\nimport { SolanaSignAndSendTransaction, SolanaSignIn, SolanaSignMessage, SolanaSignTransaction } from '@solana/wallet-standard-features';\nimport { getChainForEndpoint, getCommitment } from '@solana/wallet-standard-util';\nimport { PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport { StandardConnect, StandardDisconnect, StandardEvents } from '@wallet-standard/features';\nimport { arraysEqual } from '@wallet-standard/wallet';\nimport bs58 from 'bs58';\n/** TODO: docs */\nexport var StandardWalletAdapter = /*#__PURE__*/function (_BaseWalletAdapter) {\n  _inherits(StandardWalletAdapter, _BaseWalletAdapter);\n  var _super = _createSuper(StandardWalletAdapter);\n  function StandardWalletAdapter(_ref) {\n    var _this;\n    var wallet = _ref.wallet;\n    _classCallCheck(this, StandardWalletAdapter);\n    _this = _super.call(this);\n    _StandardWalletAdapter_instances.add(_assertThisInitialized(_this));\n    _StandardWalletAdapter_account.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_publicKey.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_connecting.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_disconnecting.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_off.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_supportedTransactionVersions.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_wallet.set(_assertThisInitialized(_this), void 0);\n    _StandardWalletAdapter_readyState.set(_assertThisInitialized(_this), typeof window === 'undefined' || typeof document === 'undefined' ? WalletReadyState.Unsupported : WalletReadyState.Installed);\n    _StandardWalletAdapter_changed.set(_assertThisInitialized(_this), function (properties) {\n      // If accounts have changed on the wallet, reflect this on the adapter.\n      if ('accounts' in properties) {\n        var account = __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_wallet, \"f\").accounts[0];\n        // If the adapter isn't connected, or is disconnecting, or the first account hasn't changed, do nothing.\n        if (__classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_account, \"f\") && !__classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_disconnecting, \"f\") && account !== __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_account, \"f\")) {\n          // If there's a connected account, connect the adapter. Otherwise, disconnect it.\n          if (account) {\n            // Connect the adapter.\n            __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connected).call(_assertThisInitialized(_this), account);\n          } else {\n            // Emit an error because the wallet spontaneously disconnected.\n            _this.emit('error', new WalletDisconnectedError());\n            // Disconnect the adapter.\n            __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_disconnected).call(_assertThisInitialized(_this));\n          }\n        }\n      }\n      // After reflecting account changes, if features have changed on the wallet, reflect this on the adapter.\n      if ('features' in properties) {\n        __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(_assertThisInitialized(_this));\n      }\n    });\n    __classPrivateFieldSet(_assertThisInitialized(_this), _StandardWalletAdapter_wallet, wallet, \"f\");\n    __classPrivateFieldSet(_assertThisInitialized(_this), _StandardWalletAdapter_account, null, \"f\");\n    __classPrivateFieldSet(_assertThisInitialized(_this), _StandardWalletAdapter_publicKey, null, \"f\");\n    __classPrivateFieldSet(_assertThisInitialized(_this), _StandardWalletAdapter_connecting, false, \"f\");\n    __classPrivateFieldSet(_assertThisInitialized(_this), _StandardWalletAdapter_disconnecting, false, \"f\");\n    __classPrivateFieldSet(_assertThisInitialized(_this), _StandardWalletAdapter_off, __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_wallet, \"f\").features[StandardEvents].on('change', __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_changed, \"f\")), \"f\");\n    __classPrivateFieldGet(_assertThisInitialized(_this), _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(StandardWalletAdapter, [{\n    key: \"name\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").name;\n    }\n  }, {\n    key: \"url\",\n    get: function get() {\n      return 'https://github.com/solana-labs/wallet-standard';\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").icon;\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_readyState, \"f\");\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_publicKey, \"f\");\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_connecting, \"f\");\n    }\n  }, {\n    key: \"supportedTransactionVersions\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_supportedTransactionVersions, \"f\");\n    }\n  }, {\n    key: \"wallet\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\");\n    }\n  }, {\n    key: \"standard\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      __classPrivateFieldSet(this, _StandardWalletAdapter_account, null, \"f\");\n      __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, null, \"f\");\n      __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, false, \"f\");\n      __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, false, \"f\");\n      var off = __classPrivateFieldGet(this, _StandardWalletAdapter_off, \"f\");\n      if (off) {\n        __classPrivateFieldSet(this, _StandardWalletAdapter_off, null, \"f\");\n        off();\n      }\n    }\n  }, {\n    key: \"autoConnect\",\n    value: function () {\n      var _autoConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connect).call(this, {\n                silent: true\n              }));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function autoConnect() {\n        return _autoConnect.apply(this, arguments);\n      }\n      return autoConnect;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connect).call(this));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(StandardDisconnect in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) {\n                _context3.next = 13;\n                break;\n              }\n              _context3.prev = 1;\n              __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, true, \"f\");\n              _context3.next = 5;\n              return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[StandardDisconnect].disconnect();\n            case 5:\n              _context3.next = 10;\n              break;\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              this.emit('error', new WalletDisconnectionError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.message, _context3.t0));\n            case 10:\n              _context3.prev = 10;\n              __classPrivateFieldSet(this, _StandardWalletAdapter_disconnecting, false, \"f\");\n              return _context3.finish(10);\n            case 13:\n              __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_disconnected).call(this);\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[1, 7, 10, 13]]);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"sendTransaction\",\n    value: function () {\n      var _sendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(transaction, connection) {\n        var options,\n          account,\n          feature,\n          chain,\n          signers,\n          sendOptions,\n          serializedTransaction,\n          _transaction,\n          _yield$__classPrivate,\n          _yield$__classPrivate2,\n          output,\n          _yield$__classPrivate3,\n          _yield$__classPrivate4,\n          _output,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n              _context4.prev = 1;\n              account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n              if (account) {\n                _context4.next = 5;\n                break;\n              }\n              throw new WalletNotConnectedError();\n            case 5:\n              if (!(SolanaSignAndSendTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) {\n                _context4.next = 17;\n                break;\n              }\n              if (!account.features.includes(SolanaSignAndSendTransaction)) {\n                _context4.next = 10;\n                break;\n              }\n              feature = SolanaSignAndSendTransaction;\n              _context4.next = 15;\n              break;\n            case 10:\n              if (!(SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features && account.features.includes(SolanaSignTransaction))) {\n                _context4.next = 14;\n                break;\n              }\n              feature = SolanaSignTransaction;\n              _context4.next = 15;\n              break;\n            case 14:\n              throw new WalletAccountError();\n            case 15:\n              _context4.next = 24;\n              break;\n            case 17:\n              if (!(SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features)) {\n                _context4.next = 23;\n                break;\n              }\n              if (account.features.includes(SolanaSignTransaction)) {\n                _context4.next = 20;\n                break;\n              }\n              throw new WalletAccountError();\n            case 20:\n              feature = SolanaSignTransaction;\n              _context4.next = 24;\n              break;\n            case 23:\n              throw new WalletConfigError();\n            case 24:\n              chain = getChainForEndpoint(connection.rpcEndpoint);\n              if (account.chains.includes(chain)) {\n                _context4.next = 27;\n                break;\n              }\n              throw new WalletSendTransactionError();\n            case 27:\n              _context4.prev = 27;\n              signers = options.signers, sendOptions = _objectWithoutProperties(options, _excluded);\n              if (!isVersionedTransaction(transaction)) {\n                _context4.next = 34;\n                break;\n              }\n              (signers === null || signers === void 0 ? void 0 : signers.length) && transaction.sign(signers);\n              serializedTransaction = transaction.serialize();\n              _context4.next = 39;\n              break;\n            case 34:\n              _context4.next = 36;\n              return this.prepareTransaction(transaction, connection, sendOptions);\n            case 36:\n              transaction = _context4.sent;\n              (signers === null || signers === void 0 ? void 0 : signers.length) && (_transaction = transaction).partialSign.apply(_transaction, _toConsumableArray(signers));\n              serializedTransaction = new Uint8Array(transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false\n              }));\n            case 39:\n              if (!(feature === SolanaSignAndSendTransaction)) {\n                _context4.next = 48;\n                break;\n              }\n              _context4.next = 42;\n              return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignAndSendTransaction].signAndSendTransaction({\n                account: account,\n                chain: chain,\n                transaction: serializedTransaction,\n                options: {\n                  preflightCommitment: getCommitment(sendOptions.preflightCommitment || connection.commitment),\n                  skipPreflight: sendOptions.skipPreflight,\n                  maxRetries: sendOptions.maxRetries,\n                  minContextSlot: sendOptions.minContextSlot\n                }\n              });\n            case 42:\n              _yield$__classPrivate = _context4.sent;\n              _yield$__classPrivate2 = _slicedToArray(_yield$__classPrivate, 1);\n              output = _yield$__classPrivate2[0];\n              return _context4.abrupt(\"return\", bs58.encode(output.signature));\n            case 48:\n              _context4.next = 50;\n              return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignTransaction].signTransaction({\n                account: account,\n                chain: chain,\n                transaction: serializedTransaction,\n                options: {\n                  preflightCommitment: getCommitment(sendOptions.preflightCommitment || connection.commitment),\n                  minContextSlot: sendOptions.minContextSlot\n                }\n              });\n            case 50:\n              _yield$__classPrivate3 = _context4.sent;\n              _yield$__classPrivate4 = _slicedToArray(_yield$__classPrivate3, 1);\n              _output = _yield$__classPrivate4[0];\n              _context4.next = 55;\n              return connection.sendRawTransaction(_output.signedTransaction, _objectSpread(_objectSpread({}, sendOptions), {}, {\n                preflightCommitment: getCommitment(sendOptions.preflightCommitment || connection.commitment)\n              }));\n            case 55:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 56:\n              _context4.next = 63;\n              break;\n            case 58:\n              _context4.prev = 58;\n              _context4.t0 = _context4[\"catch\"](27);\n              if (!(_context4.t0 instanceof WalletError)) {\n                _context4.next = 62;\n                break;\n              }\n              throw _context4.t0;\n            case 62:\n              throw new WalletSendTransactionError(_context4.t0 === null || _context4.t0 === void 0 ? void 0 : _context4.t0.message, _context4.t0);\n            case 63:\n              _context4.next = 69;\n              break;\n            case 65:\n              _context4.prev = 65;\n              _context4.t1 = _context4[\"catch\"](1);\n              this.emit('error', _context4.t1);\n              throw _context4.t1;\n            case 69:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[1, 65], [27, 58]]);\n      }));\n      function sendTransaction(_x, _x2) {\n        return _sendTransaction.apply(this, arguments);\n      }\n      return sendTransaction;\n    }()\n  }]);\n  return StandardWalletAdapter;\n}(BaseWalletAdapter);\n_StandardWalletAdapter_account = new WeakMap(), _StandardWalletAdapter_publicKey = new WeakMap(), _StandardWalletAdapter_connecting = new WeakMap(), _StandardWalletAdapter_disconnecting = new WeakMap(), _StandardWalletAdapter_off = new WeakMap(), _StandardWalletAdapter_supportedTransactionVersions = new WeakMap(), _StandardWalletAdapter_wallet = new WeakMap(), _StandardWalletAdapter_readyState = new WeakMap(), _StandardWalletAdapter_changed = new WeakMap(), _StandardWalletAdapter_instances = new WeakSet(), _StandardWalletAdapter_connect = /*#__PURE__*/function () {\n  var _StandardWalletAdapter_connect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(input) {\n    var account;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          if (!(this.connected || this.connecting)) {\n            _context5.next = 3;\n            break;\n          }\n          return _context5.abrupt(\"return\");\n        case 3:\n          if (!(__classPrivateFieldGet(this, _StandardWalletAdapter_readyState, \"f\") !== WalletReadyState.Installed)) {\n            _context5.next = 5;\n            break;\n          }\n          throw new WalletNotReadyError();\n        case 5:\n          __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, true, \"f\");\n          if (__classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").accounts.length) {\n            _context5.next = 15;\n            break;\n          }\n          _context5.prev = 7;\n          _context5.next = 10;\n          return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[StandardConnect].connect(input);\n        case 10:\n          _context5.next = 15;\n          break;\n        case 12:\n          _context5.prev = 12;\n          _context5.t0 = _context5[\"catch\"](7);\n          throw new WalletConnectionError(_context5.t0 === null || _context5.t0 === void 0 ? void 0 : _context5.t0.message, _context5.t0);\n        case 15:\n          account = __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").accounts[0];\n          if (account) {\n            _context5.next = 18;\n            break;\n          }\n          throw new WalletAccountError();\n        case 18:\n          __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connected).call(this, account);\n          _context5.next = 25;\n          break;\n        case 21:\n          _context5.prev = 21;\n          _context5.t1 = _context5[\"catch\"](0);\n          this.emit('error', _context5.t1);\n          throw _context5.t1;\n        case 25:\n          _context5.prev = 25;\n          __classPrivateFieldSet(this, _StandardWalletAdapter_connecting, false, \"f\");\n          return _context5.finish(25);\n        case 28:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, this, [[0, 21, 25, 28], [7, 12]]);\n  }));\n  function _StandardWalletAdapter_connect(_x3) {\n    return _StandardWalletAdapter_connect2.apply(this, arguments);\n  }\n  return _StandardWalletAdapter_connect;\n}(), _StandardWalletAdapter_connected = function _StandardWalletAdapter_connected(account) {\n  var publicKey;\n  try {\n    // Use account.address instead of account.publicKey since address could be a PDA\n    publicKey = new PublicKey(account.address);\n  } catch (error) {\n    throw new WalletPublicKeyError(error === null || error === void 0 ? void 0 : error.message, error);\n  }\n  __classPrivateFieldSet(this, _StandardWalletAdapter_account, account, \"f\");\n  __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, publicKey, \"f\");\n  __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(this);\n  this.emit('connect', publicKey);\n}, _StandardWalletAdapter_disconnected = function _StandardWalletAdapter_disconnected() {\n  __classPrivateFieldSet(this, _StandardWalletAdapter_account, null, \"f\");\n  __classPrivateFieldSet(this, _StandardWalletAdapter_publicKey, null, \"f\");\n  __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_reset).call(this);\n  this.emit('disconnect');\n}, _StandardWalletAdapter_reset = function _StandardWalletAdapter_reset() {\n  var _classPrivateFieldGe, _classPrivateFieldGe2;\n  var supportedTransactionVersions = SolanaSignAndSendTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features ? __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignAndSendTransaction].supportedTransactionVersions : __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignTransaction].supportedTransactionVersions;\n  __classPrivateFieldSet(this, _StandardWalletAdapter_supportedTransactionVersions, arraysEqual(supportedTransactionVersions, ['legacy']) ? null : new Set(supportedTransactionVersions), \"f\");\n  if (SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features && (_classPrivateFieldGe = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\")) !== null && _classPrivateFieldGe !== void 0 && _classPrivateFieldGe.features.includes(SolanaSignTransaction)) {\n    this.signTransaction = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signTransaction);\n    this.signAllTransactions = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signAllTransactions);\n  } else {\n    delete this.signTransaction;\n    delete this.signAllTransactions;\n  }\n  if (SolanaSignMessage in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features && (_classPrivateFieldGe2 = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\")) !== null && _classPrivateFieldGe2 !== void 0 && _classPrivateFieldGe2.features.includes(SolanaSignMessage)) {\n    this.signMessage = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signMessage);\n  } else {\n    delete this.signMessage;\n  }\n  if (SolanaSignIn in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n    this.signIn = __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_signIn);\n  } else {\n    delete this.signIn;\n  }\n}, _StandardWalletAdapter_signTransaction = /*#__PURE__*/function () {\n  var _StandardWalletAdapter_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(transaction) {\n    var account, signedTransactions, serializedTransaction;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n          if (account) {\n            _context6.next = 4;\n            break;\n          }\n          throw new WalletNotConnectedError();\n        case 4:\n          if (SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n            _context6.next = 6;\n            break;\n          }\n          throw new WalletConfigError();\n        case 6:\n          if (account.features.includes(SolanaSignTransaction)) {\n            _context6.next = 8;\n            break;\n          }\n          throw new WalletAccountError();\n        case 8:\n          _context6.prev = 8;\n          _context6.next = 11;\n          return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignTransaction].signTransaction({\n            account: account,\n            transaction: isVersionedTransaction(transaction) ? transaction.serialize() : new Uint8Array(transaction.serialize({\n              requireAllSignatures: false,\n              verifySignatures: false\n            }))\n          });\n        case 11:\n          signedTransactions = _context6.sent;\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          serializedTransaction = signedTransactions[0].signedTransaction;\n          return _context6.abrupt(\"return\", isVersionedTransaction(transaction) ? VersionedTransaction.deserialize(serializedTransaction) : Transaction.from(serializedTransaction));\n        case 16:\n          _context6.prev = 16;\n          _context6.t0 = _context6[\"catch\"](8);\n          if (!(_context6.t0 instanceof WalletError)) {\n            _context6.next = 20;\n            break;\n          }\n          throw _context6.t0;\n        case 20:\n          throw new WalletSignTransactionError(_context6.t0 === null || _context6.t0 === void 0 ? void 0 : _context6.t0.message, _context6.t0);\n        case 21:\n          _context6.next = 27;\n          break;\n        case 23:\n          _context6.prev = 23;\n          _context6.t1 = _context6[\"catch\"](0);\n          this.emit('error', _context6.t1);\n          throw _context6.t1;\n        case 27:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, this, [[0, 23], [8, 16]]);\n  }));\n  function _StandardWalletAdapter_signTransaction(_x4) {\n    return _StandardWalletAdapter_signTransaction2.apply(this, arguments);\n  }\n  return _StandardWalletAdapter_signTransaction;\n}(), _StandardWalletAdapter_signAllTransactions = /*#__PURE__*/function () {\n  var _StandardWalletAdapter_signAllTransactions2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(transactions) {\n    var account, _classPrivateFieldGe3, signedTransactions;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n          if (account) {\n            _context7.next = 4;\n            break;\n          }\n          throw new WalletNotConnectedError();\n        case 4:\n          if (SolanaSignTransaction in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n            _context7.next = 6;\n            break;\n          }\n          throw new WalletConfigError();\n        case 6:\n          if (account.features.includes(SolanaSignTransaction)) {\n            _context7.next = 8;\n            break;\n          }\n          throw new WalletAccountError();\n        case 8:\n          _context7.prev = 8;\n          _context7.next = 11;\n          return (_classPrivateFieldGe3 = __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignTransaction]).signTransaction.apply(_classPrivateFieldGe3, _toConsumableArray(transactions.map(function (transaction) {\n            return {\n              account: account,\n              transaction: isVersionedTransaction(transaction) ? transaction.serialize() : new Uint8Array(transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false\n              }))\n            };\n          })));\n        case 11:\n          signedTransactions = _context7.sent;\n          return _context7.abrupt(\"return\", transactions.map(function (transaction, index) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            var signedTransaction = signedTransactions[index].signedTransaction;\n            return isVersionedTransaction(transaction) ? VersionedTransaction.deserialize(signedTransaction) : Transaction.from(signedTransaction);\n          }));\n        case 15:\n          _context7.prev = 15;\n          _context7.t0 = _context7[\"catch\"](8);\n          throw new WalletSignTransactionError(_context7.t0 === null || _context7.t0 === void 0 ? void 0 : _context7.t0.message, _context7.t0);\n        case 18:\n          _context7.next = 24;\n          break;\n        case 20:\n          _context7.prev = 20;\n          _context7.t1 = _context7[\"catch\"](0);\n          this.emit('error', _context7.t1);\n          throw _context7.t1;\n        case 24:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, this, [[0, 20], [8, 15]]);\n  }));\n  function _StandardWalletAdapter_signAllTransactions(_x5) {\n    return _StandardWalletAdapter_signAllTransactions2.apply(this, arguments);\n  }\n  return _StandardWalletAdapter_signAllTransactions;\n}(), _StandardWalletAdapter_signMessage = /*#__PURE__*/function () {\n  var _StandardWalletAdapter_signMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(message) {\n    var account, signedMessages;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          account = __classPrivateFieldGet(this, _StandardWalletAdapter_account, \"f\");\n          if (account) {\n            _context8.next = 4;\n            break;\n          }\n          throw new WalletNotConnectedError();\n        case 4:\n          if (SolanaSignMessage in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n            _context8.next = 6;\n            break;\n          }\n          throw new WalletConfigError();\n        case 6:\n          if (account.features.includes(SolanaSignMessage)) {\n            _context8.next = 8;\n            break;\n          }\n          throw new WalletAccountError();\n        case 8:\n          _context8.prev = 8;\n          _context8.next = 11;\n          return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignMessage].signMessage({\n            account: account,\n            message: message\n          });\n        case 11:\n          signedMessages = _context8.sent;\n          return _context8.abrupt(\"return\", signedMessages[0].signature);\n        case 15:\n          _context8.prev = 15;\n          _context8.t0 = _context8[\"catch\"](8);\n          throw new WalletSignMessageError(_context8.t0 === null || _context8.t0 === void 0 ? void 0 : _context8.t0.message, _context8.t0);\n        case 18:\n          _context8.next = 24;\n          break;\n        case 20:\n          _context8.prev = 20;\n          _context8.t1 = _context8[\"catch\"](0);\n          this.emit('error', _context8.t1);\n          throw _context8.t1;\n        case 24:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, this, [[0, 20], [8, 15]]);\n  }));\n  function _StandardWalletAdapter_signMessage(_x6) {\n    return _StandardWalletAdapter_signMessage2.apply(this, arguments);\n  }\n  return _StandardWalletAdapter_signMessage;\n}(), _StandardWalletAdapter_signIn = /*#__PURE__*/function () {\n  var _StandardWalletAdapter_signIn2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n    var input,\n      output,\n      _yield$__classPrivate5,\n      _yield$__classPrivate6,\n      _args9 = arguments;\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          input = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n          _context9.prev = 1;\n          if (SolanaSignIn in __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features) {\n            _context9.next = 4;\n            break;\n          }\n          throw new WalletConfigError();\n        case 4:\n          _context9.prev = 4;\n          _context9.next = 7;\n          return __classPrivateFieldGet(this, _StandardWalletAdapter_wallet, \"f\").features[SolanaSignIn].signIn(input);\n        case 7:\n          _yield$__classPrivate5 = _context9.sent;\n          _yield$__classPrivate6 = _slicedToArray(_yield$__classPrivate5, 1);\n          output = _yield$__classPrivate6[0];\n          _context9.next = 15;\n          break;\n        case 12:\n          _context9.prev = 12;\n          _context9.t0 = _context9[\"catch\"](4);\n          throw new WalletSignInError(_context9.t0 === null || _context9.t0 === void 0 ? void 0 : _context9.t0.message, _context9.t0);\n        case 15:\n          if (output) {\n            _context9.next = 17;\n            break;\n          }\n          throw new WalletSignInError();\n        case 17:\n          __classPrivateFieldGet(this, _StandardWalletAdapter_instances, \"m\", _StandardWalletAdapter_connected).call(this, output.account);\n          return _context9.abrupt(\"return\", output);\n        case 21:\n          _context9.prev = 21;\n          _context9.t1 = _context9[\"catch\"](1);\n          this.emit('error', _context9.t1);\n          throw _context9.t1;\n        case 25:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, this, [[1, 21], [4, 12]]);\n  }));\n  function _StandardWalletAdapter_signIn() {\n    return _StandardWalletAdapter_signIn2.apply(this, arguments);\n  }\n  return _StandardWalletAdapter_signIn;\n}();","map":{"version":3,"names":["BaseWalletAdapter","isVersionedTransaction","WalletAccountError","WalletConfigError","WalletConnectionError","WalletDisconnectedError","WalletDisconnectionError","WalletError","WalletNotConnectedError","WalletNotReadyError","WalletPublicKeyError","WalletReadyState","WalletSendTransactionError","WalletSignInError","WalletSignMessageError","WalletSignTransactionError","SolanaSignAndSendTransaction","SolanaSignIn","SolanaSignMessage","SolanaSignTransaction","getChainForEndpoint","getCommitment","PublicKey","Transaction","VersionedTransaction","StandardConnect","StandardDisconnect","StandardEvents","arraysEqual","bs58","StandardWalletAdapter","_BaseWalletAdapter","_inherits","_super","_createSuper","_ref","_this","wallet","_classCallCheck","call","_StandardWalletAdapter_account","set","_assertThisInitialized","_StandardWalletAdapter_publicKey","_StandardWalletAdapter_connecting","_StandardWalletAdapter_disconnecting","_StandardWalletAdapter_off","_StandardWalletAdapter_supportedTransactionVersions","_StandardWalletAdapter_wallet","_StandardWalletAdapter_readyState","window","document","Unsupported","Installed","_StandardWalletAdapter_changed","properties","account","__classPrivateFieldGet","accounts","_StandardWalletAdapter_instances","_StandardWalletAdapter_connected","emit","_StandardWalletAdapter_disconnected","_StandardWalletAdapter_reset","__classPrivateFieldSet","features","on","_createClass","key","get","name","icon","value","destroy","off","_autoConnect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","_StandardWalletAdapter_connect","silent","stop","autoConnect","apply","arguments","_connect","_callee2","_callee2$","_context2","connect","_disconnect","_callee3","_callee3$","_context3","disconnect","t0","message","finish","_sendTransaction","_callee4","transaction","connection","options","feature","chain","signers","sendOptions","serializedTransaction","_transaction","_yield$__classPrivate","_yield$__classPrivate2","output","_yield$__classPrivate3","_yield$__classPrivate4","_output","_args4","_callee4$","_context4","length","undefined","includes","rpcEndpoint","chains","_objectWithoutProperties","_excluded","sign","serialize","prepareTransaction","sent","partialSign","_toConsumableArray","Uint8Array","requireAllSignatures","verifySignatures","signAndSendTransaction","preflightCommitment","commitment","skipPreflight","maxRetries","minContextSlot","_slicedToArray","encode","signature","signTransaction","sendRawTransaction","signedTransaction","_objectSpread","t1","sendTransaction","_x","_x2","_callee5","input","_callee5$","_context5","connected","connecting","_x3","_StandardWalletAdapter_connect2","publicKey","address","error","_classPrivateFieldGe","_classPrivateFieldGe2","supportedTransactionVersions","Set","_StandardWalletAdapter_signTransaction","signAllTransactions","_StandardWalletAdapter_signAllTransactions","signMessage","_StandardWalletAdapter_signMessage","signIn","_StandardWalletAdapter_signIn","_StandardWalletAdapter_signTransaction2","_callee6","signedTransactions","_callee6$","_context6","deserialize","from","_x4","_StandardWalletAdapter_signAllTransactions2","_callee7","transactions","_classPrivateFieldGe3","_callee7$","_context7","map","index","_x5","_StandardWalletAdapter_signMessage2","_callee8","signedMessages","_callee8$","_context8","_x6","_StandardWalletAdapter_signIn2","_callee9","_yield$__classPrivate5","_yield$__classPrivate6","_args9","_callee9$","_context9"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@solana/wallet-standard-wallet-adapter-base/src/adapter.ts"],"sourcesContent":["import {\n    BaseWalletAdapter,\n    isVersionedTransaction,\n    type SendTransactionOptions,\n    type StandardWalletAdapter as StandardWalletAdapterType,\n    type SupportedTransactionVersions,\n    WalletAccountError,\n    type WalletAdapterCompatibleStandardWallet,\n    WalletConfigError,\n    WalletConnectionError,\n    WalletDisconnectedError,\n    WalletDisconnectionError,\n    WalletError,\n    type WalletName,\n    WalletNotConnectedError,\n    WalletNotReadyError,\n    WalletPublicKeyError,\n    WalletReadyState,\n    WalletSendTransactionError,\n    WalletSignInError,\n    WalletSignMessageError,\n    WalletSignTransactionError,\n} from '@solana/wallet-adapter-base';\nimport {\n    SolanaSignAndSendTransaction,\n    type SolanaSignAndSendTransactionFeature,\n    SolanaSignIn,\n    type SolanaSignInInput,\n    type SolanaSignInOutput,\n    SolanaSignMessage,\n    SolanaSignTransaction,\n    type SolanaSignTransactionFeature,\n} from '@solana/wallet-standard-features';\nimport { getChainForEndpoint, getCommitment } from '@solana/wallet-standard-util';\nimport type { Connection, TransactionSignature } from '@solana/web3.js';\nimport { PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport type { WalletAccount } from '@wallet-standard/base';\nimport {\n    StandardConnect,\n    type StandardConnectInput,\n    StandardDisconnect,\n    StandardEvents,\n    type StandardEventsListeners,\n} from '@wallet-standard/features';\nimport { arraysEqual } from '@wallet-standard/wallet';\nimport bs58 from 'bs58';\n\n/** TODO: docs */\nexport interface StandardWalletAdapterConfig {\n    wallet: WalletAdapterCompatibleStandardWallet;\n}\n\n/** TODO: docs */\nexport class StandardWalletAdapter extends BaseWalletAdapter implements StandardWalletAdapterType {\n    #account: WalletAccount | null;\n    #publicKey: PublicKey | null;\n    #connecting: boolean;\n    #disconnecting: boolean;\n    #off: (() => void) | null;\n    #supportedTransactionVersions: SupportedTransactionVersions;\n    readonly #wallet: WalletAdapterCompatibleStandardWallet;\n    readonly #readyState: WalletReadyState =\n        typeof window === 'undefined' || typeof document === 'undefined'\n            ? WalletReadyState.Unsupported\n            : WalletReadyState.Installed;\n\n    get name() {\n        return this.#wallet.name as WalletName;\n    }\n\n    get url() {\n        return 'https://github.com/solana-labs/wallet-standard';\n    }\n\n    get icon() {\n        return this.#wallet.icon;\n    }\n\n    get readyState() {\n        return this.#readyState;\n    }\n\n    get publicKey() {\n        return this.#publicKey;\n    }\n\n    get connecting() {\n        return this.#connecting;\n    }\n\n    get supportedTransactionVersions() {\n        return this.#supportedTransactionVersions;\n    }\n\n    get wallet(): WalletAdapterCompatibleStandardWallet {\n        return this.#wallet;\n    }\n\n    get standard() {\n        return true as const;\n    }\n\n    constructor({ wallet }: StandardWalletAdapterConfig) {\n        super();\n\n        this.#wallet = wallet;\n        this.#account = null;\n        this.#publicKey = null;\n        this.#connecting = false;\n        this.#disconnecting = false;\n        this.#off = this.#wallet.features[StandardEvents].on('change', this.#changed);\n\n        this.#reset();\n    }\n\n    destroy(): void {\n        this.#account = null;\n        this.#publicKey = null;\n        this.#connecting = false;\n        this.#disconnecting = false;\n\n        const off = this.#off;\n        if (off) {\n            this.#off = null;\n            off();\n        }\n    }\n\n    async autoConnect(): Promise<void> {\n        return this.#connect({ silent: true });\n    }\n\n    async connect(): Promise<void> {\n        return this.#connect();\n    }\n\n    async #connect(input?: StandardConnectInput): Promise<void> {\n        try {\n            if (this.connected || this.connecting) return;\n            if (this.#readyState !== WalletReadyState.Installed) throw new WalletNotReadyError();\n\n            this.#connecting = true;\n\n            if (!this.#wallet.accounts.length) {\n                try {\n                    await this.#wallet.features[StandardConnect].connect(input);\n                } catch (error: any) {\n                    throw new WalletConnectionError(error?.message, error);\n                }\n            }\n\n            const account = this.#wallet.accounts[0];\n            if (!account) throw new WalletAccountError();\n\n            this.#connected(account);\n        } catch (error: any) {\n            this.emit('error', error);\n            throw error;\n        } finally {\n            this.#connecting = false;\n        }\n    }\n\n    async disconnect(): Promise<void> {\n        if (StandardDisconnect in this.#wallet.features) {\n            try {\n                this.#disconnecting = true;\n                await this.#wallet.features[StandardDisconnect].disconnect();\n            } catch (error: any) {\n                this.emit('error', new WalletDisconnectionError(error?.message, error));\n            } finally {\n                this.#disconnecting = false;\n            }\n        }\n\n        this.#disconnected();\n    }\n\n    #connected(account: WalletAccount) {\n        let publicKey: PublicKey;\n        try {\n            // Use account.address instead of account.publicKey since address could be a PDA\n            publicKey = new PublicKey(account.address);\n        } catch (error: any) {\n            throw new WalletPublicKeyError(error?.message, error);\n        }\n\n        this.#account = account;\n        this.#publicKey = publicKey;\n        this.#reset();\n        this.emit('connect', publicKey);\n    }\n\n    #disconnected(): void {\n        this.#account = null;\n        this.#publicKey = null;\n        this.#reset();\n        this.emit('disconnect');\n    }\n\n    #reset() {\n        const supportedTransactionVersions =\n            SolanaSignAndSendTransaction in this.#wallet.features\n                ? this.#wallet.features[SolanaSignAndSendTransaction].supportedTransactionVersions\n                : this.#wallet.features[SolanaSignTransaction].supportedTransactionVersions;\n        this.#supportedTransactionVersions = arraysEqual(supportedTransactionVersions, ['legacy'])\n            ? null\n            : new Set(supportedTransactionVersions);\n\n        if (SolanaSignTransaction in this.#wallet.features && this.#account?.features.includes(SolanaSignTransaction)) {\n            this.signTransaction = this.#signTransaction;\n            this.signAllTransactions = this.#signAllTransactions;\n        } else {\n            delete this.signTransaction;\n            delete this.signAllTransactions;\n        }\n\n        if (SolanaSignMessage in this.#wallet.features && this.#account?.features.includes(SolanaSignMessage)) {\n            this.signMessage = this.#signMessage;\n        } else {\n            delete this.signMessage;\n        }\n\n        if (SolanaSignIn in this.#wallet.features) {\n            this.signIn = this.#signIn;\n        } else {\n            delete this.signIn;\n        }\n    }\n\n    #changed: StandardEventsListeners['change'] = (properties) => {\n        // If accounts have changed on the wallet, reflect this on the adapter.\n        if ('accounts' in properties) {\n            const account = this.#wallet.accounts[0];\n            // If the adapter isn't connected, or is disconnecting, or the first account hasn't changed, do nothing.\n            if (this.#account && !this.#disconnecting && account !== this.#account) {\n                // If there's a connected account, connect the adapter. Otherwise, disconnect it.\n                if (account) {\n                    // Connect the adapter.\n                    this.#connected(account);\n                } else {\n                    // Emit an error because the wallet spontaneously disconnected.\n                    this.emit('error', new WalletDisconnectedError());\n                    // Disconnect the adapter.\n                    this.#disconnected();\n                }\n            }\n        }\n\n        // After reflecting account changes, if features have changed on the wallet, reflect this on the adapter.\n        if ('features' in properties) {\n            this.#reset();\n        }\n    };\n\n    async sendTransaction<T extends Transaction | VersionedTransaction>(\n        transaction: T,\n        connection: Connection,\n        options: SendTransactionOptions = {}\n    ): Promise<TransactionSignature> {\n        try {\n            const account = this.#account;\n            if (!account) throw new WalletNotConnectedError();\n\n            let feature: typeof SolanaSignAndSendTransaction | typeof SolanaSignTransaction;\n            if (SolanaSignAndSendTransaction in this.#wallet.features) {\n                if (account.features.includes(SolanaSignAndSendTransaction)) {\n                    feature = SolanaSignAndSendTransaction;\n                } else if (\n                    SolanaSignTransaction in this.#wallet.features &&\n                    account.features.includes(SolanaSignTransaction)\n                ) {\n                    feature = SolanaSignTransaction;\n                } else {\n                    throw new WalletAccountError();\n                }\n            } else if (SolanaSignTransaction in this.#wallet.features) {\n                if (!account.features.includes(SolanaSignTransaction)) throw new WalletAccountError();\n                feature = SolanaSignTransaction;\n            } else {\n                throw new WalletConfigError();\n            }\n\n            const chain = getChainForEndpoint(connection.rpcEndpoint);\n            if (!account.chains.includes(chain)) throw new WalletSendTransactionError();\n\n            try {\n                const { signers, ...sendOptions } = options;\n\n                let serializedTransaction: Uint8Array;\n                if (isVersionedTransaction(transaction)) {\n                    signers?.length && transaction.sign(signers);\n                    serializedTransaction = transaction.serialize();\n                } else {\n                    transaction = (await this.prepareTransaction(transaction, connection, sendOptions)) as T;\n                    signers?.length && (transaction as Transaction).partialSign(...signers);\n                    serializedTransaction = new Uint8Array(\n                        (transaction as Transaction).serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        })\n                    );\n                }\n\n                if (feature === SolanaSignAndSendTransaction) {\n                    const [output] = await (this.#wallet.features as SolanaSignAndSendTransactionFeature)[\n                        SolanaSignAndSendTransaction\n                    ].signAndSendTransaction({\n                        account,\n                        chain,\n                        transaction: serializedTransaction,\n                        options: {\n                            preflightCommitment: getCommitment(\n                                sendOptions.preflightCommitment || connection.commitment\n                            ),\n                            skipPreflight: sendOptions.skipPreflight,\n                            maxRetries: sendOptions.maxRetries,\n                            minContextSlot: sendOptions.minContextSlot,\n                        },\n                    });\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    return bs58.encode(output!.signature);\n                } else {\n                    const [output] = await (this.#wallet.features as SolanaSignTransactionFeature)[\n                        SolanaSignTransaction\n                    ].signTransaction({\n                        account,\n                        chain,\n                        transaction: serializedTransaction,\n                        options: {\n                            preflightCommitment: getCommitment(\n                                sendOptions.preflightCommitment || connection.commitment\n                            ),\n                            minContextSlot: sendOptions.minContextSlot,\n                        },\n                    });\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    return await connection.sendRawTransaction(output!.signedTransaction, {\n                        ...sendOptions,\n                        preflightCommitment: getCommitment(sendOptions.preflightCommitment || connection.commitment),\n                    });\n                }\n            } catch (error: any) {\n                if (error instanceof WalletError) throw error;\n                throw new WalletSendTransactionError(error?.message, error);\n            }\n        } catch (error: any) {\n            this.emit('error', error);\n            throw error;\n        }\n    }\n\n    signTransaction: (<T extends Transaction | VersionedTransaction>(transaction: T) => Promise<T>) | undefined;\n    async #signTransaction<T extends Transaction | VersionedTransaction>(transaction: T): Promise<T> {\n        try {\n            const account = this.#account;\n            if (!account) throw new WalletNotConnectedError();\n\n            if (!(SolanaSignTransaction in this.#wallet.features)) throw new WalletConfigError();\n            if (!account.features.includes(SolanaSignTransaction)) throw new WalletAccountError();\n\n            try {\n                const signedTransactions = await this.#wallet.features[SolanaSignTransaction].signTransaction({\n                    account,\n                    transaction: isVersionedTransaction(transaction)\n                        ? transaction.serialize()\n                        : new Uint8Array(\n                              transaction.serialize({\n                                  requireAllSignatures: false,\n                                  verifySignatures: false,\n                              })\n                          ),\n                });\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const serializedTransaction = signedTransactions[0]!.signedTransaction;\n\n                return (\n                    isVersionedTransaction(transaction)\n                        ? VersionedTransaction.deserialize(serializedTransaction)\n                        : Transaction.from(serializedTransaction)\n                ) as T;\n            } catch (error: any) {\n                if (error instanceof WalletError) throw error;\n                throw new WalletSignTransactionError(error?.message, error);\n            }\n        } catch (error: any) {\n            this.emit('error', error);\n            throw error;\n        }\n    }\n\n    signAllTransactions: (<T extends Transaction | VersionedTransaction>(transaction: T[]) => Promise<T[]>) | undefined;\n    async #signAllTransactions<T extends Transaction | VersionedTransaction>(transactions: T[]): Promise<T[]> {\n        try {\n            const account = this.#account;\n            if (!account) throw new WalletNotConnectedError();\n\n            if (!(SolanaSignTransaction in this.#wallet.features)) throw new WalletConfigError();\n            if (!account.features.includes(SolanaSignTransaction)) throw new WalletAccountError();\n\n            try {\n                const signedTransactions = await this.#wallet.features[SolanaSignTransaction].signTransaction(\n                    ...transactions.map((transaction) => ({\n                        account,\n                        transaction: isVersionedTransaction(transaction)\n                            ? transaction.serialize()\n                            : new Uint8Array(\n                                  transaction.serialize({\n                                      requireAllSignatures: false,\n                                      verifySignatures: false,\n                                  })\n                              ),\n                    }))\n                );\n\n                return transactions.map((transaction, index) => {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const signedTransaction = signedTransactions[index]!.signedTransaction;\n\n                    return (\n                        isVersionedTransaction(transaction)\n                            ? VersionedTransaction.deserialize(signedTransaction)\n                            : Transaction.from(signedTransaction)\n                    ) as T;\n                });\n            } catch (error: any) {\n                throw new WalletSignTransactionError(error?.message, error);\n            }\n        } catch (error: any) {\n            this.emit('error', error);\n            throw error;\n        }\n    }\n\n    signMessage: ((message: Uint8Array) => Promise<Uint8Array>) | undefined;\n    async #signMessage(message: Uint8Array): Promise<Uint8Array> {\n        try {\n            const account = this.#account;\n            if (!account) throw new WalletNotConnectedError();\n\n            if (!(SolanaSignMessage in this.#wallet.features)) throw new WalletConfigError();\n            if (!account.features.includes(SolanaSignMessage)) throw new WalletAccountError();\n\n            try {\n                const signedMessages = await this.#wallet.features[SolanaSignMessage].signMessage({\n                    account,\n                    message,\n                });\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                return signedMessages[0]!.signature;\n            } catch (error: any) {\n                throw new WalletSignMessageError(error?.message, error);\n            }\n        } catch (error: any) {\n            this.emit('error', error);\n            throw error;\n        }\n    }\n\n    signIn: ((input?: SolanaSignInInput) => Promise<SolanaSignInOutput>) | undefined;\n    async #signIn(input: SolanaSignInInput = {}): Promise<SolanaSignInOutput> {\n        try {\n            if (!(SolanaSignIn in this.#wallet.features)) throw new WalletConfigError();\n\n            let output: SolanaSignInOutput | undefined;\n            try {\n                [output] = await this.#wallet.features[SolanaSignIn].signIn(input);\n            } catch (error: any) {\n                throw new WalletSignInError(error?.message, error);\n            }\n\n            if (!output) throw new WalletSignInError();\n            this.#connected(output.account);\n            return output;\n        } catch (error: any) {\n            this.emit('error', error);\n            throw error;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}