{"ast":null,"code":"var _jsxFileName = \"/Users/wuhuan/gif-portal-starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst App = () => {\n  _s();\n  const checkIfWalletIsConnected = async () => {\n    var _window, _window$solana;\n    // We're using optional chaining (question mark) to check if the object is null\n    if ((_window = window) !== null && _window !== void 0 && (_window$solana = _window.solana) !== null && _window$solana !== void 0 && _window$solana.isPhantom) {\n      console.log('Phantom wallet found!');\n    } else {\n      alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\n    }\n  };\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  const connectWallet = async () => {};\n\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header\",\n          children: \"\\uD83D\\uDDBC GIF Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"View your GIF collection in the metaverse \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), renderNotConnectedContainer()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","twitterLogo","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","App","_s","checkIfWalletIsConnected","_window","_window$solana","window","solana","isPhantom","console","log","alert","onLoad","addEventListener","removeEventListener","connectWallet","renderNotConnectedContainer","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/wuhuan/gif-portal-starter/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  const checkIfWalletIsConnected = async () => {\n    // We're using optional chaining (question mark) to check if the object is null\n      if (window?.solana?.isPhantom) {\n        console.log('Phantom wallet found!');\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\n      }\n    };\n    useEffect(() => {\n      const onLoad = async () => {\n        await checkIfWalletIsConnected();\n      };\n      window.addEventListener('load', onLoad);\n      return () => window.removeEventListener('load', onLoad);\n    }, []);\n    \n  const connectWallet = async () => {};\n\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header\">ðŸ–¼ GIF Portal</p>\n          <p className=\"sub-text\">\n            View your GIF collection in the metaverse âœ¨\n          </p>\n          {renderNotConnectedContainer()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}