{"ast":null,"code":"import _classCallCheck from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport var HMAC = /*#__PURE__*/function (_Hash) {\n  _inherits(HMAC, _Hash);\n  var _super = _createSuper(HMAC);\n  function HMAC(hash, _key) {\n    var _this;\n    _classCallCheck(this, HMAC);\n    _this = _super.call(this);\n    _this.finished = false;\n    _this.destroyed = false;\n    assertHash(hash);\n    var key = toBytes(_key);\n    _this.iHash = hash.create();\n    if (typeof _this.iHash.update !== 'function') throw new Error('Expected instance of class which extends utils.Hash');\n    _this.blockLen = _this.iHash.blockLen;\n    _this.outputLen = _this.iHash.outputLen;\n    var blockLen = _this.blockLen;\n    var pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (var i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    _this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    _this.oHash = hash.create();\n    // Undo internal XOR && apply outer XOR\n    for (var _i = 0; _i < pad.length; _i++) pad[_i] ^= 0x36 ^ 0x5c;\n    _this.oHash.update(pad);\n    pad.fill(0);\n    return _this;\n  }\n  _createClass(HMAC, [{\n    key: \"update\",\n    value: function update(buf) {\n      assertExists(this);\n      this.iHash.update(buf);\n      return this;\n    }\n  }, {\n    key: \"digestInto\",\n    value: function digestInto(out) {\n      assertExists(this);\n      assertBytes(out, this.outputLen);\n      this.finished = true;\n      this.iHash.digestInto(out);\n      this.oHash.update(out);\n      this.oHash.digestInto(out);\n      this.destroy();\n    }\n  }, {\n    key: \"digest\",\n    value: function digest() {\n      var out = new Uint8Array(this.oHash.outputLen);\n      this.digestInto(out);\n      return out;\n    }\n  }, {\n    key: \"_cloneInto\",\n    value: function _cloneInto(to) {\n      // Create new instance without calling constructor since key already in state and we don't know it.\n      to || (to = Object.create(Object.getPrototypeOf(this), {}));\n      var oHash = this.oHash,\n        iHash = this.iHash,\n        finished = this.finished,\n        destroyed = this.destroyed,\n        blockLen = this.blockLen,\n        outputLen = this.outputLen;\n      to = to;\n      to.finished = finished;\n      to.destroyed = destroyed;\n      to.blockLen = blockLen;\n      to.outputLen = outputLen;\n      to.oHash = oHash._cloneInto(to.oHash);\n      to.iHash = iHash._cloneInto(to.iHash);\n      return to;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n      this.oHash.destroy();\n      this.iHash.destroy();\n    }\n  }]);\n  return HMAC;\n}(Hash);\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport var hmac = function hmac(hash, key, message) {\n  return new HMAC(hash, key).update(message).digest();\n};\nhmac.create = function (hash, key) {\n  return new HMAC(hash, key);\n};","map":{"version":3,"names":["hash","assertHash","bytes","assertBytes","exists","assertExists","Hash","toBytes","HMAC","_Hash","_inherits","_super","_createSuper","_key","_this","_classCallCheck","call","finished","destroyed","key","iHash","create","update","Error","blockLen","outputLen","pad","Uint8Array","set","length","digest","i","oHash","fill","_createClass","value","buf","digestInto","out","destroy","_cloneInto","to","Object","getPrototypeOf","hmac","message"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@noble/hashes/src/hmac.ts"],"sourcesContent":["import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}