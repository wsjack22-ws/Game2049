{"ast":null,"code":"import _classCallCheck from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nvar u8a = function u8a(a) {\n  return a instanceof Uint8Array;\n};\n// Cast array to different type\nexport var u8 = function u8(arr) {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n};\nexport var u32 = function u32(arr) {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n};\n// Cast array to view\nexport var createView = function createView(arr) {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n};\n// The rotate right (circular right shift) operation for uint32\nexport var rotr = function rotr(word, shift) {\n  return word << 32 - shift | word >>> shift;\n};\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport var isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\nvar hexes = /* @__PURE__ */Array.from({\n  length: 256\n}, function (_, i) {\n  return i.toString(16).padStart(2, '0');\n});\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  var hex = '';\n  for (var i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  var len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  var array = new Uint8Array(len / 2);\n  for (var i = 0; i < array.length; i++) {\n    var j = i * 2;\n    var hexByte = hex.slice(j, j + 2);\n    var byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport var nextTick = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function nextTick() {\n    return _ref.apply(this, arguments);\n  };\n}();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport function asyncLoop(_x, _x2, _x3) {\n  return _asyncLoop.apply(this, arguments);\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction _asyncLoop() {\n  _asyncLoop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(iters, tick, cb) {\n    var ts, i, diff;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          ts = Date.now();\n          i = 0;\n        case 2:\n          if (!(i < iters)) {\n            _context2.next = 13;\n            break;\n          }\n          cb(i);\n          // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n          diff = Date.now() - ts;\n          if (!(diff >= 0 && diff < tick)) {\n            _context2.next = 7;\n            break;\n          }\n          return _context2.abrupt(\"continue\", 10);\n        case 7:\n          _context2.next = 9;\n          return nextTick();\n        case 9:\n          ts += diff;\n        case 10:\n          i++;\n          _context2.next = 2;\n          break;\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _asyncLoop.apply(this, arguments);\n}\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') throw new Error(\"utf8ToBytes expected string, got \".concat(typeof str));\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(\"expected Uint8Array, got \".concat(typeof data));\n  return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n  var r = new Uint8Array(arrays.reduce(function (sum, a) {\n    return sum + a.length;\n  }, 0));\n  var pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach(function (a) {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n// For runtime check if class implements interface\nexport var Hash = /*#__PURE__*/function () {\n  function Hash() {\n    _classCallCheck(this, Hash);\n  }\n  _createClass(Hash, [{\n    key: \"clone\",\n    value:\n    // Safe version that clones internal state\n    function clone() {\n      return this._cloneInto();\n    }\n  }]);\n  return Hash;\n}();\nvar toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]') throw new Error('Options should be object or undefined');\n  var merged = Object.assign(defaults, opts);\n  return merged;\n}\nexport function wrapConstructor(hashCons) {\n  var hashC = function hashC(msg) {\n    return hashCons().update(toBytes(msg)).digest();\n  };\n  var tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = function () {\n    return hashCons();\n  };\n  return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n  var hashC = function hashC(msg, opts) {\n    return hashCons(opts).update(toBytes(msg)).digest();\n  };\n  var tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = function (opts) {\n    return hashCons(opts);\n  };\n  return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n  var hashC = function hashC(msg, opts) {\n    return hashCons(opts).update(toBytes(msg)).digest();\n  };\n  var tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = function (opts) {\n    return hashCons(opts);\n  };\n  return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes() {\n  var bytesLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}","map":{"version":3,"names":["crypto","u8a","a","Uint8Array","u8","arr","buffer","byteOffset","byteLength","u32","Uint32Array","Math","floor","createView","DataView","rotr","word","shift","isLE","Error","hexes","Array","from","length","_","i","toString","padStart","bytesToHex","bytes","hex","hexToBytes","len","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nextTick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","apply","arguments","asyncLoop","_x","_x2","_x3","_asyncLoop","_callee2","iters","tick","cb","ts","diff","_callee2$","_context2","Date","now","abrupt","utf8ToBytes","str","concat","TextEncoder","encode","toBytes","data","concatBytes","_len","arrays","_key","r","reduce","sum","pad","forEach","set","Hash","_classCallCheck","_createClass","key","value","clone","_cloneInto","toStr","checkOpts","defaults","opts","undefined","call","merged","Object","assign","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","outputLen","blockLen","create","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","bytesLength","getRandomValues"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@noble/hashes/src/utils.ts"],"sourcesContent":["/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}