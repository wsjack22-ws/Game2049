{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { WalletNotConnectedError, WalletNotReadyError, WalletReadyState } from '@solana/wallet-adapter-base';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { WalletNotSelectedError } from './errors.js';\nimport { WalletContext } from './useWallet.js';\nexport function WalletProviderBase(_ref) {\n  var children = _ref.children,\n    adapters = _ref.wallets,\n    adapter = _ref.adapter,\n    isUnloadingRef = _ref.isUnloadingRef,\n    onAutoConnectRequest = _ref.onAutoConnectRequest,\n    onConnectError = _ref.onConnectError,\n    onError = _ref.onError,\n    onSelectWallet = _ref.onSelectWallet;\n  var isConnectingRef = useRef(false);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    connecting = _useState2[0],\n    setConnecting = _useState2[1];\n  var isDisconnectingRef = useRef(false);\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    disconnecting = _useState4[0],\n    setDisconnecting = _useState4[1];\n  var _useState5 = useState(function () {\n      var _adapter$publicKey;\n      return (_adapter$publicKey = adapter === null || adapter === void 0 ? void 0 : adapter.publicKey) !== null && _adapter$publicKey !== void 0 ? _adapter$publicKey : null;\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    publicKey = _useState6[0],\n    setPublicKey = _useState6[1];\n  var _useState7 = useState(function () {\n      var _adapter$connected;\n      return (_adapter$connected = adapter === null || adapter === void 0 ? void 0 : adapter.connected) !== null && _adapter$connected !== void 0 ? _adapter$connected : false;\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    connected = _useState8[0],\n    setConnected = _useState8[1];\n  /**\n   * Store the error handlers as refs so that a change in the\n   * custom error handler does not recompute other dependencies.\n   */\n  var onErrorRef = useRef(onError);\n  useEffect(function () {\n    onErrorRef.current = onError;\n    return function () {\n      onErrorRef.current = undefined;\n    };\n  }, [onError]);\n  var handleErrorRef = useRef(function (error, adapter) {\n    if (!isUnloadingRef.current) {\n      if (onErrorRef.current) {\n        onErrorRef.current(error, adapter);\n      } else {\n        console.error(error, adapter);\n        if (error instanceof WalletNotReadyError && typeof window !== 'undefined' && adapter) {\n          window.open(adapter.url, '_blank');\n        }\n      }\n    }\n    return error;\n  });\n  // Wrap adapters to conform to the `Wallet` interface\n  var _useState9 = useState(function () {\n      return adapters.map(function (adapter) {\n        return {\n          adapter: adapter,\n          readyState: adapter.readyState\n        };\n      }).filter(function (_ref2) {\n        var readyState = _ref2.readyState;\n        return readyState !== WalletReadyState.Unsupported;\n      });\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    wallets = _useState10[0],\n    setWallets = _useState10[1];\n  // When the adapters change, start to listen for changes to their `readyState`\n  useEffect(function () {\n    // When the adapters change, wrap them to conform to the `Wallet` interface\n    setWallets(function (wallets) {\n      return adapters.map(function (adapter, index) {\n        var wallet = wallets[index];\n        // If the wallet hasn't changed, return the same instance\n        return wallet && wallet.adapter === adapter && wallet.readyState === adapter.readyState ? wallet : {\n          adapter: adapter,\n          readyState: adapter.readyState\n        };\n      }).filter(function (_ref3) {\n        var readyState = _ref3.readyState;\n        return readyState !== WalletReadyState.Unsupported;\n      });\n    });\n    function handleReadyStateChange(readyState) {\n      var _this = this;\n      setWallets(function (prevWallets) {\n        var index = prevWallets.findIndex(function (_ref4) {\n          var adapter = _ref4.adapter;\n          return adapter === _this;\n        });\n        if (index === -1) return prevWallets;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var adapter = prevWallets[index].adapter;\n        return [].concat(_toConsumableArray(prevWallets.slice(0, index)), [{\n          adapter: adapter,\n          readyState: readyState\n        }], _toConsumableArray(prevWallets.slice(index + 1))).filter(function (_ref5) {\n          var readyState = _ref5.readyState;\n          return readyState !== WalletReadyState.Unsupported;\n        });\n      });\n    }\n    adapters.forEach(function (adapter) {\n      return adapter.on('readyStateChange', handleReadyStateChange, adapter);\n    });\n    return function () {\n      adapters.forEach(function (adapter) {\n        return adapter.off('readyStateChange', handleReadyStateChange, adapter);\n      });\n    };\n  }, [adapter, adapters]);\n  var wallet = useMemo(function () {\n    var _wallets$find;\n    return (_wallets$find = wallets.find(function (wallet) {\n      return wallet.adapter === adapter;\n    })) !== null && _wallets$find !== void 0 ? _wallets$find : null;\n  }, [adapter, wallets]);\n  // Setup and teardown event listeners when the adapter changes\n  useEffect(function () {\n    if (!adapter) return;\n    var handleConnect = function handleConnect(publicKey) {\n      setPublicKey(publicKey);\n      isConnectingRef.current = false;\n      setConnecting(false);\n      setConnected(true);\n      isDisconnectingRef.current = false;\n      setDisconnecting(false);\n    };\n    var handleDisconnect = function handleDisconnect() {\n      if (isUnloadingRef.current) return;\n      setPublicKey(null);\n      isConnectingRef.current = false;\n      setConnecting(false);\n      setConnected(false);\n      isDisconnectingRef.current = false;\n      setDisconnecting(false);\n    };\n    var handleError = function handleError(error) {\n      handleErrorRef.current(error, adapter);\n    };\n    adapter.on('connect', handleConnect);\n    adapter.on('disconnect', handleDisconnect);\n    adapter.on('error', handleError);\n    return function () {\n      adapter.off('connect', handleConnect);\n      adapter.off('disconnect', handleDisconnect);\n      adapter.off('error', handleError);\n      handleDisconnect();\n    };\n  }, [adapter, isUnloadingRef]);\n  // When the adapter changes, clear the `autoConnect` tracking flag\n  var didAttemptAutoConnectRef = useRef(false);\n  useEffect(function () {\n    return function () {\n      didAttemptAutoConnectRef.current = false;\n    };\n  }, [adapter]);\n  // If auto-connect is enabled, request to connect when the adapter changes and is ready\n  useEffect(function () {\n    if (didAttemptAutoConnectRef.current || isConnectingRef.current || connected || !onAutoConnectRequest || !((wallet === null || wallet === void 0 ? void 0 : wallet.readyState) === WalletReadyState.Installed || (wallet === null || wallet === void 0 ? void 0 : wallet.readyState) === WalletReadyState.Loadable)) return;\n    isConnectingRef.current = true;\n    setConnecting(true);\n    didAttemptAutoConnectRef.current = true;\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return onAutoConnectRequest();\n          case 3:\n            _context.next = 8;\n            break;\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            onConnectError();\n            // Drop the error. It will be caught by `handleError` anyway.\n          case 8:\n            _context.prev = 8;\n            setConnecting(false);\n            isConnectingRef.current = false;\n            return _context.finish(8);\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 5, 8, 12]]);\n    }))();\n  }, [connected, onAutoConnectRequest, onConnectError, wallet]);\n  // Send a transaction using the provided connection\n  var sendTransaction = useCallback( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(transaction, connection, options) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (adapter) {\n              _context2.next = 2;\n              break;\n            }\n            throw handleErrorRef.current(new WalletNotSelectedError());\n          case 2:\n            if (connected) {\n              _context2.next = 4;\n              break;\n            }\n            throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n          case 4:\n            _context2.next = 6;\n            return adapter.sendTransaction(transaction, connection, options);\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function (_x, _x2, _x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), [adapter, connected]);\n  // Sign a transaction if the wallet supports it\n  var signTransaction = useMemo(function () {\n    return adapter && 'signTransaction' in adapter ? /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(transaction) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (connected) {\n                _context3.next = 2;\n                break;\n              }\n              throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n            case 2:\n              _context3.next = 4;\n              return adapter.signTransaction(transaction);\n            case 4:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function (_x4) {\n        return _ref8.apply(this, arguments);\n      };\n    }() : undefined;\n  }, [adapter, connected]);\n  // Sign multiple transactions if the wallet supports it\n  var signAllTransactions = useMemo(function () {\n    return adapter && 'signAllTransactions' in adapter ? /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(transactions) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (connected) {\n                _context4.next = 2;\n                break;\n              }\n              throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n            case 2:\n              _context4.next = 4;\n              return adapter.signAllTransactions(transactions);\n            case 4:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function (_x5) {\n        return _ref9.apply(this, arguments);\n      };\n    }() : undefined;\n  }, [adapter, connected]);\n  // Sign an arbitrary message if the wallet supports it\n  var signMessage = useMemo(function () {\n    return adapter && 'signMessage' in adapter ? /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(message) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (connected) {\n                _context5.next = 2;\n                break;\n              }\n              throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n            case 2:\n              _context5.next = 4;\n              return adapter.signMessage(message);\n            case 4:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function (_x6) {\n        return _ref10.apply(this, arguments);\n      };\n    }() : undefined;\n  }, [adapter, connected]);\n  // Sign in if the wallet supports it\n  var signIn = useMemo(function () {\n    return adapter && 'signIn' in adapter ? /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(input) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return adapter.signIn(input);\n            case 2:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function (_x7) {\n        return _ref11.apply(this, arguments);\n      };\n    }() : undefined;\n  }, [adapter]);\n  var handleConnect = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n    var adapter, readyState;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          if (!(isConnectingRef.current || isDisconnectingRef.current || wallet !== null && wallet !== void 0 && wallet.adapter.connected)) {\n            _context7.next = 2;\n            break;\n          }\n          return _context7.abrupt(\"return\");\n        case 2:\n          if (wallet) {\n            _context7.next = 4;\n            break;\n          }\n          throw handleErrorRef.current(new WalletNotSelectedError());\n        case 4:\n          adapter = wallet.adapter, readyState = wallet.readyState;\n          if (readyState === WalletReadyState.Installed || readyState === WalletReadyState.Loadable) {\n            _context7.next = 7;\n            break;\n          }\n          throw handleErrorRef.current(new WalletNotReadyError(), adapter);\n        case 7:\n          isConnectingRef.current = true;\n          setConnecting(true);\n          _context7.prev = 9;\n          _context7.next = 12;\n          return adapter.connect();\n        case 12:\n          _context7.next = 18;\n          break;\n        case 14:\n          _context7.prev = 14;\n          _context7.t0 = _context7[\"catch\"](9);\n          onConnectError();\n          throw _context7.t0;\n        case 18:\n          _context7.prev = 18;\n          setConnecting(false);\n          isConnectingRef.current = false;\n          return _context7.finish(18);\n        case 22:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[9, 14, 18, 22]]);\n  })), [onConnectError, wallet]);\n  var handleDisconnect = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          if (!isDisconnectingRef.current) {\n            _context8.next = 2;\n            break;\n          }\n          return _context8.abrupt(\"return\");\n        case 2:\n          if (adapter) {\n            _context8.next = 4;\n            break;\n          }\n          return _context8.abrupt(\"return\");\n        case 4:\n          isDisconnectingRef.current = true;\n          setDisconnecting(true);\n          _context8.prev = 6;\n          _context8.next = 9;\n          return adapter.disconnect();\n        case 9:\n          _context8.prev = 9;\n          setDisconnecting(false);\n          isDisconnectingRef.current = false;\n          return _context8.finish(9);\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[6,, 9, 13]]);\n  })), [adapter]);\n  return React.createElement(WalletContext.Provider, {\n    value: {\n      autoConnect: !!onAutoConnectRequest,\n      wallets: wallets,\n      wallet: wallet,\n      publicKey: publicKey,\n      connected: connected,\n      connecting: connecting,\n      disconnecting: disconnecting,\n      select: onSelectWallet,\n      connect: handleConnect,\n      disconnect: handleDisconnect,\n      sendTransaction: sendTransaction,\n      signTransaction: signTransaction,\n      signAllTransactions: signAllTransactions,\n      signMessage: signMessage,\n      signIn: signIn\n    }\n  }, children);\n}","map":{"version":3,"names":["WalletNotConnectedError","WalletNotReadyError","WalletReadyState","React","useCallback","useEffect","useMemo","useRef","useState","WalletNotSelectedError","WalletContext","WalletProviderBase","_ref","children","adapters","wallets","adapter","isUnloadingRef","onAutoConnectRequest","onConnectError","onError","onSelectWallet","isConnectingRef","_useState","_useState2","_slicedToArray","connecting","setConnecting","isDisconnectingRef","_useState3","_useState4","disconnecting","setDisconnecting","_useState5","_adapter$publicKey","publicKey","_useState6","setPublicKey","_useState7","_adapter$connected","connected","_useState8","setConnected","onErrorRef","current","undefined","handleErrorRef","error","console","window","open","url","_useState9","map","readyState","filter","_ref2","Unsupported","_useState10","setWallets","index","wallet","_ref3","handleReadyStateChange","_this","prevWallets","findIndex","_ref4","concat","_toConsumableArray","slice","_ref5","forEach","on","off","_wallets$find","find","handleConnect","handleDisconnect","handleError","didAttemptAutoConnectRef","Installed","Loadable","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","t0","finish","stop","sendTransaction","_ref7","_callee2","transaction","connection","options","_callee2$","_context2","abrupt","sent","_x","_x2","_x3","apply","arguments","signTransaction","_ref8","_callee3","_callee3$","_context3","_x4","signAllTransactions","_ref9","_callee4","transactions","_callee4$","_context4","_x5","signMessage","_ref10","_callee5","message","_callee5$","_context5","_x6","signIn","_ref11","_callee6","input","_callee6$","_context6","_x7","_callee7","_callee7$","_context7","connect","_callee8","_callee8$","_context8","disconnect","createElement","Provider","value","autoConnect","select"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@solana/wallet-adapter-react/src/WalletProviderBase.tsx"],"sourcesContent":["import {\n    type Adapter,\n    type MessageSignerWalletAdapterProps,\n    type SignerWalletAdapterProps,\n    type SignInMessageSignerWalletAdapterProps,\n    type WalletAdapterProps,\n    type WalletError,\n    type WalletName,\n    WalletNotConnectedError,\n    WalletNotReadyError,\n    WalletReadyState,\n} from '@solana/wallet-adapter-base';\nimport { type PublicKey } from '@solana/web3.js';\nimport React, { type ReactNode, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { WalletNotSelectedError } from './errors.js';\nimport { WalletContext } from './useWallet.js';\n\nexport interface WalletProviderBaseProps {\n    children: ReactNode;\n    wallets: Adapter[];\n    adapter: Adapter | null;\n    isUnloadingRef: React.RefObject<boolean>;\n    // NOTE: The presence/absence of this handler implies that auto-connect is enabled/disabled.\n    onAutoConnectRequest?: () => Promise<void>;\n    onConnectError: () => void;\n    onError?: (error: WalletError, adapter?: Adapter) => void;\n    onSelectWallet: (walletName: WalletName | null) => void;\n}\n\nexport function WalletProviderBase({\n    children,\n    wallets: adapters,\n    adapter,\n    isUnloadingRef,\n    onAutoConnectRequest,\n    onConnectError,\n    onError,\n    onSelectWallet,\n}: WalletProviderBaseProps) {\n    const isConnectingRef = useRef(false);\n    const [connecting, setConnecting] = useState(false);\n    const isDisconnectingRef = useRef(false);\n    const [disconnecting, setDisconnecting] = useState(false);\n    const [publicKey, setPublicKey] = useState(() => adapter?.publicKey ?? null);\n    const [connected, setConnected] = useState(() => adapter?.connected ?? false);\n\n    /**\n     * Store the error handlers as refs so that a change in the\n     * custom error handler does not recompute other dependencies.\n     */\n    const onErrorRef = useRef(onError);\n    useEffect(() => {\n        onErrorRef.current = onError;\n        return () => {\n            onErrorRef.current = undefined;\n        };\n    }, [onError]);\n    const handleErrorRef = useRef((error: WalletError, adapter?: Adapter) => {\n        if (!isUnloadingRef.current) {\n            if (onErrorRef.current) {\n                onErrorRef.current(error, adapter);\n            } else {\n                console.error(error, adapter);\n                if (error instanceof WalletNotReadyError && typeof window !== 'undefined' && adapter) {\n                    window.open(adapter.url, '_blank');\n                }\n            }\n        }\n        return error;\n    });\n\n    // Wrap adapters to conform to the `Wallet` interface\n    const [wallets, setWallets] = useState(() =>\n        adapters\n            .map((adapter) => ({\n                adapter,\n                readyState: adapter.readyState,\n            }))\n            .filter(({ readyState }) => readyState !== WalletReadyState.Unsupported)\n    );\n\n    // When the adapters change, start to listen for changes to their `readyState`\n    useEffect(() => {\n        // When the adapters change, wrap them to conform to the `Wallet` interface\n        setWallets((wallets) =>\n            adapters\n                .map((adapter, index) => {\n                    const wallet = wallets[index];\n                    // If the wallet hasn't changed, return the same instance\n                    return wallet && wallet.adapter === adapter && wallet.readyState === adapter.readyState\n                        ? wallet\n                        : {\n                              adapter: adapter,\n                              readyState: adapter.readyState,\n                          };\n                })\n                .filter(({ readyState }) => readyState !== WalletReadyState.Unsupported)\n        );\n        function handleReadyStateChange(this: Adapter, readyState: WalletReadyState) {\n            setWallets((prevWallets) => {\n                const index = prevWallets.findIndex(({ adapter }) => adapter === this);\n                if (index === -1) return prevWallets;\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const { adapter } = prevWallets[index]!;\n                return [\n                    ...prevWallets.slice(0, index),\n                    { adapter, readyState },\n                    ...prevWallets.slice(index + 1),\n                ].filter(({ readyState }) => readyState !== WalletReadyState.Unsupported);\n            });\n        }\n        adapters.forEach((adapter) => adapter.on('readyStateChange', handleReadyStateChange, adapter));\n        return () => {\n            adapters.forEach((adapter) => adapter.off('readyStateChange', handleReadyStateChange, adapter));\n        };\n    }, [adapter, adapters]);\n\n    const wallet = useMemo(() => wallets.find((wallet) => wallet.adapter === adapter) ?? null, [adapter, wallets]);\n\n    // Setup and teardown event listeners when the adapter changes\n    useEffect(() => {\n        if (!adapter) return;\n\n        const handleConnect = (publicKey: PublicKey) => {\n            setPublicKey(publicKey);\n            isConnectingRef.current = false;\n            setConnecting(false);\n            setConnected(true);\n            isDisconnectingRef.current = false;\n            setDisconnecting(false);\n        };\n\n        const handleDisconnect = () => {\n            if (isUnloadingRef.current) return;\n\n            setPublicKey(null);\n            isConnectingRef.current = false;\n            setConnecting(false);\n            setConnected(false);\n            isDisconnectingRef.current = false;\n            setDisconnecting(false);\n        };\n\n        const handleError = (error: WalletError) => {\n            handleErrorRef.current(error, adapter);\n        };\n\n        adapter.on('connect', handleConnect);\n        adapter.on('disconnect', handleDisconnect);\n        adapter.on('error', handleError);\n\n        return () => {\n            adapter.off('connect', handleConnect);\n            adapter.off('disconnect', handleDisconnect);\n            adapter.off('error', handleError);\n\n            handleDisconnect();\n        };\n    }, [adapter, isUnloadingRef]);\n\n    // When the adapter changes, clear the `autoConnect` tracking flag\n    const didAttemptAutoConnectRef = useRef(false);\n    useEffect(() => {\n        return () => {\n            didAttemptAutoConnectRef.current = false;\n        };\n    }, [adapter]);\n\n    // If auto-connect is enabled, request to connect when the adapter changes and is ready\n    useEffect(() => {\n        if (\n            didAttemptAutoConnectRef.current ||\n            isConnectingRef.current ||\n            connected ||\n            !onAutoConnectRequest ||\n            !(wallet?.readyState === WalletReadyState.Installed || wallet?.readyState === WalletReadyState.Loadable)\n        )\n            return;\n\n        isConnectingRef.current = true;\n        setConnecting(true);\n        didAttemptAutoConnectRef.current = true;\n        (async function () {\n            try {\n                await onAutoConnectRequest();\n            } catch {\n                onConnectError();\n                // Drop the error. It will be caught by `handleError` anyway.\n            } finally {\n                setConnecting(false);\n                isConnectingRef.current = false;\n            }\n        })();\n    }, [connected, onAutoConnectRequest, onConnectError, wallet]);\n\n    // Send a transaction using the provided connection\n    const sendTransaction: WalletAdapterProps['sendTransaction'] = useCallback(\n        async (transaction, connection, options) => {\n            if (!adapter) throw handleErrorRef.current(new WalletNotSelectedError());\n            if (!connected) throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n            return await adapter.sendTransaction(transaction, connection, options);\n        },\n        [adapter, connected]\n    );\n\n    // Sign a transaction if the wallet supports it\n    const signTransaction: SignerWalletAdapterProps['signTransaction'] | undefined = useMemo(\n        () =>\n            adapter && 'signTransaction' in adapter\n                ? async (transaction) => {\n                      if (!connected) throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n                      return await adapter.signTransaction(transaction);\n                  }\n                : undefined,\n        [adapter, connected]\n    );\n\n    // Sign multiple transactions if the wallet supports it\n    const signAllTransactions: SignerWalletAdapterProps['signAllTransactions'] | undefined = useMemo(\n        () =>\n            adapter && 'signAllTransactions' in adapter\n                ? async (transactions) => {\n                      if (!connected) throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n                      return await adapter.signAllTransactions(transactions);\n                  }\n                : undefined,\n        [adapter, connected]\n    );\n\n    // Sign an arbitrary message if the wallet supports it\n    const signMessage: MessageSignerWalletAdapterProps['signMessage'] | undefined = useMemo(\n        () =>\n            adapter && 'signMessage' in adapter\n                ? async (message) => {\n                      if (!connected) throw handleErrorRef.current(new WalletNotConnectedError(), adapter);\n                      return await adapter.signMessage(message);\n                  }\n                : undefined,\n        [adapter, connected]\n    );\n\n    // Sign in if the wallet supports it\n    const signIn: SignInMessageSignerWalletAdapterProps['signIn'] | undefined = useMemo(\n        () =>\n            adapter && 'signIn' in adapter\n                ? async (input) => {\n                      return await adapter.signIn(input);\n                  }\n                : undefined,\n        [adapter]\n    );\n\n    const handleConnect = useCallback(async () => {\n        if (isConnectingRef.current || isDisconnectingRef.current || wallet?.adapter.connected) return;\n        if (!wallet) throw handleErrorRef.current(new WalletNotSelectedError());\n        const { adapter, readyState } = wallet;\n        if (!(readyState === WalletReadyState.Installed || readyState === WalletReadyState.Loadable))\n            throw handleErrorRef.current(new WalletNotReadyError(), adapter);\n        isConnectingRef.current = true;\n        setConnecting(true);\n        try {\n            await adapter.connect();\n        } catch (e) {\n            onConnectError();\n            throw e;\n        } finally {\n            setConnecting(false);\n            isConnectingRef.current = false;\n        }\n    }, [onConnectError, wallet]);\n\n    const handleDisconnect = useCallback(async () => {\n        if (isDisconnectingRef.current) return;\n        if (!adapter) return;\n        isDisconnectingRef.current = true;\n        setDisconnecting(true);\n        try {\n            await adapter.disconnect();\n        } finally {\n            setDisconnecting(false);\n            isDisconnectingRef.current = false;\n        }\n    }, [adapter]);\n\n    return (\n        <WalletContext.Provider\n            value={{\n                autoConnect: !!onAutoConnectRequest,\n                wallets,\n                wallet,\n                publicKey,\n                connected,\n                connecting,\n                disconnecting,\n                select: onSelectWallet,\n                connect: handleConnect,\n                disconnect: handleDisconnect,\n                sendTransaction,\n                signTransaction,\n                signAllTransactions,\n                signMessage,\n                signIn,\n            }}\n        >\n            {children}\n        </WalletContext.Provider>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}