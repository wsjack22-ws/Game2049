{"ast":null,"code":"import _classCallCheck from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ReadonlyWalletAccount_address, _ReadonlyWalletAccount_publicKey, _ReadonlyWalletAccount_chains, _ReadonlyWalletAccount_features, _ReadonlyWalletAccount_label, _ReadonlyWalletAccount_icon;\n/**\n * Base implementation of a {@link \"@wallet-standard/base\".WalletAccount} to be used or extended by a\n * {@link \"@wallet-standard/base\".Wallet}.\n *\n * `WalletAccount` properties must be read-only. This class enforces this by making all properties\n * [truly private](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields) and\n * read-only, using getters for access, returning copies instead of references, and calling\n * [Object.freeze](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze)\n * on the instance.\n *\n * @group Account\n */\nexport var ReadonlyWalletAccount = /*#__PURE__*/function () {\n  /**\n   * Create and freeze a read-only account.\n   *\n   * @param account Account to copy properties from.\n   */\n  function ReadonlyWalletAccount(account) {\n    _classCallCheck(this, ReadonlyWalletAccount);\n    _ReadonlyWalletAccount_address.set(this, void 0);\n    _ReadonlyWalletAccount_publicKey.set(this, void 0);\n    _ReadonlyWalletAccount_chains.set(this, void 0);\n    _ReadonlyWalletAccount_features.set(this, void 0);\n    _ReadonlyWalletAccount_label.set(this, void 0);\n    _ReadonlyWalletAccount_icon.set(this, void 0);\n    if ((this instanceof ReadonlyWalletAccount ? this.constructor : void 0) === ReadonlyWalletAccount) {\n      Object.freeze(this);\n    }\n    __classPrivateFieldSet(this, _ReadonlyWalletAccount_address, account.address, \"f\");\n    __classPrivateFieldSet(this, _ReadonlyWalletAccount_publicKey, account.publicKey.slice(), \"f\");\n    __classPrivateFieldSet(this, _ReadonlyWalletAccount_chains, account.chains.slice(), \"f\");\n    __classPrivateFieldSet(this, _ReadonlyWalletAccount_features, account.features.slice(), \"f\");\n    __classPrivateFieldSet(this, _ReadonlyWalletAccount_label, account.label, \"f\");\n    __classPrivateFieldSet(this, _ReadonlyWalletAccount_icon, account.icon, \"f\");\n  }\n  /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.address | WalletAccount::address} */\n  _createClass(ReadonlyWalletAccount, [{\n    key: \"address\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _ReadonlyWalletAccount_address, \"f\");\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.publicKey | WalletAccount::publicKey} */\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _ReadonlyWalletAccount_publicKey, \"f\").slice();\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.chains | WalletAccount::chains} */\n  }, {\n    key: \"chains\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _ReadonlyWalletAccount_chains, \"f\").slice();\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.features | WalletAccount::features} */\n  }, {\n    key: \"features\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _ReadonlyWalletAccount_features, \"f\").slice();\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.label | WalletAccount::label} */\n  }, {\n    key: \"label\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _ReadonlyWalletAccount_label, \"f\");\n    }\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.icon | WalletAccount::icon} */\n  }, {\n    key: \"icon\",\n    get: function get() {\n      return __classPrivateFieldGet(this, _ReadonlyWalletAccount_icon, \"f\");\n    }\n  }]);\n  return ReadonlyWalletAccount;\n}();\n_ReadonlyWalletAccount_address = new WeakMap(), _ReadonlyWalletAccount_publicKey = new WeakMap(), _ReadonlyWalletAccount_chains = new WeakMap(), _ReadonlyWalletAccount_features = new WeakMap(), _ReadonlyWalletAccount_label = new WeakMap(), _ReadonlyWalletAccount_icon = new WeakMap();\n/**\n * Efficiently compare {@link Indexed} arrays (e.g. `Array` and `Uint8Array`).\n *\n * @param a An array.\n * @param b Another array.\n *\n * @return `true` if the arrays have the same length and elements, `false` otherwise.\n *\n * @group Util\n */\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  var length = a.length;\n  if (length !== b.length) return false;\n  for (var i = 0; i < length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n/**\n * Efficiently compare byte arrays, using {@link arraysEqual}.\n *\n * @param a A byte array.\n * @param b Another byte array.\n *\n * @return `true` if the byte arrays have the same length and bytes, `false` otherwise.\n *\n * @group Util\n */\nexport function bytesEqual(a, b) {\n  return arraysEqual(a, b);\n}\n/**\n * Efficiently concatenate byte arrays without modifying them.\n *\n * @param first  A byte array.\n * @param others Additional byte arrays.\n *\n * @return New byte array containing the concatenation of all the byte arrays.\n *\n * @group Util\n */\nexport function concatBytes(first) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n  var length = others.reduce(function (length, bytes) {\n    return length + bytes.length;\n  }, first.length);\n  var bytes = new Uint8Array(length);\n  bytes.set(first, 0);\n  for (var _i = 0, _others = others; _i < _others.length; _i++) {\n    var other = _others[_i];\n    bytes.set(other, bytes.length);\n  }\n  return bytes;\n}\n/**\n * Create a new object with a subset of fields from a source object.\n *\n * @param source Object to pick fields from.\n * @param keys   Names of fields to pick.\n *\n * @return New object with only the picked fields.\n *\n * @group Util\n */\nexport function pick(source) {\n  var picked = {};\n  for (var _len2 = arguments.length, keys = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    keys[_key2 - 1] = arguments[_key2];\n  }\n  for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n    var key = _keys[_i2];\n    picked[key] = source[key];\n  }\n  return picked;\n}\n/**\n * Call a callback function, catch an error if it throws, and log the error without rethrowing.\n *\n * @param callback Function to call.\n *\n * @group Util\n */\nexport function guard(callback) {\n  try {\n    callback();\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"names":["ReadonlyWalletAccount","account","_classCallCheck","_ReadonlyWalletAccount_address","set","_ReadonlyWalletAccount_publicKey","_ReadonlyWalletAccount_chains","_ReadonlyWalletAccount_features","_ReadonlyWalletAccount_label","_ReadonlyWalletAccount_icon","constructor","Object","freeze","__classPrivateFieldSet","address","publicKey","slice","chains","features","label","icon","_createClass","key","get","__classPrivateFieldGet","arraysEqual","a","b","length","i","bytesEqual","concatBytes","first","_len","arguments","others","Array","_key","reduce","bytes","Uint8Array","_i","_others","other","pick","source","picked","_len2","keys","_key2","_i2","_keys","guard","callback","error","console"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@wallet-standard/wallet/src/util.ts"],"sourcesContent":["import type { WalletAccount } from '@wallet-standard/base';\n\n/**\n * Base implementation of a {@link \"@wallet-standard/base\".WalletAccount} to be used or extended by a\n * {@link \"@wallet-standard/base\".Wallet}.\n *\n * `WalletAccount` properties must be read-only. This class enforces this by making all properties\n * [truly private](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields) and\n * read-only, using getters for access, returning copies instead of references, and calling\n * [Object.freeze](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze)\n * on the instance.\n *\n * @group Account\n */\nexport class ReadonlyWalletAccount implements WalletAccount {\n    readonly #address: WalletAccount['address'];\n    readonly #publicKey: WalletAccount['publicKey'];\n    readonly #chains: WalletAccount['chains'];\n    readonly #features: WalletAccount['features'];\n    readonly #label: WalletAccount['label'];\n    readonly #icon: WalletAccount['icon'];\n\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.address | WalletAccount::address} */\n    get address() {\n        return this.#address;\n    }\n\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.publicKey | WalletAccount::publicKey} */\n    get publicKey() {\n        return this.#publicKey.slice();\n    }\n\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.chains | WalletAccount::chains} */\n    get chains() {\n        return this.#chains.slice();\n    }\n\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.features | WalletAccount::features} */\n    get features() {\n        return this.#features.slice();\n    }\n\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.label | WalletAccount::label} */\n    get label() {\n        return this.#label;\n    }\n\n    /** Implementation of {@link \"@wallet-standard/base\".WalletAccount.icon | WalletAccount::icon} */\n    get icon() {\n        return this.#icon;\n    }\n\n    /**\n     * Create and freeze a read-only account.\n     *\n     * @param account Account to copy properties from.\n     */\n    constructor(account: WalletAccount) {\n        if (new.target === ReadonlyWalletAccount) {\n            Object.freeze(this);\n        }\n\n        this.#address = account.address;\n        this.#publicKey = account.publicKey.slice();\n        this.#chains = account.chains.slice();\n        this.#features = account.features.slice();\n        this.#label = account.label;\n        this.#icon = account.icon;\n    }\n}\n\n/**\n * Efficiently compare {@link Indexed} arrays (e.g. `Array` and `Uint8Array`).\n *\n * @param a An array.\n * @param b Another array.\n *\n * @return `true` if the arrays have the same length and elements, `false` otherwise.\n *\n * @group Util\n */\nexport function arraysEqual<T>(a: Indexed<T>, b: Indexed<T>): boolean {\n    if (a === b) return true;\n\n    const length = a.length;\n    if (length !== b.length) return false;\n\n    for (let i = 0; i < length; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n}\n\n/**\n * Efficiently compare byte arrays, using {@link arraysEqual}.\n *\n * @param a A byte array.\n * @param b Another byte array.\n *\n * @return `true` if the byte arrays have the same length and bytes, `false` otherwise.\n *\n * @group Util\n */\nexport function bytesEqual(a: Uint8Array, b: Uint8Array): boolean {\n    return arraysEqual(a, b);\n}\n\n/**\n * Efficiently concatenate byte arrays without modifying them.\n *\n * @param first  A byte array.\n * @param others Additional byte arrays.\n *\n * @return New byte array containing the concatenation of all the byte arrays.\n *\n * @group Util\n */\nexport function concatBytes(first: Uint8Array, ...others: Uint8Array[]): Uint8Array {\n    const length = others.reduce((length, bytes) => length + bytes.length, first.length);\n    const bytes = new Uint8Array(length);\n\n    bytes.set(first, 0);\n    for (const other of others) {\n        bytes.set(other, bytes.length);\n    }\n\n    return bytes;\n}\n\n/**\n * Create a new object with a subset of fields from a source object.\n *\n * @param source Object to pick fields from.\n * @param keys   Names of fields to pick.\n *\n * @return New object with only the picked fields.\n *\n * @group Util\n */\nexport function pick<T, K extends keyof T>(source: T, ...keys: K[]): Pick<T, K> {\n    const picked = {} as Pick<T, K>;\n    for (const key of keys) {\n        picked[key] = source[key];\n    }\n    return picked;\n}\n\n/**\n * Call a callback function, catch an error if it throws, and log the error without rethrowing.\n *\n * @param callback Function to call.\n *\n * @group Util\n */\nexport function guard(callback: () => void) {\n    try {\n        callback();\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n/**\n * @internal\n *\n * Type with a numeric `length` and numerically indexed elements of a generic type `T`.\n *\n * For example, `Array<T>` and `Uint8Array`.\n *\n * @group Internal\n */\nexport interface Indexed<T> {\n    length: number;\n    [index: number]: T;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}