{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRHardwareCall = exports.QRHardwareCallName = void 0;\nconst RegistryType_1 = require(\"../RegistryType\");\nconst RegistryItem_1 = require(\"../RegistryItem\");\nconst lib_1 = require(\"../lib\");\nconst KeyDerivation_1 = require(\"./KeyDerivation\");\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"name\"] = 1] = \"name\";\n  Keys[Keys[\"params\"] = 2] = \"params\";\n})(Keys || (Keys = {}));\nvar QRHardwareCallName;\n(function (QRHardwareCallName) {\n  QRHardwareCallName[\"KeyDerivation\"] = \"key-derivation\";\n})(QRHardwareCallName = exports.QRHardwareCallName || (exports.QRHardwareCallName = {}));\nclass QRHardwareCall extends RegistryItem_1.RegistryItem {\n  constructor(name, params) {\n    super();\n    this.name = name;\n    this.params = params;\n    this.getRegistryType = () => RegistryType_1.RegistryTypes.QR_HARDWARE_CALL;\n    this.getName = () => this.name;\n    this.getParams = () => this.params;\n    this.toDataItem = () => {\n      const map = {};\n      map[Keys.name] = this.name;\n      const param = this.params.toDataItem();\n      param.setTag(this.params.getRegistryType().getTag());\n      map[Keys.params] = param;\n      return new lib_1.DataItem(map);\n    };\n  }\n}\nexports.QRHardwareCall = QRHardwareCall;\nQRHardwareCall.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const name = map[Keys.name] || QRHardwareCallName.KeyDerivation;\n  let params;\n  switch (name) {\n    case QRHardwareCallName.KeyDerivation:\n      params = KeyDerivation_1.KeyDerivation.fromDataItem(map[Keys.params]);\n  }\n  return new QRHardwareCall(name, params);\n};\nQRHardwareCall.fromCBOR = _cborPayload => {\n  const dataItem = lib_1.decodeToDataItem(_cborPayload);\n  return QRHardwareCall.fromDataItem(dataItem);\n};","map":{"version":3,"names":["RegistryType_1","require","RegistryItem_1","lib_1","KeyDerivation_1","Keys","QRHardwareCallName","exports","QRHardwareCall","RegistryItem","constructor","name","params","getRegistryType","RegistryTypes","QR_HARDWARE_CALL","getName","getParams","toDataItem","map","param","setTag","getTag","DataItem","fromDataItem","dataItem","getData","KeyDerivation","fromCBOR","_cborPayload","decodeToDataItem"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@keystonehq/bc-ur-registry/src/extended/QRHardwareCall.ts"],"sourcesContent":["import {RegistryTypes} from \"../RegistryType\";\nimport {RegistryItem} from \"../RegistryItem\";\nimport {decodeToDataItem,DataItem} from '../lib';\nimport {DataItemMap} from '../types';\nimport { KeyDerivation } from \"./KeyDerivation\";\n\nenum Keys {\n  name = 1,\n  params,\n}\n\nexport enum QRHardwareCallName {\n  KeyDerivation = \"key-derivation\"\n}\n\ntype QRHardwareCallParams = KeyDerivation\n\nexport class QRHardwareCall extends RegistryItem {\n  getRegistryType = () => RegistryTypes.QR_HARDWARE_CALL;\n\n  constructor(\n    private name: QRHardwareCallName,\n    private params: QRHardwareCallParams,\n  ) {\n    super();\n  }\n\n  public getName = (): string => this.name;\n  public getParams = (): QRHardwareCallParams => this.params;\n\n  public toDataItem = (): DataItem => {\n    const map: DataItemMap = {};\n    map[Keys.name] = this.name;\n\n    const param = this.params.toDataItem()\n    param.setTag(this.params.getRegistryType().getTag())\n    map[Keys.params] = param\n\n    return new DataItem(map);\n  };\n\n  public static fromDataItem = (dataItem: DataItem): QRHardwareCall => {\n    const map = dataItem.getData();\n    const name = map[Keys.name] || QRHardwareCallName.KeyDerivation;\n    let params;\n\n    switch (name) {\n      case QRHardwareCallName.KeyDerivation:\n        params = KeyDerivation.fromDataItem(map[Keys.params])\n    }\n    return new QRHardwareCall(name, params);\n  };\n\n  public static fromCBOR = (_cborPayload: Buffer): QRHardwareCall => {\n    const dataItem = decodeToDataItem(_cborPayload);\n    return QRHardwareCall.fromDataItem(dataItem);\n  };\n}\n"],"mappings":";;;;;;AAAA,MAAAA,cAAA,GAAAC,OAAA;AACA,MAAAC,cAAA,GAAAD,OAAA;AACA,MAAAE,KAAA,GAAAF,OAAA;AAEA,MAAAG,eAAA,GAAAH,OAAA;AAEA,IAAKI,IAGJ;AAHD,WAAKA,IAAI;EACPA,IAAA,CAAAA,IAAA,sBAAQ;EACRA,IAAA,CAAAA,IAAA,0BAAM;AACR,CAAC,EAHIA,IAAI,KAAJA,IAAI;AAKT,IAAYC,kBAEX;AAFD,WAAYA,kBAAkB;EAC5BA,kBAAA,oCAAgC;AAClC,CAAC,EAFWA,kBAAkB,GAAlBC,OAAA,CAAAD,kBAAkB,KAAlBC,OAAA,CAAAD,kBAAkB;AAM9B,MAAaE,cAAe,SAAQN,cAAA,CAAAO,YAAY;EAG9CC,YACUC,IAAwB,EACxBC,MAA4B;IAEpC,KAAK,EAAE;IAHC,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,eAAe,GAAG,MAAMb,cAAA,CAAAc,aAAa,CAACC,gBAAgB;IAS/C,KAAAC,OAAO,GAAG,MAAc,IAAI,CAACL,IAAI;IACjC,KAAAM,SAAS,GAAG,MAA4B,IAAI,CAACL,MAAM;IAEnD,KAAAM,UAAU,GAAG,MAAe;MACjC,MAAMC,GAAG,GAAgB,EAAE;MAC3BA,GAAG,CAACd,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACA,IAAI;MAE1B,MAAMS,KAAK,GAAG,IAAI,CAACR,MAAM,CAACM,UAAU,EAAE;MACtCE,KAAK,CAACC,MAAM,CAAC,IAAI,CAACT,MAAM,CAACC,eAAe,EAAE,CAACS,MAAM,EAAE,CAAC;MACpDH,GAAG,CAACd,IAAI,CAACO,MAAM,CAAC,GAAGQ,KAAK;MAExB,OAAO,IAAIjB,KAAA,CAAAoB,QAAQ,CAACJ,GAAG,CAAC;IAC1B,CAAC;EAdD;;AARFZ,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAwBgBA,cAAA,CAAAgB,YAAY,GAAIC,QAAkB,IAAoB;EAClE,MAAMN,GAAG,GAAGM,QAAQ,CAACC,OAAO,EAAE;EAC9B,MAAMf,IAAI,GAAGQ,GAAG,CAACd,IAAI,CAACM,IAAI,CAAC,IAAIL,kBAAkB,CAACqB,aAAa;EAC/D,IAAIf,MAAM;EAEV,QAAQD,IAAI;IACV,KAAKL,kBAAkB,CAACqB,aAAa;MACnCf,MAAM,GAAGR,eAAA,CAAAuB,aAAa,CAACH,YAAY,CAACL,GAAG,CAACd,IAAI,CAACO,MAAM,CAAC,CAAC;;EAEzD,OAAO,IAAIJ,cAAc,CAACG,IAAI,EAAEC,MAAM,CAAC;AACzC,CAAC;AAEaJ,cAAA,CAAAoB,QAAQ,GAAIC,YAAoB,IAAoB;EAChE,MAAMJ,QAAQ,GAAGtB,KAAA,CAAA2B,gBAAgB,CAACD,YAAY,CAAC;EAC/C,OAAOrB,cAAc,CAACgB,YAAY,CAACC,QAAQ,CAAC;AAC9C,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}