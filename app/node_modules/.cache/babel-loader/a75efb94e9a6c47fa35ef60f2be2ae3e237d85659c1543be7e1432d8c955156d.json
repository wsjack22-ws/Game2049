{"ast":null,"code":"import { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\nimport idl from \"../idl.json\";\nimport { BN } from \"bn.js\";\nimport { Buffer } from \"buffer\";\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\nconst MASTER_SEED = 'master';\nconst LOTTERY_SEED = 'lottery';\nconst TICKET_SEED = 'ticket';\nexport const getMasterAddress = async () => {\n  return (await PublicKey.findProgramAddress([Buffer.from(MASTER_SEED)], PROGRAM_KEY))[0];\n};\nexport const getLotteryAddress = async id => {\n  return (await PublicKey.findProgramAddress([Buffer.from(LOTTERY_SEED), new BN(id + 1).toArrayLike(Buffer, 'le', 4)], PROGRAM_KEY))[0];\n};\nexport const getTicketAddress = async (LotteryPk, id) => {\n  return (await PublicKey.findProgramAddress([Buffer.from(TICKET_SEED), LotteryPk.toBuffer(), new BN(id).toArrayLike(Buffer, 'le', 4)], PROGRAM_KEY))[0];\n};\nexport const getTotalPrize = async Lottery => {\n  return new BN(Lottery.lastTicketId).mul(Lottery.ticketyPrice).div(new BN(LAMPORTS_PER_SOL)).toString();\n};","map":{"version":3,"names":["LAMPORTS_PER_SOL","PublicKey","idl","BN","Buffer","PROGRAM_KEY","metadata","address","MASTER_SEED","LOTTERY_SEED","TICKET_SEED","getMasterAddress","findProgramAddress","from","getLotteryAddress","id","toArrayLike","getTicketAddress","LotteryPk","toBuffer","getTotalPrize","Lottery","lastTicketId","mul","ticketyPrice","div","toString"],"sources":["/Users/wuhuan/gif-portal-starter/src/functions/utils.js"],"sourcesContent":["import { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\"\nimport idl from \"../idl.json\"\nimport { BN } from \"bn.js\"\nimport { Buffer } from \"buffer\"\n\n\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address)\n\nconst MASTER_SEED = 'master'\nconst LOTTERY_SEED = 'lottery'\nconst TICKET_SEED = 'ticket'\n\nexport const getMasterAddress = async () => {\n    return (\n        await PublicKey.findProgramAddress(\n            [Buffer.from(MASTER_SEED)], \n            PROGRAM_KEY\n        )\n    )[0]\n}\n\nexport const getLotteryAddress = async (id) => {\n    return (\n        await PublicKey.findProgramAddress(\n            [Buffer.from(LOTTERY_SEED), new BN(id + 1).toArrayLike(Buffer, 'le', 4)],\n            PROGRAM_KEY\n        )\n    )[0]\n}\n\nexport const getTicketAddress = async (LotteryPk, id) => {\n    return (\n        await PublicKey.findProgramAddress(\n            [\n                Buffer.from(TICKET_SEED),\n                LotteryPk.toBuffer(),\n                new BN(id).toArrayLike(Buffer, 'le', 4),\n            ],\n            PROGRAM_KEY\n        )\n    )[0]\n}\n\nexport const getTotalPrize = async (Lottery) => {\n    return new BN(Lottery.lastTicketId)\n    .mul(Lottery.ticketyPrice)\n    .div(new BN(LAMPORTS_PER_SOL))\n    .toString();\n}"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,SAAS,QAAQ,iBAAiB;AAC7D,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,EAAE,QAAQ,OAAO;AAC1B,SAASC,MAAM,QAAQ,QAAQ;AAG/B,MAAMC,WAAW,GAAG,IAAIJ,SAAS,CAACC,GAAG,CAACI,QAAQ,CAACC,OAAO,CAAC;AAEvD,MAAMC,WAAW,GAAG,QAAQ;AAC5B,MAAMC,YAAY,GAAG,SAAS;AAC9B,MAAMC,WAAW,GAAG,QAAQ;AAE5B,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,OAAO,CACH,MAAMV,SAAS,CAACW,kBAAkB,CAC9B,CAACR,MAAM,CAACS,IAAI,CAACL,WAAW,CAAC,CAAC,EAC1BH,WACJ,CAAC,EACH,CAAC,CAAC;AACR,CAAC;AAED,OAAO,MAAMS,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC3C,OAAO,CACH,MAAMd,SAAS,CAACW,kBAAkB,CAC9B,CAACR,MAAM,CAACS,IAAI,CAACJ,YAAY,CAAC,EAAE,IAAIN,EAAE,CAACY,EAAE,GAAG,CAAC,CAAC,CAACC,WAAW,CAACZ,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EACxEC,WACJ,CAAC,EACH,CAAC,CAAC;AACR,CAAC;AAED,OAAO,MAAMY,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEH,EAAE,KAAK;EACrD,OAAO,CACH,MAAMd,SAAS,CAACW,kBAAkB,CAC9B,CACIR,MAAM,CAACS,IAAI,CAACH,WAAW,CAAC,EACxBQ,SAAS,CAACC,QAAQ,CAAC,CAAC,EACpB,IAAIhB,EAAE,CAACY,EAAE,CAAC,CAACC,WAAW,CAACZ,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAC1C,EACDC,WACJ,CAAC,EACH,CAAC,CAAC;AACR,CAAC;AAED,OAAO,MAAMe,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,OAAO,IAAIlB,EAAE,CAACkB,OAAO,CAACC,YAAY,CAAC,CAClCC,GAAG,CAACF,OAAO,CAACG,YAAY,CAAC,CACzBC,GAAG,CAAC,IAAItB,EAAE,CAACH,gBAAgB,CAAC,CAAC,CAC7B0B,QAAQ,CAAC,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}