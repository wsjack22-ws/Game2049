{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst context_js_1 = require(\"../context.js\");\nconst error_js_1 = require(\"../../error.js\");\nclass RpcFactory {\n  static build(idlIx, txFn, idlErrors, provider) {\n    const rpc = async (...args) => {\n      var _a;\n      const tx = txFn(...args);\n      const [, ctx] = (0, context_js_1.splitArgsAndCtx)(idlIx, [...args]);\n      if (provider.sendAndConfirm === undefined) {\n        throw new Error(\"This function requires 'Provider.sendAndConfirm' to be implemented.\");\n      }\n      try {\n        return await provider.sendAndConfirm(tx, (_a = ctx.signers) !== null && _a !== void 0 ? _a : [], ctx.options);\n      } catch (err) {\n        throw (0, error_js_1.translateError)(err, idlErrors);\n      }\n    };\n    return rpc;\n  }\n}\nexports.default = RpcFactory;","map":{"version":3,"names":["context_js_1","require","error_js_1","RpcFactory","build","idlIx","txFn","idlErrors","provider","rpc","args","tx","ctx","splitArgsAndCtx","sendAndConfirm","undefined","Error","_a","signers","options","err","translateError","exports","default"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/program/namespace/rpc.ts"],"sourcesContent":["import { TransactionSignature } from \"@solana/web3.js\";\nimport Provider from \"../../provider.js\";\nimport { Idl } from \"../../idl.js\";\nimport { splitArgsAndCtx } from \"../context.js\";\nimport { TransactionFn } from \"./transaction.js\";\nimport { translateError } from \"../../error.js\";\nimport {\n  AllInstructions,\n  InstructionContextFn,\n  MakeInstructionsNamespace,\n} from \"./types.js\";\n\nexport default class RpcFactory {\n  public static build<IDL extends Idl, I extends AllInstructions<IDL>>(\n    idlIx: I,\n    txFn: TransactionFn<IDL, I>,\n    idlErrors: Map<number, string>,\n    provider: Provider\n  ): RpcFn {\n    const rpc: RpcFn<IDL, I> = async (...args) => {\n      const tx = txFn(...args);\n      const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      if (provider.sendAndConfirm === undefined) {\n        throw new Error(\n          \"This function requires 'Provider.sendAndConfirm' to be implemented.\"\n        );\n      }\n      try {\n        return await provider.sendAndConfirm(\n          tx,\n          ctx.signers ?? [],\n          ctx.options\n        );\n      } catch (err) {\n        throw translateError(err, idlErrors);\n      }\n    };\n\n    return rpc;\n  }\n}\n\n/**\n * The namespace provides async methods to send signed transactions for each\n * *non*-state method on Anchor program.\n *\n * Keys are method names, values are RPC functions returning a\n * [[TransactionInstruction]].\n *\n * ## Usage\n *\n * ```javascript\n * rpc.<method>(...args, ctx);\n * ```\n *\n * ## Parameters\n *\n * 1. `args` - The positional arguments for the program. The type and number\n *    of these arguments depend on the program being used.\n * 2. `ctx`  - [[Context]] non-argument parameters to pass to the method.\n *    Always the last parameter in the method call.\n * ```\n *\n * ## Example\n *\n * To send a transaction invoking the `increment` method above,\n *\n * ```javascript\n * const txSignature = await program.rpc.increment({\n *   accounts: {\n *     counter,\n *     authority,\n *   },\n * });\n * ```\n */\nexport type RpcNamespace<\n  IDL extends Idl = Idl,\n  I extends AllInstructions<IDL> = AllInstructions<IDL>\n> = MakeInstructionsNamespace<IDL, I, Promise<TransactionSignature>>;\n\n/**\n * RpcFn is a single RPC method generated from an IDL, sending a transaction\n * paid for and signed by the configured provider.\n */\nexport type RpcFn<\n  IDL extends Idl = Idl,\n  I extends AllInstructions<IDL> = AllInstructions<IDL>\n> = InstructionContextFn<IDL, I, Promise<TransactionSignature>>;\n"],"mappings":";;;;;AAGA,MAAAA,YAAA,GAAAC,OAAA;AAEA,MAAAC,UAAA,GAAAD,OAAA;AAOA,MAAqBE,UAAU;EACtB,OAAOC,KAAKA,CACjBC,KAAQ,EACRC,IAA2B,EAC3BC,SAA8B,EAC9BC,QAAkB;IAElB,MAAMC,GAAG,GAAkB,MAAAA,CAAO,GAAGC,IAAI,KAAI;;MAC3C,MAAMC,EAAE,GAAGL,IAAI,CAAC,GAAGI,IAAI,CAAC;MACxB,MAAM,GAAGE,GAAG,CAAC,GAAG,IAAAZ,YAAA,CAAAa,eAAe,EAACR,KAAK,EAAE,CAAC,GAAGK,IAAI,CAAC,CAAC;MACjD,IAAIF,QAAQ,CAACM,cAAc,KAAKC,SAAS,EAAE;QACzC,MAAM,IAAIC,KAAK,CACb,qEAAqE,CACtE;;MAEH,IAAI;QACF,OAAO,MAAMR,QAAQ,CAACM,cAAc,CAClCH,EAAE,EACF,CAAAM,EAAA,GAAAL,GAAG,CAACM,OAAO,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE,EACjBL,GAAG,CAACO,OAAO,CACZ;OACF,CAAC,OAAOC,GAAG,EAAE;QACZ,MAAM,IAAAlB,UAAA,CAAAmB,cAAc,EAACD,GAAG,EAAEb,SAAS,CAAC;;IAExC,CAAC;IAED,OAAOE,GAAG;EACZ;;AA3BFa,OAAA,CAAAC,OAAA,GAAApB,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}