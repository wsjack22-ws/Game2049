{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { verifyMessageSignature } from './signMessage.js';\nimport { arraysEqual } from './util.js';\n/**\n * TODO: docs\n */\nexport function verifySignIn(input, output) {\n  var signedMessage = output.signedMessage,\n    signature = output.signature,\n    publicKey = output.account.publicKey;\n  var message = deriveSignInMessage(input, output);\n  return !!message && verifyMessageSignature({\n    message: message,\n    signedMessage: signedMessage,\n    signature: signature,\n    publicKey: publicKey\n  });\n}\n/**\n * TODO: docs\n */\nexport function deriveSignInMessage(input, output) {\n  var text = deriveSignInMessageText(input, output);\n  if (!text) return null;\n  return new TextEncoder().encode(text);\n}\n/**\n * TODO: docs\n */\nexport function deriveSignInMessageText(input, output) {\n  var parsed = parseSignInMessage(output.signedMessage);\n  if (!parsed) return null;\n  if (input.domain && input.domain !== parsed.domain) return null;\n  if (input.address && input.address !== parsed.address) return null;\n  if (input.statement !== parsed.statement) return null;\n  if (input.uri !== parsed.uri) return null;\n  if (input.version !== parsed.version) return null;\n  if (input.chainId !== parsed.chainId) return null;\n  if (input.nonce !== parsed.nonce) return null;\n  if (input.issuedAt !== parsed.issuedAt) return null;\n  if (input.expirationTime !== parsed.expirationTime) return null;\n  if (input.notBefore !== parsed.notBefore) return null;\n  if (input.requestId !== parsed.requestId) return null;\n  if (input.resources) {\n    if (!parsed.resources) return null;\n    if (!arraysEqual(input.resources, parsed.resources)) return null;\n  } else if (parsed.resources) return null;\n  return createSignInMessageText(parsed);\n}\n/**\n * TODO: docs\n */\nexport function parseSignInMessage(message) {\n  var text = new TextDecoder().decode(message);\n  return parseSignInMessageText(text);\n}\n// TODO: implement https://github.com/solana-labs/solana/blob/master/docs/src/proposals/off-chain-message-signing.md\nvar DOMAIN = '(?<domain>[^\\\\n]+?) wants you to sign in with your Solana account:\\\\n';\nvar ADDRESS = '(?<address>[^\\\\n]+)(?:\\\\n|$)';\nvar STATEMENT = '(?:\\\\n(?<statement>[\\\\S\\\\s]*?)(?:\\\\n|$))??';\nvar URI = '(?:\\\\nURI: (?<uri>[^\\\\n]+))?';\nvar VERSION = '(?:\\\\nVersion: (?<version>[^\\\\n]+))?';\nvar CHAIN_ID = '(?:\\\\nChain ID: (?<chainId>[^\\\\n]+))?';\nvar NONCE = '(?:\\\\nNonce: (?<nonce>[^\\\\n]+))?';\nvar ISSUED_AT = '(?:\\\\nIssued At: (?<issuedAt>[^\\\\n]+))?';\nvar EXPIRATION_TIME = '(?:\\\\nExpiration Time: (?<expirationTime>[^\\\\n]+))?';\nvar NOT_BEFORE = '(?:\\\\nNot Before: (?<notBefore>[^\\\\n]+))?';\nvar REQUEST_ID = '(?:\\\\nRequest ID: (?<requestId>[^\\\\n]+))?';\nvar RESOURCES = '(?:\\\\nResources:(?<resources>(?:\\\\n- [^\\\\n]+)*))?';\nvar FIELDS = \"\".concat(URI).concat(VERSION).concat(CHAIN_ID).concat(NONCE).concat(ISSUED_AT).concat(EXPIRATION_TIME).concat(NOT_BEFORE).concat(REQUEST_ID).concat(RESOURCES);\nvar MESSAGE = new RegExp(\"^\".concat(DOMAIN).concat(ADDRESS).concat(STATEMENT).concat(FIELDS, \"\\\\n*$\"));\n/**\n * TODO: docs\n */\nexport function parseSignInMessageText(text) {\n  var _groups$resources;\n  var match = MESSAGE.exec(text);\n  if (!match) return null;\n  var groups = match.groups;\n  if (!groups) return null;\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    domain: groups.domain,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    address: groups.address,\n    statement: groups.statement,\n    uri: groups.uri,\n    version: groups.version,\n    nonce: groups.nonce,\n    chainId: groups.chainId,\n    issuedAt: groups.issuedAt,\n    expirationTime: groups.expirationTime,\n    notBefore: groups.notBefore,\n    requestId: groups.requestId,\n    resources: (_groups$resources = groups.resources) === null || _groups$resources === void 0 ? void 0 : _groups$resources.split('\\n- ').slice(1)\n  };\n}\n/**\n * TODO: docs\n */\nexport function createSignInMessage(input) {\n  var text = createSignInMessageText(input);\n  return new TextEncoder().encode(text);\n}\n/**\n * TODO: docs\n */\nexport function createSignInMessageText(input) {\n  // ${domain} wants you to sign in with your Solana account:\n  // ${address}\n  //\n  // ${statement}\n  //\n  // URI: ${uri}\n  // Version: ${version}\n  // Chain ID: ${chain}\n  // Nonce: ${nonce}\n  // Issued At: ${issued-at}\n  // Expiration Time: ${expiration-time}\n  // Not Before: ${not-before}\n  // Request ID: ${request-id}\n  // Resources:\n  // - ${resources[0]}\n  // - ${resources[1]}\n  // ...\n  // - ${resources[n]}\n  var message = \"\".concat(input.domain, \" wants you to sign in with your Solana account:\\n\");\n  message += \"\".concat(input.address);\n  if (input.statement) {\n    message += \"\\n\\n\".concat(input.statement);\n  }\n  var fields = [];\n  if (input.uri) {\n    fields.push(\"URI: \".concat(input.uri));\n  }\n  if (input.version) {\n    fields.push(\"Version: \".concat(input.version));\n  }\n  if (input.chainId) {\n    fields.push(\"Chain ID: \".concat(input.chainId));\n  }\n  if (input.nonce) {\n    fields.push(\"Nonce: \".concat(input.nonce));\n  }\n  if (input.issuedAt) {\n    fields.push(\"Issued At: \".concat(input.issuedAt));\n  }\n  if (input.expirationTime) {\n    fields.push(\"Expiration Time: \".concat(input.expirationTime));\n  }\n  if (input.notBefore) {\n    fields.push(\"Not Before: \".concat(input.notBefore));\n  }\n  if (input.requestId) {\n    fields.push(\"Request ID: \".concat(input.requestId));\n  }\n  if (input.resources) {\n    fields.push(\"Resources:\");\n    var _iterator = _createForOfIteratorHelper(input.resources),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var resource = _step.value;\n        fields.push(\"- \".concat(resource));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  if (fields.length) {\n    message += \"\\n\\n\".concat(fields.join('\\n'));\n  }\n  return message;\n}","map":{"version":3,"names":["verifyMessageSignature","arraysEqual","verifySignIn","input","output","signedMessage","signature","publicKey","account","message","deriveSignInMessage","text","deriveSignInMessageText","TextEncoder","encode","parsed","parseSignInMessage","domain","address","statement","uri","version","chainId","nonce","issuedAt","expirationTime","notBefore","requestId","resources","createSignInMessageText","TextDecoder","decode","parseSignInMessageText","DOMAIN","ADDRESS","STATEMENT","URI","VERSION","CHAIN_ID","NONCE","ISSUED_AT","EXPIRATION_TIME","NOT_BEFORE","REQUEST_ID","RESOURCES","FIELDS","concat","MESSAGE","RegExp","_groups$resources","match","exec","groups","split","slice","createSignInMessage","fields","push","_iterator","_createForOfIteratorHelper","_step","s","n","done","resource","value","err","e","f","length","join"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@solana/wallet-standard-util/src/signIn.ts"],"sourcesContent":["import type { SolanaSignInInput, SolanaSignInOutput } from '@solana/wallet-standard-features';\nimport { verifyMessageSignature } from './signMessage.js';\nimport { arraysEqual } from './util.js';\n\n/**\n * TODO: docs\n */\nexport function verifySignIn(input: SolanaSignInInput, output: SolanaSignInOutput): boolean {\n    const {\n        signedMessage,\n        signature,\n        account: { publicKey },\n    } = output;\n    const message = deriveSignInMessage(input, output);\n    return !!message && verifyMessageSignature({ message, signedMessage, signature, publicKey });\n}\n\n/**\n * TODO: docs\n */\nexport function deriveSignInMessage(input: SolanaSignInInput, output: SolanaSignInOutput): Uint8Array | null {\n    const text = deriveSignInMessageText(input, output);\n    if (!text) return null;\n    return new TextEncoder().encode(text);\n}\n\n/**\n * TODO: docs\n */\nexport function deriveSignInMessageText(input: SolanaSignInInput, output: SolanaSignInOutput): string | null {\n    const parsed = parseSignInMessage(output.signedMessage);\n    if (!parsed) return null;\n\n    if (input.domain && input.domain !== parsed.domain) return null;\n    if (input.address && input.address !== parsed.address) return null;\n    if (input.statement !== parsed.statement) return null;\n    if (input.uri !== parsed.uri) return null;\n    if (input.version !== parsed.version) return null;\n    if (input.chainId !== parsed.chainId) return null;\n    if (input.nonce !== parsed.nonce) return null;\n    if (input.issuedAt !== parsed.issuedAt) return null;\n    if (input.expirationTime !== parsed.expirationTime) return null;\n    if (input.notBefore !== parsed.notBefore) return null;\n    if (input.requestId !== parsed.requestId) return null;\n    if (input.resources) {\n        if (!parsed.resources) return null;\n        if (!arraysEqual(input.resources, parsed.resources)) return null;\n    } else if (parsed.resources) return null;\n\n    return createSignInMessageText(parsed);\n}\n\n/**\n * TODO: docs\n */\nexport type SolanaSignInInputWithRequiredFields = SolanaSignInInput &\n    Required<Pick<SolanaSignInInput, 'domain' | 'address'>>;\n\n/**\n * TODO: docs\n */\nexport function parseSignInMessage(message: Uint8Array): SolanaSignInInputWithRequiredFields | null {\n    const text = new TextDecoder().decode(message);\n    return parseSignInMessageText(text);\n}\n\n// TODO: implement https://github.com/solana-labs/solana/blob/master/docs/src/proposals/off-chain-message-signing.md\nconst DOMAIN = '(?<domain>[^\\\\n]+?) wants you to sign in with your Solana account:\\\\n';\nconst ADDRESS = '(?<address>[^\\\\n]+)(?:\\\\n|$)';\nconst STATEMENT = '(?:\\\\n(?<statement>[\\\\S\\\\s]*?)(?:\\\\n|$))??';\nconst URI = '(?:\\\\nURI: (?<uri>[^\\\\n]+))?';\nconst VERSION = '(?:\\\\nVersion: (?<version>[^\\\\n]+))?';\nconst CHAIN_ID = '(?:\\\\nChain ID: (?<chainId>[^\\\\n]+))?';\nconst NONCE = '(?:\\\\nNonce: (?<nonce>[^\\\\n]+))?';\nconst ISSUED_AT = '(?:\\\\nIssued At: (?<issuedAt>[^\\\\n]+))?';\nconst EXPIRATION_TIME = '(?:\\\\nExpiration Time: (?<expirationTime>[^\\\\n]+))?';\nconst NOT_BEFORE = '(?:\\\\nNot Before: (?<notBefore>[^\\\\n]+))?';\nconst REQUEST_ID = '(?:\\\\nRequest ID: (?<requestId>[^\\\\n]+))?';\nconst RESOURCES = '(?:\\\\nResources:(?<resources>(?:\\\\n- [^\\\\n]+)*))?';\nconst FIELDS = `${URI}${VERSION}${CHAIN_ID}${NONCE}${ISSUED_AT}${EXPIRATION_TIME}${NOT_BEFORE}${REQUEST_ID}${RESOURCES}`;\nconst MESSAGE = new RegExp(`^${DOMAIN}${ADDRESS}${STATEMENT}${FIELDS}\\\\n*$`);\n\n/**\n * TODO: docs\n */\nexport function parseSignInMessageText(text: string): SolanaSignInInputWithRequiredFields | null {\n    const match = MESSAGE.exec(text);\n    if (!match) return null;\n    const groups = match.groups;\n    if (!groups) return null;\n\n    return {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        domain: groups.domain!,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        address: groups.address!,\n        statement: groups.statement,\n        uri: groups.uri,\n        version: groups.version,\n        nonce: groups.nonce,\n        chainId: groups.chainId,\n        issuedAt: groups.issuedAt,\n        expirationTime: groups.expirationTime,\n        notBefore: groups.notBefore,\n        requestId: groups.requestId,\n        resources: groups.resources?.split('\\n- ').slice(1),\n    };\n}\n\n/**\n * TODO: docs\n */\nexport function createSignInMessage(input: SolanaSignInInputWithRequiredFields): Uint8Array {\n    const text = createSignInMessageText(input);\n    return new TextEncoder().encode(text);\n}\n\n/**\n * TODO: docs\n */\nexport function createSignInMessageText(input: SolanaSignInInputWithRequiredFields): string {\n    // ${domain} wants you to sign in with your Solana account:\n    // ${address}\n    //\n    // ${statement}\n    //\n    // URI: ${uri}\n    // Version: ${version}\n    // Chain ID: ${chain}\n    // Nonce: ${nonce}\n    // Issued At: ${issued-at}\n    // Expiration Time: ${expiration-time}\n    // Not Before: ${not-before}\n    // Request ID: ${request-id}\n    // Resources:\n    // - ${resources[0]}\n    // - ${resources[1]}\n    // ...\n    // - ${resources[n]}\n\n    let message = `${input.domain} wants you to sign in with your Solana account:\\n`;\n    message += `${input.address}`;\n\n    if (input.statement) {\n        message += `\\n\\n${input.statement}`;\n    }\n\n    const fields: string[] = [];\n    if (input.uri) {\n        fields.push(`URI: ${input.uri}`);\n    }\n    if (input.version) {\n        fields.push(`Version: ${input.version}`);\n    }\n    if (input.chainId) {\n        fields.push(`Chain ID: ${input.chainId}`);\n    }\n    if (input.nonce) {\n        fields.push(`Nonce: ${input.nonce}`);\n    }\n    if (input.issuedAt) {\n        fields.push(`Issued At: ${input.issuedAt}`);\n    }\n    if (input.expirationTime) {\n        fields.push(`Expiration Time: ${input.expirationTime}`);\n    }\n    if (input.notBefore) {\n        fields.push(`Not Before: ${input.notBefore}`);\n    }\n    if (input.requestId) {\n        fields.push(`Request ID: ${input.requestId}`);\n    }\n    if (input.resources) {\n        fields.push(`Resources:`);\n        for (const resource of input.resources) {\n            fields.push(`- ${resource}`);\n        }\n    }\n    if (fields.length) {\n        message += `\\n\\n${fields.join('\\n')}`;\n    }\n\n    return message;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}