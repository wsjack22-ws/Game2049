{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\nexport function useWalletMultiButton(_ref) {\n  var onSelectWallet = _ref.onSelectWallet;\n  var _useWallet = useWallet(),\n    connect = _useWallet.connect,\n    connected = _useWallet.connected,\n    connecting = _useWallet.connecting,\n    disconnect = _useWallet.disconnect,\n    disconnecting = _useWallet.disconnecting,\n    publicKey = _useWallet.publicKey,\n    select = _useWallet.select,\n    wallet = _useWallet.wallet,\n    wallets = _useWallet.wallets;\n  var buttonState;\n  if (connecting) {\n    buttonState = 'connecting';\n  } else if (connected) {\n    buttonState = 'connected';\n  } else if (disconnecting) {\n    buttonState = 'disconnecting';\n  } else if (wallet) {\n    buttonState = 'has-wallet';\n  } else {\n    buttonState = 'no-wallet';\n  }\n  var handleConnect = useCallback(function () {\n    connect().catch(function () {\n      // Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [connect]);\n  var handleDisconnect = useCallback(function () {\n    disconnect().catch(function () {\n      // Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [disconnect]);\n  var handleSelectWallet = useCallback(function () {\n    onSelectWallet({\n      onSelectWallet: select,\n      wallets: wallets\n    });\n  }, [onSelectWallet, select, wallets]);\n  return {\n    buttonState: buttonState,\n    onConnect: buttonState === 'has-wallet' ? handleConnect : undefined,\n    onDisconnect: buttonState !== 'disconnecting' && buttonState !== 'no-wallet' ? handleDisconnect : undefined,\n    onSelectWallet: handleSelectWallet,\n    publicKey: publicKey !== null && publicKey !== void 0 ? publicKey : undefined,\n    walletIcon: wallet === null || wallet === void 0 ? void 0 : wallet.adapter.icon,\n    walletName: wallet === null || wallet === void 0 ? void 0 : wallet.adapter.name\n  };\n}","map":{"version":3,"names":["useWallet","useCallback","useWalletMultiButton","_ref","onSelectWallet","_useWallet","connect","connected","connecting","disconnect","disconnecting","publicKey","select","wallet","wallets","buttonState","handleConnect","catch","handleDisconnect","handleSelectWallet","onConnect","undefined","onDisconnect","walletIcon","adapter","icon","walletName","name"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@solana/wallet-adapter-base-ui/src/useWalletMultiButton.ts"],"sourcesContent":["import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport type { PublicKey } from '@solana/web3.js';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonState: 'connecting' | 'connected' | 'disconnecting' | 'has-wallet' | 'no-wallet';\n    onConnect?: () => void;\n    onDisconnect?: () => void;\n    onSelectWallet?: () => void;\n    publicKey?: PublicKey;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\ntype Config = {\n    onSelectWallet: (config: {\n        onSelectWallet: (walletName: Wallet['adapter']['name']) => void;\n        wallets: Wallet[];\n    }) => void;\n};\n\nexport function useWalletMultiButton({ onSelectWallet }: Config): ButtonState {\n    const { connect, connected, connecting, disconnect, disconnecting, publicKey, select, wallet, wallets } =\n        useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (connecting) {\n        buttonState = 'connecting';\n    } else if (connected) {\n        buttonState = 'connected';\n    } else if (disconnecting) {\n        buttonState = 'disconnecting';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleConnect = useCallback(() => {\n        connect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [connect]);\n    const handleDisconnect = useCallback(() => {\n        disconnect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [disconnect]);\n    const handleSelectWallet = useCallback(() => {\n        onSelectWallet({ onSelectWallet: select, wallets });\n    }, [onSelectWallet, select, wallets]);\n    return {\n        buttonState,\n        onConnect: buttonState === 'has-wallet' ? handleConnect : undefined,\n        onDisconnect: buttonState !== 'disconnecting' && buttonState !== 'no-wallet' ? handleDisconnect : undefined,\n        onSelectWallet: handleSelectWallet,\n        publicKey: publicKey ?? undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAqB,8BAA8B;AAErE,SAASC,WAAW,QAAQ,OAAO;AAmBnC,OAAM,SAAUC,oBAAoBA,CAAAC,IAAA,EAA2B;EAAA,IAAxBC,cAAc,GAAAD,IAAA,CAAdC,cAAc;EACjD,IAAAC,UAAA,GACIL,SAAS,EAAE;IADPM,OAAO,GAAAD,UAAA,CAAPC,OAAO;IAAEC,SAAS,GAAAF,UAAA,CAATE,SAAS;IAAEC,UAAU,GAAAH,UAAA,CAAVG,UAAU;IAAEC,UAAU,GAAAJ,UAAA,CAAVI,UAAU;IAAEC,aAAa,GAAAL,UAAA,CAAbK,aAAa;IAAEC,SAAS,GAAAN,UAAA,CAATM,SAAS;IAAEC,MAAM,GAAAP,UAAA,CAANO,MAAM;IAAEC,MAAM,GAAAR,UAAA,CAANQ,MAAM;IAAEC,OAAO,GAAAT,UAAA,CAAPS,OAAO;EAErG,IAAIC,WAAuC;EAC3C,IAAIP,UAAU,EAAE;IACZO,WAAW,GAAG,YAAY;GAC7B,MAAM,IAAIR,SAAS,EAAE;IAClBQ,WAAW,GAAG,WAAW;GAC5B,MAAM,IAAIL,aAAa,EAAE;IACtBK,WAAW,GAAG,eAAe;GAChC,MAAM,IAAIF,MAAM,EAAE;IACfE,WAAW,GAAG,YAAY;GAC7B,MAAM;IACHA,WAAW,GAAG,WAAW;;EAE7B,IAAMC,aAAa,GAAGf,WAAW,CAAC,YAAK;IACnCK,OAAO,EAAE,CAACW,KAAK,CAAC,YAAK;MACjB;IAAA,CACH,CAAC;EACN,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EACb,IAAMY,gBAAgB,GAAGjB,WAAW,CAAC,YAAK;IACtCQ,UAAU,EAAE,CAACQ,KAAK,CAAC,YAAK;MACpB;IAAA,CACH,CAAC;EACN,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAChB,IAAMU,kBAAkB,GAAGlB,WAAW,CAAC,YAAK;IACxCG,cAAc,CAAC;MAAEA,cAAc,EAAEQ,MAAM;MAAEE,OAAO,EAAPA;IAAO,CAAE,CAAC;EACvD,CAAC,EAAE,CAACV,cAAc,EAAEQ,MAAM,EAAEE,OAAO,CAAC,CAAC;EACrC,OAAO;IACHC,WAAW,EAAXA,WAAW;IACXK,SAAS,EAAEL,WAAW,KAAK,YAAY,GAAGC,aAAa,GAAGK,SAAS;IACnEC,YAAY,EAAEP,WAAW,KAAK,eAAe,IAAIA,WAAW,KAAK,WAAW,GAAGG,gBAAgB,GAAGG,SAAS;IAC3GjB,cAAc,EAAEe,kBAAkB;IAClCR,SAAS,EAAEA,SAAS,aAATA,SAAS,cAATA,SAAS,GAAIU,SAAS;IACjCE,UAAU,EAAEV,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEW,OAAO,CAACC,IAAI;IAChCC,UAAU,EAAEb,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEW,OAAO,CAACG;GAC/B;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}