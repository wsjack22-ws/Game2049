{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BorshCoder = exports.stateDiscriminator = exports.BorshStateCoder = exports.eventDiscriminator = exports.BorshEventCoder = exports.ACCOUNT_DISCRIMINATOR_SIZE = exports.BorshAccountsCoder = exports.BorshInstructionCoder = void 0;\nconst instruction_js_1 = require(\"./instruction.js\");\nconst accounts_js_1 = require(\"./accounts.js\");\nconst event_js_1 = require(\"./event.js\");\nconst state_js_1 = require(\"./state.js\");\nvar instruction_js_2 = require(\"./instruction.js\");\nObject.defineProperty(exports, \"BorshInstructionCoder\", {\n  enumerable: true,\n  get: function () {\n    return instruction_js_2.BorshInstructionCoder;\n  }\n});\nvar accounts_js_2 = require(\"./accounts.js\");\nObject.defineProperty(exports, \"BorshAccountsCoder\", {\n  enumerable: true,\n  get: function () {\n    return accounts_js_2.BorshAccountsCoder;\n  }\n});\nObject.defineProperty(exports, \"ACCOUNT_DISCRIMINATOR_SIZE\", {\n  enumerable: true,\n  get: function () {\n    return accounts_js_2.ACCOUNT_DISCRIMINATOR_SIZE;\n  }\n});\nvar event_js_2 = require(\"./event.js\");\nObject.defineProperty(exports, \"BorshEventCoder\", {\n  enumerable: true,\n  get: function () {\n    return event_js_2.BorshEventCoder;\n  }\n});\nObject.defineProperty(exports, \"eventDiscriminator\", {\n  enumerable: true,\n  get: function () {\n    return event_js_2.eventDiscriminator;\n  }\n});\nvar state_js_2 = require(\"./state.js\");\nObject.defineProperty(exports, \"BorshStateCoder\", {\n  enumerable: true,\n  get: function () {\n    return state_js_2.BorshStateCoder;\n  }\n});\nObject.defineProperty(exports, \"stateDiscriminator\", {\n  enumerable: true,\n  get: function () {\n    return state_js_2.stateDiscriminator;\n  }\n});\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */\nclass BorshCoder {\n  constructor(idl) {\n    this.instruction = new instruction_js_1.BorshInstructionCoder(idl);\n    this.accounts = new accounts_js_1.BorshAccountsCoder(idl);\n    this.events = new event_js_1.BorshEventCoder(idl);\n    if (idl.state) {\n      this.state = new state_js_1.BorshStateCoder(idl);\n    }\n  }\n}\nexports.BorshCoder = BorshCoder;","map":{"version":3,"names":["instruction_js_1","require","accounts_js_1","event_js_1","state_js_1","instruction_js_2","Object","defineProperty","exports","enumerable","get","BorshInstructionCoder","accounts_js_2","BorshAccountsCoder","ACCOUNT_DISCRIMINATOR_SIZE","event_js_2","BorshEventCoder","eventDiscriminator","state_js_2","BorshStateCoder","stateDiscriminator","BorshCoder","constructor","idl","instruction","accounts","events","state"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/coder/borsh/index.ts"],"sourcesContent":["import { Idl } from \"../../idl.js\";\nimport { BorshInstructionCoder } from \"./instruction.js\";\nimport { BorshAccountsCoder } from \"./accounts.js\";\nimport { BorshEventCoder } from \"./event.js\";\nimport { BorshStateCoder } from \"./state.js\";\nimport { Coder } from \"../index.js\";\n\nexport { BorshInstructionCoder } from \"./instruction.js\";\nexport { BorshAccountsCoder, ACCOUNT_DISCRIMINATOR_SIZE } from \"./accounts.js\";\nexport { BorshEventCoder, eventDiscriminator } from \"./event.js\";\nexport { BorshStateCoder, stateDiscriminator } from \"./state.js\";\n\n/**\n * BorshCoder is the default Coder for Anchor programs implementing the\n * borsh based serialization interface.\n */\nexport class BorshCoder<A extends string = string> implements Coder {\n  /**\n   * Instruction coder.\n   */\n  readonly instruction: BorshInstructionCoder;\n\n  /**\n   * Account coder.\n   */\n  readonly accounts: BorshAccountsCoder<A>;\n\n  /**\n   * Coder for state structs.\n   */\n  readonly state: BorshStateCoder;\n\n  /**\n   * Coder for events.\n   */\n  readonly events: BorshEventCoder;\n\n  constructor(idl: Idl) {\n    this.instruction = new BorshInstructionCoder(idl);\n    this.accounts = new BorshAccountsCoder(idl);\n    this.events = new BorshEventCoder(idl);\n    if (idl.state) {\n      this.state = new BorshStateCoder(idl);\n    }\n  }\n}\n"],"mappings":";;;;;;AACA,MAAAA,gBAAA,GAAAC,OAAA;AACA,MAAAC,aAAA,GAAAD,OAAA;AACA,MAAAE,UAAA,GAAAF,OAAA;AACA,MAAAG,UAAA,GAAAH,OAAA;AAGA,IAAAI,gBAAA,GAAAJ,OAAA;AAASK,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAL,gBAAA,CAAAM,qBAAqB;EAAA;AAAA;AAC9B,IAAAC,aAAA,GAAAX,OAAA;AAASK,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,aAAA,CAAAC,kBAAkB;EAAA;AAAA;AAAEP,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,aAAA,CAAAE,0BAA0B;EAAA;AAAA;AACvD,IAAAC,UAAA,GAAAd,OAAA;AAASK,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAK,UAAA,CAAAC,eAAe;EAAA;AAAA;AAAEV,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAK,UAAA,CAAAE,kBAAkB;EAAA;AAAA;AAC5C,IAAAC,UAAA,GAAAjB,OAAA;AAASK,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAQ,UAAA,CAAAC,eAAe;EAAA;AAAA;AAAEb,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAQ,UAAA,CAAAE,kBAAkB;EAAA;AAAA;AAE5C;;;;AAIA,MAAaC,UAAU;EAqBrBC,YAAYC,GAAQ;IAClB,IAAI,CAACC,WAAW,GAAG,IAAIxB,gBAAA,CAAAW,qBAAqB,CAACY,GAAG,CAAC;IACjD,IAAI,CAACE,QAAQ,GAAG,IAAIvB,aAAA,CAAAW,kBAAkB,CAACU,GAAG,CAAC;IAC3C,IAAI,CAACG,MAAM,GAAG,IAAIvB,UAAA,CAAAa,eAAe,CAACO,GAAG,CAAC;IACtC,IAAIA,GAAG,CAACI,KAAK,EAAE;MACb,IAAI,CAACA,KAAK,GAAG,IAAIvB,UAAA,CAAAe,eAAe,CAACI,GAAG,CAAC;;EAEzC;;AA5BFf,OAAA,CAAAa,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}