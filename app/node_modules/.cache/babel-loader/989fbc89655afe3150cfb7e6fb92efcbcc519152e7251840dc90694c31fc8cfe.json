{"ast":null,"code":"(function () {\n  function r(e, n, t) {\n    function o(i, f) {\n      if (!n[i]) {\n        if (!e[i]) {\n          var c = \"function\" == typeof require && require;\n          if (!f && c) return c(i, !0);\n          if (u) return u(i, !0);\n          var a = new Error(\"Cannot find module '\" + i + \"'\");\n          throw a.code = \"MODULE_NOT_FOUND\", a;\n        }\n        var p = n[i] = {\n          exports: {}\n        };\n        e[i][0].call(p.exports, function (r) {\n          var n = e[i][1][r];\n          return o(n || r);\n        }, p, p.exports, r, e, n, t);\n      }\n      return n[i].exports;\n    }\n    for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);\n    return o;\n  }\n  return r;\n})()({\n  1: [function (require, module, exports) {\n    const Buffer = require(\"buffer/\").Buffer;\n    if (window) {\n      window.Buffer = Buffer;\n    }\n  }, {\n    \"buffer/\": 3\n  }],\n  2: [function (require, module, exports) {\n    'use strict';\n\n    exports.byteLength = byteLength;\n    exports.toByteArray = toByteArray;\n    exports.fromByteArray = fromByteArray;\n    var lookup = [];\n    var revLookup = [];\n    var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    for (var i = 0, len = code.length; i < len; ++i) {\n      lookup[i] = code[i];\n      revLookup[code.charCodeAt(i)] = i;\n    }\n\n    // Support decoding URL-safe base64 strings, as Node.js does.\n    // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n    revLookup['-'.charCodeAt(0)] = 62;\n    revLookup['_'.charCodeAt(0)] = 63;\n    function getLens(b64) {\n      var len = b64.length;\n      if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4');\n      }\n\n      // Trim off extra bytes after placeholder bytes are found\n      // See: https://github.com/beatgammit/base64-js/issues/42\n      var validLen = b64.indexOf('=');\n      if (validLen === -1) validLen = len;\n      var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n      return [validLen, placeHoldersLen];\n    }\n\n    // base64 is 4/3 + up to two characters of the original data\n    function byteLength(b64) {\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n    function _byteLength(b64, validLen, placeHoldersLen) {\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n    function toByteArray(b64) {\n      var tmp;\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n      var curByte = 0;\n\n      // if there are placeholders, only get up to the last complete 4 chars\n      var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n      for (var i = 0; i < len; i += 4) {\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = tmp >> 16 & 0xFF;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n      }\n      if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[curByte++] = tmp & 0xFF;\n      }\n      if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n      }\n      return arr;\n    }\n    function tripletToBase64(num) {\n      return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n    }\n    function encodeChunk(uint8, start, end) {\n      var tmp;\n      var output = [];\n      for (var i = start; i < end; i += 3) {\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push(tripletToBase64(tmp));\n      }\n      return output.join('');\n    }\n    function fromByteArray(uint8) {\n      var tmp;\n      var len = uint8.length;\n      var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n      var parts = [];\n      var maxChunkLength = 16383; // must be multiple of 3\n\n      // go through the array every three bytes, we'll deal with trailing stuff later\n      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n      }\n\n      // pad the end with zeros, but make sure to not forget the extra bytes\n      if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n      } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n      }\n      return parts.join('');\n    }\n  }, {}],\n  3: [function (require, module, exports) {\n    (function (Buffer) {\n      /*!\n       * The buffer module from node.js, for the browser.\n       *\n       * @author   Feross Aboukhadijeh <https://feross.org>\n       * @license  MIT\n       */\n      /* eslint-disable no-proto */\n\n      'use strict';\n\n      var base64 = require('base64-js');\n      var ieee754 = require('ieee754');\n      exports.Buffer = Buffer;\n      exports.SlowBuffer = SlowBuffer;\n      exports.INSPECT_MAX_BYTES = 50;\n      var K_MAX_LENGTH = 0x7fffffff;\n      exports.kMaxLength = K_MAX_LENGTH;\n\n      /**\n       * If `Buffer.TYPED_ARRAY_SUPPORT`:\n       *   === true    Use Uint8Array implementation (fastest)\n       *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n       *               implementation (most compatible, even IE6)\n       *\n       * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n       * Opera 11.6+, iOS 4.2+.\n       *\n       * We report that the browser does not support typed arrays if the are not subclassable\n       * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n       * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n       * for __proto__ and has a buggy typed array implementation.\n       */\n      Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n      if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n        console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n      }\n      function typedArraySupport() {\n        // Can typed array instances can be augmented?\n        try {\n          var arr = new Uint8Array(1);\n          arr.__proto__ = {\n            __proto__: Uint8Array.prototype,\n            foo: function () {\n              return 42;\n            }\n          };\n          return arr.foo() === 42;\n        } catch (e) {\n          return false;\n        }\n      }\n      Object.defineProperty(Buffer.prototype, 'parent', {\n        enumerable: true,\n        get: function () {\n          if (!Buffer.isBuffer(this)) return undefined;\n          return this.buffer;\n        }\n      });\n      Object.defineProperty(Buffer.prototype, 'offset', {\n        enumerable: true,\n        get: function () {\n          if (!Buffer.isBuffer(this)) return undefined;\n          return this.byteOffset;\n        }\n      });\n      function createBuffer(length) {\n        if (length > K_MAX_LENGTH) {\n          throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n        }\n        // Return an augmented `Uint8Array` instance\n        var buf = new Uint8Array(length);\n        buf.__proto__ = Buffer.prototype;\n        return buf;\n      }\n\n      /**\n       * The Buffer constructor returns instances of `Uint8Array` that have their\n       * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n       * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n       * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n       * returns a single octet.\n       *\n       * The `Uint8Array` prototype remains unmodified.\n       */\n\n      function Buffer(arg, encodingOrOffset, length) {\n        // Common case.\n        if (typeof arg === 'number') {\n          if (typeof encodingOrOffset === 'string') {\n            throw new TypeError('The \"string\" argument must be of type string. Received type number');\n          }\n          return allocUnsafe(arg);\n        }\n        return from(arg, encodingOrOffset, length);\n      }\n\n      // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n      if (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n        Object.defineProperty(Buffer, Symbol.species, {\n          value: null,\n          configurable: true,\n          enumerable: false,\n          writable: false\n        });\n      }\n      Buffer.poolSize = 8192; // not used by this implementation\n\n      function from(value, encodingOrOffset, length) {\n        if (typeof value === 'string') {\n          return fromString(value, encodingOrOffset);\n        }\n        if (ArrayBuffer.isView(value)) {\n          return fromArrayLike(value);\n        }\n        if (value == null) {\n          throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n        }\n        if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n          return fromArrayBuffer(value, encodingOrOffset, length);\n        }\n        if (typeof value === 'number') {\n          throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n        }\n        var valueOf = value.valueOf && value.valueOf();\n        if (valueOf != null && valueOf !== value) {\n          return Buffer.from(valueOf, encodingOrOffset, length);\n        }\n        var b = fromObject(value);\n        if (b) return b;\n        if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n          return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n        }\n        throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n      }\n\n      /**\n       * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n       * if value is a number.\n       * Buffer.from(str[, encoding])\n       * Buffer.from(array)\n       * Buffer.from(buffer)\n       * Buffer.from(arrayBuffer[, byteOffset[, length]])\n       **/\n      Buffer.from = function (value, encodingOrOffset, length) {\n        return from(value, encodingOrOffset, length);\n      };\n\n      // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n      // https://github.com/feross/buffer/pull/148\n      Buffer.prototype.__proto__ = Uint8Array.prototype;\n      Buffer.__proto__ = Uint8Array;\n      function assertSize(size) {\n        if (typeof size !== 'number') {\n          throw new TypeError('\"size\" argument must be of type number');\n        } else if (size < 0) {\n          throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n        }\n      }\n      function alloc(size, fill, encoding) {\n        assertSize(size);\n        if (size <= 0) {\n          return createBuffer(size);\n        }\n        if (fill !== undefined) {\n          // Only pay attention to encoding if it's a string. This\n          // prevents accidentally sending in a number that would\n          // be interpretted as a start offset.\n          return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n        }\n        return createBuffer(size);\n      }\n\n      /**\n       * Creates a new filled Buffer instance.\n       * alloc(size[, fill[, encoding]])\n       **/\n      Buffer.alloc = function (size, fill, encoding) {\n        return alloc(size, fill, encoding);\n      };\n      function allocUnsafe(size) {\n        assertSize(size);\n        return createBuffer(size < 0 ? 0 : checked(size) | 0);\n      }\n\n      /**\n       * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n       * */\n      Buffer.allocUnsafe = function (size) {\n        return allocUnsafe(size);\n      };\n      /**\n       * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n       */\n      Buffer.allocUnsafeSlow = function (size) {\n        return allocUnsafe(size);\n      };\n      function fromString(string, encoding) {\n        if (typeof encoding !== 'string' || encoding === '') {\n          encoding = 'utf8';\n        }\n        if (!Buffer.isEncoding(encoding)) {\n          throw new TypeError('Unknown encoding: ' + encoding);\n        }\n        var length = byteLength(string, encoding) | 0;\n        var buf = createBuffer(length);\n        var actual = buf.write(string, encoding);\n        if (actual !== length) {\n          // Writing a hex string, for example, that contains invalid characters will\n          // cause everything after the first invalid character to be ignored. (e.g.\n          // 'abxxcd' will be treated as 'ab')\n          buf = buf.slice(0, actual);\n        }\n        return buf;\n      }\n      function fromArrayLike(array) {\n        var length = array.length < 0 ? 0 : checked(array.length) | 0;\n        var buf = createBuffer(length);\n        for (var i = 0; i < length; i += 1) {\n          buf[i] = array[i] & 255;\n        }\n        return buf;\n      }\n      function fromArrayBuffer(array, byteOffset, length) {\n        if (byteOffset < 0 || array.byteLength < byteOffset) {\n          throw new RangeError('\"offset\" is outside of buffer bounds');\n        }\n        if (array.byteLength < byteOffset + (length || 0)) {\n          throw new RangeError('\"length\" is outside of buffer bounds');\n        }\n        var buf;\n        if (byteOffset === undefined && length === undefined) {\n          buf = new Uint8Array(array);\n        } else if (length === undefined) {\n          buf = new Uint8Array(array, byteOffset);\n        } else {\n          buf = new Uint8Array(array, byteOffset, length);\n        }\n\n        // Return an augmented `Uint8Array` instance\n        buf.__proto__ = Buffer.prototype;\n        return buf;\n      }\n      function fromObject(obj) {\n        if (Buffer.isBuffer(obj)) {\n          var len = checked(obj.length) | 0;\n          var buf = createBuffer(len);\n          if (buf.length === 0) {\n            return buf;\n          }\n          obj.copy(buf, 0, 0, len);\n          return buf;\n        }\n        if (obj.length !== undefined) {\n          if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n            return createBuffer(0);\n          }\n          return fromArrayLike(obj);\n        }\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n          return fromArrayLike(obj.data);\n        }\n      }\n      function checked(length) {\n        // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n        // length is NaN (which is otherwise coerced to zero.)\n        if (length >= K_MAX_LENGTH) {\n          throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n        }\n        return length | 0;\n      }\n      function SlowBuffer(length) {\n        if (+length != length) {\n          // eslint-disable-line eqeqeq\n          length = 0;\n        }\n        return Buffer.alloc(+length);\n      }\n      Buffer.isBuffer = function isBuffer(b) {\n        return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n      };\n\n      Buffer.compare = function compare(a, b) {\n        if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n        if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n        if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n          throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n        }\n        if (a === b) return 0;\n        var x = a.length;\n        var y = b.length;\n        for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n          if (a[i] !== b[i]) {\n            x = a[i];\n            y = b[i];\n            break;\n          }\n        }\n        if (x < y) return -1;\n        if (y < x) return 1;\n        return 0;\n      };\n      Buffer.isEncoding = function isEncoding(encoding) {\n        switch (String(encoding).toLowerCase()) {\n          case 'hex':\n          case 'utf8':\n          case 'utf-8':\n          case 'ascii':\n          case 'latin1':\n          case 'binary':\n          case 'base64':\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return true;\n          default:\n            return false;\n        }\n      };\n      Buffer.concat = function concat(list, length) {\n        if (!Array.isArray(list)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        if (list.length === 0) {\n          return Buffer.alloc(0);\n        }\n        var i;\n        if (length === undefined) {\n          length = 0;\n          for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n          }\n        }\n        var buffer = Buffer.allocUnsafe(length);\n        var pos = 0;\n        for (i = 0; i < list.length; ++i) {\n          var buf = list[i];\n          if (isInstance(buf, Uint8Array)) {\n            buf = Buffer.from(buf);\n          }\n          if (!Buffer.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n          }\n          buf.copy(buffer, pos);\n          pos += buf.length;\n        }\n        return buffer;\n      };\n      function byteLength(string, encoding) {\n        if (Buffer.isBuffer(string)) {\n          return string.length;\n        }\n        if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n          return string.byteLength;\n        }\n        if (typeof string !== 'string') {\n          throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n        }\n        var len = string.length;\n        var mustMatch = arguments.length > 2 && arguments[2] === true;\n        if (!mustMatch && len === 0) return 0;\n\n        // Use a for loop to avoid recursion\n        var loweredCase = false;\n        for (;;) {\n          switch (encoding) {\n            case 'ascii':\n            case 'latin1':\n            case 'binary':\n              return len;\n            case 'utf8':\n            case 'utf-8':\n              return utf8ToBytes(string).length;\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n              return len * 2;\n            case 'hex':\n              return len >>> 1;\n            case 'base64':\n              return base64ToBytes(string).length;\n            default:\n              if (loweredCase) {\n                return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n              }\n\n              encoding = ('' + encoding).toLowerCase();\n              loweredCase = true;\n          }\n        }\n      }\n      Buffer.byteLength = byteLength;\n      function slowToString(encoding, start, end) {\n        var loweredCase = false;\n\n        // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n        // property of a typed array.\n\n        // This behaves neither like String nor Uint8Array in that we set start/end\n        // to their upper/lower bounds if the value passed is out of range.\n        // undefined is handled specially as per ECMA-262 6th Edition,\n        // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n        if (start === undefined || start < 0) {\n          start = 0;\n        }\n        // Return early if start > this.length. Done here to prevent potential uint32\n        // coercion fail below.\n        if (start > this.length) {\n          return '';\n        }\n        if (end === undefined || end > this.length) {\n          end = this.length;\n        }\n        if (end <= 0) {\n          return '';\n        }\n\n        // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n        end >>>= 0;\n        start >>>= 0;\n        if (end <= start) {\n          return '';\n        }\n        if (!encoding) encoding = 'utf8';\n        while (true) {\n          switch (encoding) {\n            case 'hex':\n              return hexSlice(this, start, end);\n            case 'utf8':\n            case 'utf-8':\n              return utf8Slice(this, start, end);\n            case 'ascii':\n              return asciiSlice(this, start, end);\n            case 'latin1':\n            case 'binary':\n              return latin1Slice(this, start, end);\n            case 'base64':\n              return base64Slice(this, start, end);\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n              return utf16leSlice(this, start, end);\n            default:\n              if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n              encoding = (encoding + '').toLowerCase();\n              loweredCase = true;\n          }\n        }\n      }\n\n      // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n      // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n      // reliably in a browserify context because there could be multiple different\n      // copies of the 'buffer' package in use. This method works even for Buffer\n      // instances that were created from another copy of the `buffer` package.\n      // See: https://github.com/feross/buffer/issues/154\n      Buffer.prototype._isBuffer = true;\n      function swap(b, n, m) {\n        var i = b[n];\n        b[n] = b[m];\n        b[m] = i;\n      }\n      Buffer.prototype.swap16 = function swap16() {\n        var len = this.length;\n        if (len % 2 !== 0) {\n          throw new RangeError('Buffer size must be a multiple of 16-bits');\n        }\n        for (var i = 0; i < len; i += 2) {\n          swap(this, i, i + 1);\n        }\n        return this;\n      };\n      Buffer.prototype.swap32 = function swap32() {\n        var len = this.length;\n        if (len % 4 !== 0) {\n          throw new RangeError('Buffer size must be a multiple of 32-bits');\n        }\n        for (var i = 0; i < len; i += 4) {\n          swap(this, i, i + 3);\n          swap(this, i + 1, i + 2);\n        }\n        return this;\n      };\n      Buffer.prototype.swap64 = function swap64() {\n        var len = this.length;\n        if (len % 8 !== 0) {\n          throw new RangeError('Buffer size must be a multiple of 64-bits');\n        }\n        for (var i = 0; i < len; i += 8) {\n          swap(this, i, i + 7);\n          swap(this, i + 1, i + 6);\n          swap(this, i + 2, i + 5);\n          swap(this, i + 3, i + 4);\n        }\n        return this;\n      };\n      Buffer.prototype.toString = function toString() {\n        var length = this.length;\n        if (length === 0) return '';\n        if (arguments.length === 0) return utf8Slice(this, 0, length);\n        return slowToString.apply(this, arguments);\n      };\n      Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n      Buffer.prototype.equals = function equals(b) {\n        if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n        if (this === b) return true;\n        return Buffer.compare(this, b) === 0;\n      };\n      Buffer.prototype.inspect = function inspect() {\n        var str = '';\n        var max = exports.INSPECT_MAX_BYTES;\n        str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n        if (this.length > max) str += ' ... ';\n        return '<Buffer ' + str + '>';\n      };\n      Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n        if (isInstance(target, Uint8Array)) {\n          target = Buffer.from(target, target.offset, target.byteLength);\n        }\n        if (!Buffer.isBuffer(target)) {\n          throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n        }\n        if (start === undefined) {\n          start = 0;\n        }\n        if (end === undefined) {\n          end = target ? target.length : 0;\n        }\n        if (thisStart === undefined) {\n          thisStart = 0;\n        }\n        if (thisEnd === undefined) {\n          thisEnd = this.length;\n        }\n        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n          throw new RangeError('out of range index');\n        }\n        if (thisStart >= thisEnd && start >= end) {\n          return 0;\n        }\n        if (thisStart >= thisEnd) {\n          return -1;\n        }\n        if (start >= end) {\n          return 1;\n        }\n        start >>>= 0;\n        end >>>= 0;\n        thisStart >>>= 0;\n        thisEnd >>>= 0;\n        if (this === target) return 0;\n        var x = thisEnd - thisStart;\n        var y = end - start;\n        var len = Math.min(x, y);\n        var thisCopy = this.slice(thisStart, thisEnd);\n        var targetCopy = target.slice(start, end);\n        for (var i = 0; i < len; ++i) {\n          if (thisCopy[i] !== targetCopy[i]) {\n            x = thisCopy[i];\n            y = targetCopy[i];\n            break;\n          }\n        }\n        if (x < y) return -1;\n        if (y < x) return 1;\n        return 0;\n      };\n\n      // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n      // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n      //\n      // Arguments:\n      // - buffer - a Buffer to search\n      // - val - a string, Buffer, or number\n      // - byteOffset - an index into `buffer`; will be clamped to an int32\n      // - encoding - an optional encoding, relevant is val is a string\n      // - dir - true for indexOf, false for lastIndexOf\n      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n        // Empty buffer means no match\n        if (buffer.length === 0) return -1;\n\n        // Normalize byteOffset\n        if (typeof byteOffset === 'string') {\n          encoding = byteOffset;\n          byteOffset = 0;\n        } else if (byteOffset > 0x7fffffff) {\n          byteOffset = 0x7fffffff;\n        } else if (byteOffset < -0x80000000) {\n          byteOffset = -0x80000000;\n        }\n        byteOffset = +byteOffset; // Coerce to Number.\n        if (numberIsNaN(byteOffset)) {\n          // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n          byteOffset = dir ? 0 : buffer.length - 1;\n        }\n\n        // Normalize byteOffset: negative offsets start from the end of the buffer\n        if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n        if (byteOffset >= buffer.length) {\n          if (dir) return -1;else byteOffset = buffer.length - 1;\n        } else if (byteOffset < 0) {\n          if (dir) byteOffset = 0;else return -1;\n        }\n\n        // Normalize val\n        if (typeof val === 'string') {\n          val = Buffer.from(val, encoding);\n        }\n\n        // Finally, search either indexOf (if dir is true) or lastIndexOf\n        if (Buffer.isBuffer(val)) {\n          // Special case: looking for empty string/buffer always fails\n          if (val.length === 0) {\n            return -1;\n          }\n          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n        } else if (typeof val === 'number') {\n          val = val & 0xFF; // Search for a byte value [0-255]\n          if (typeof Uint8Array.prototype.indexOf === 'function') {\n            if (dir) {\n              return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            } else {\n              return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n            }\n          }\n          return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n        }\n        throw new TypeError('val must be string, number or Buffer');\n      }\n      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n        var indexSize = 1;\n        var arrLength = arr.length;\n        var valLength = val.length;\n        if (encoding !== undefined) {\n          encoding = String(encoding).toLowerCase();\n          if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n            if (arr.length < 2 || val.length < 2) {\n              return -1;\n            }\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n          }\n        }\n        function read(buf, i) {\n          if (indexSize === 1) {\n            return buf[i];\n          } else {\n            return buf.readUInt16BE(i * indexSize);\n          }\n        }\n        var i;\n        if (dir) {\n          var foundIndex = -1;\n          for (i = byteOffset; i < arrLength; i++) {\n            if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n              if (foundIndex === -1) foundIndex = i;\n              if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n            } else {\n              if (foundIndex !== -1) i -= i - foundIndex;\n              foundIndex = -1;\n            }\n          }\n        } else {\n          if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n          for (i = byteOffset; i >= 0; i--) {\n            var found = true;\n            for (var j = 0; j < valLength; j++) {\n              if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n              }\n            }\n            if (found) return i;\n          }\n        }\n        return -1;\n      }\n      Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n        return this.indexOf(val, byteOffset, encoding) !== -1;\n      };\n      Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n      };\n      Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n      };\n      function hexWrite(buf, string, offset, length) {\n        offset = Number(offset) || 0;\n        var remaining = buf.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n        var strLen = string.length;\n        if (length > strLen / 2) {\n          length = strLen / 2;\n        }\n        for (var i = 0; i < length; ++i) {\n          var parsed = parseInt(string.substr(i * 2, 2), 16);\n          if (numberIsNaN(parsed)) return i;\n          buf[offset + i] = parsed;\n        }\n        return i;\n      }\n      function utf8Write(buf, string, offset, length) {\n        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n      }\n      function asciiWrite(buf, string, offset, length) {\n        return blitBuffer(asciiToBytes(string), buf, offset, length);\n      }\n      function latin1Write(buf, string, offset, length) {\n        return asciiWrite(buf, string, offset, length);\n      }\n      function base64Write(buf, string, offset, length) {\n        return blitBuffer(base64ToBytes(string), buf, offset, length);\n      }\n      function ucs2Write(buf, string, offset, length) {\n        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n      }\n      Buffer.prototype.write = function write(string, offset, length, encoding) {\n        // Buffer#write(string)\n        if (offset === undefined) {\n          encoding = 'utf8';\n          length = this.length;\n          offset = 0;\n          // Buffer#write(string, encoding)\n        } else if (length === undefined && typeof offset === 'string') {\n          encoding = offset;\n          length = this.length;\n          offset = 0;\n          // Buffer#write(string, offset[, length][, encoding])\n        } else if (isFinite(offset)) {\n          offset = offset >>> 0;\n          if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === undefined) encoding = 'utf8';\n          } else {\n            encoding = length;\n            length = undefined;\n          }\n        } else {\n          throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n        }\n        var remaining = this.length - offset;\n        if (length === undefined || length > remaining) length = remaining;\n        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n          throw new RangeError('Attempt to write outside buffer bounds');\n        }\n        if (!encoding) encoding = 'utf8';\n        var loweredCase = false;\n        for (;;) {\n          switch (encoding) {\n            case 'hex':\n              return hexWrite(this, string, offset, length);\n            case 'utf8':\n            case 'utf-8':\n              return utf8Write(this, string, offset, length);\n            case 'ascii':\n              return asciiWrite(this, string, offset, length);\n            case 'latin1':\n            case 'binary':\n              return latin1Write(this, string, offset, length);\n            case 'base64':\n              // Warning: maxLength not taken into account in base64Write\n              return base64Write(this, string, offset, length);\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n              return ucs2Write(this, string, offset, length);\n            default:\n              if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n              encoding = ('' + encoding).toLowerCase();\n              loweredCase = true;\n          }\n        }\n      };\n      Buffer.prototype.toJSON = function toJSON() {\n        return {\n          type: 'Buffer',\n          data: Array.prototype.slice.call(this._arr || this, 0)\n        };\n      };\n      function base64Slice(buf, start, end) {\n        if (start === 0 && end === buf.length) {\n          return base64.fromByteArray(buf);\n        } else {\n          return base64.fromByteArray(buf.slice(start, end));\n        }\n      }\n      function utf8Slice(buf, start, end) {\n        end = Math.min(buf.length, end);\n        var res = [];\n        var i = start;\n        while (i < end) {\n          var firstByte = buf[i];\n          var codePoint = null;\n          var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n          if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch (bytesPerSequence) {\n              case 1:\n                if (firstByte < 0x80) {\n                  codePoint = firstByte;\n                }\n                break;\n              case 2:\n                secondByte = buf[i + 1];\n                if ((secondByte & 0xC0) === 0x80) {\n                  tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                  if (tempCodePoint > 0x7F) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n                break;\n              case 3:\n                secondByte = buf[i + 1];\n                thirdByte = buf[i + 2];\n                if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                  tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                  if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n                break;\n              case 4:\n                secondByte = buf[i + 1];\n                thirdByte = buf[i + 2];\n                fourthByte = buf[i + 3];\n                if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                  tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                  if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n            }\n          }\n          if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xFFFD;\n            bytesPerSequence = 1;\n          } else if (codePoint > 0xFFFF) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000;\n            res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n            codePoint = 0xDC00 | codePoint & 0x3FF;\n          }\n          res.push(codePoint);\n          i += bytesPerSequence;\n        }\n        return decodeCodePointsArray(res);\n      }\n\n      // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n      // the lowest limit is Chrome, with 0x10000 args.\n      // We go 1 magnitude less, for safety\n      var MAX_ARGUMENTS_LENGTH = 0x1000;\n      function decodeCodePointsArray(codePoints) {\n        var len = codePoints.length;\n        if (len <= MAX_ARGUMENTS_LENGTH) {\n          return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n        }\n\n        // Decode in chunks to avoid \"call stack size exceeded\".\n        var res = '';\n        var i = 0;\n        while (i < len) {\n          res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n        }\n        return res;\n      }\n      function asciiSlice(buf, start, end) {\n        var ret = '';\n        end = Math.min(buf.length, end);\n        for (var i = start; i < end; ++i) {\n          ret += String.fromCharCode(buf[i] & 0x7F);\n        }\n        return ret;\n      }\n      function latin1Slice(buf, start, end) {\n        var ret = '';\n        end = Math.min(buf.length, end);\n        for (var i = start; i < end; ++i) {\n          ret += String.fromCharCode(buf[i]);\n        }\n        return ret;\n      }\n      function hexSlice(buf, start, end) {\n        var len = buf.length;\n        if (!start || start < 0) start = 0;\n        if (!end || end < 0 || end > len) end = len;\n        var out = '';\n        for (var i = start; i < end; ++i) {\n          out += toHex(buf[i]);\n        }\n        return out;\n      }\n      function utf16leSlice(buf, start, end) {\n        var bytes = buf.slice(start, end);\n        var res = '';\n        for (var i = 0; i < bytes.length; i += 2) {\n          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n        }\n        return res;\n      }\n      Buffer.prototype.slice = function slice(start, end) {\n        var len = this.length;\n        start = ~~start;\n        end = end === undefined ? len : ~~end;\n        if (start < 0) {\n          start += len;\n          if (start < 0) start = 0;\n        } else if (start > len) {\n          start = len;\n        }\n        if (end < 0) {\n          end += len;\n          if (end < 0) end = 0;\n        } else if (end > len) {\n          end = len;\n        }\n        if (end < start) end = start;\n        var newBuf = this.subarray(start, end);\n        // Return an augmented `Uint8Array` instance\n        newBuf.__proto__ = Buffer.prototype;\n        return newBuf;\n      };\n\n      /*\n       * Need to make sure that buffer isn't trying to write out of bounds.\n       */\n      function checkOffset(offset, ext, length) {\n        if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n        if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n      }\n      Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        if (!noAssert) checkOffset(offset, byteLength, this.length);\n        var val = this[offset];\n        var mul = 1;\n        var i = 0;\n        while (++i < byteLength && (mul *= 0x100)) {\n          val += this[offset + i] * mul;\n        }\n        return val;\n      };\n      Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        if (!noAssert) {\n          checkOffset(offset, byteLength, this.length);\n        }\n        var val = this[offset + --byteLength];\n        var mul = 1;\n        while (byteLength > 0 && (mul *= 0x100)) {\n          val += this[offset + --byteLength] * mul;\n        }\n        return val;\n      };\n      Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 1, this.length);\n        return this[offset];\n      };\n      Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 2, this.length);\n        return this[offset] | this[offset + 1] << 8;\n      };\n      Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 2, this.length);\n        return this[offset] << 8 | this[offset + 1];\n      };\n      Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 4, this.length);\n        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n      };\n      Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 4, this.length);\n        return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n      };\n      Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        if (!noAssert) checkOffset(offset, byteLength, this.length);\n        var val = this[offset];\n        var mul = 1;\n        var i = 0;\n        while (++i < byteLength && (mul *= 0x100)) {\n          val += this[offset + i] * mul;\n        }\n        mul *= 0x80;\n        if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n        return val;\n      };\n      Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        if (!noAssert) checkOffset(offset, byteLength, this.length);\n        var i = byteLength;\n        var mul = 1;\n        var val = this[offset + --i];\n        while (i > 0 && (mul *= 0x100)) {\n          val += this[offset + --i] * mul;\n        }\n        mul *= 0x80;\n        if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n        return val;\n      };\n      Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 1, this.length);\n        if (!(this[offset] & 0x80)) return this[offset];\n        return (0xff - this[offset] + 1) * -1;\n      };\n      Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 2, this.length);\n        var val = this[offset] | this[offset + 1] << 8;\n        return val & 0x8000 ? val | 0xFFFF0000 : val;\n      };\n      Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 2, this.length);\n        var val = this[offset + 1] | this[offset] << 8;\n        return val & 0x8000 ? val | 0xFFFF0000 : val;\n      };\n      Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 4, this.length);\n        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n      };\n      Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 4, this.length);\n        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n      };\n      Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 4, this.length);\n        return ieee754.read(this, offset, true, 23, 4);\n      };\n      Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 4, this.length);\n        return ieee754.read(this, offset, false, 23, 4);\n      };\n      Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 8, this.length);\n        return ieee754.read(this, offset, true, 52, 8);\n      };\n      Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert) checkOffset(offset, 8, this.length);\n        return ieee754.read(this, offset, false, 52, 8);\n      };\n      function checkInt(buf, value, offset, ext, max, min) {\n        if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n        if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n        if (offset + ext > buf.length) throw new RangeError('Index out of range');\n      }\n      Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        if (!noAssert) {\n          var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n          checkInt(this, value, offset, byteLength, maxBytes, 0);\n        }\n        var mul = 1;\n        var i = 0;\n        this[offset] = value & 0xFF;\n        while (++i < byteLength && (mul *= 0x100)) {\n          this[offset + i] = value / mul & 0xFF;\n        }\n        return offset + byteLength;\n      };\n      Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        byteLength = byteLength >>> 0;\n        if (!noAssert) {\n          var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n          checkInt(this, value, offset, byteLength, maxBytes, 0);\n        }\n        var i = byteLength - 1;\n        var mul = 1;\n        this[offset + i] = value & 0xFF;\n        while (--i >= 0 && (mul *= 0x100)) {\n          this[offset + i] = value / mul & 0xFF;\n        }\n        return offset + byteLength;\n      };\n      Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n        this[offset] = value & 0xff;\n        return offset + 1;\n      };\n      Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n        return offset + 2;\n      };\n      Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n        return offset + 2;\n      };\n      Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n        this[offset + 3] = value >>> 24;\n        this[offset + 2] = value >>> 16;\n        this[offset + 1] = value >>> 8;\n        this[offset] = value & 0xff;\n        return offset + 4;\n      };\n      Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n        return offset + 4;\n      };\n      Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          var limit = Math.pow(2, 8 * byteLength - 1);\n          checkInt(this, value, offset, byteLength, limit - 1, -limit);\n        }\n        var i = 0;\n        var mul = 1;\n        var sub = 0;\n        this[offset] = value & 0xFF;\n        while (++i < byteLength && (mul *= 0x100)) {\n          if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n            sub = 1;\n          }\n          this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n        }\n        return offset + byteLength;\n      };\n      Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          var limit = Math.pow(2, 8 * byteLength - 1);\n          checkInt(this, value, offset, byteLength, limit - 1, -limit);\n        }\n        var i = byteLength - 1;\n        var mul = 1;\n        var sub = 0;\n        this[offset + i] = value & 0xFF;\n        while (--i >= 0 && (mul *= 0x100)) {\n          if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n            sub = 1;\n          }\n          this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n        }\n        return offset + byteLength;\n      };\n      Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n        if (value < 0) value = 0xff + value + 1;\n        this[offset] = value & 0xff;\n        return offset + 1;\n      };\n      Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n        return offset + 2;\n      };\n      Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 0xff;\n        return offset + 2;\n      };\n      Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n        this[offset] = value & 0xff;\n        this[offset + 1] = value >>> 8;\n        this[offset + 2] = value >>> 16;\n        this[offset + 3] = value >>> 24;\n        return offset + 4;\n      };\n      Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n        if (value < 0) value = 0xffffffff + value + 1;\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 0xff;\n        return offset + 4;\n      };\n      function checkIEEE754(buf, value, offset, ext, max, min) {\n        if (offset + ext > buf.length) throw new RangeError('Index out of range');\n        if (offset < 0) throw new RangeError('Index out of range');\n      }\n      function writeFloat(buf, value, offset, littleEndian, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n        }\n        ieee754.write(buf, value, offset, littleEndian, 23, 4);\n        return offset + 4;\n      }\n      Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n        return writeFloat(this, value, offset, true, noAssert);\n      };\n      Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n        return writeFloat(this, value, offset, false, noAssert);\n      };\n      function writeDouble(buf, value, offset, littleEndian, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n        }\n        ieee754.write(buf, value, offset, littleEndian, 52, 8);\n        return offset + 8;\n      }\n      Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n        return writeDouble(this, value, offset, true, noAssert);\n      };\n      Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n        return writeDouble(this, value, offset, false, noAssert);\n      };\n\n      // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n      Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n        if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n        if (!start) start = 0;\n        if (!end && end !== 0) end = this.length;\n        if (targetStart >= target.length) targetStart = target.length;\n        if (!targetStart) targetStart = 0;\n        if (end > 0 && end < start) end = start;\n\n        // Copy 0 bytes; we're done\n        if (end === start) return 0;\n        if (target.length === 0 || this.length === 0) return 0;\n\n        // Fatal error conditions\n        if (targetStart < 0) {\n          throw new RangeError('targetStart out of bounds');\n        }\n        if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n        if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n        // Are we oob?\n        if (end > this.length) end = this.length;\n        if (target.length - targetStart < end - start) {\n          end = target.length - targetStart + start;\n        }\n        var len = end - start;\n        if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n          // Use built-in when available, missing from IE11\n          this.copyWithin(targetStart, start, end);\n        } else if (this === target && start < targetStart && targetStart < end) {\n          // descending copy from end\n          for (var i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start];\n          }\n        } else {\n          Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n        }\n        return len;\n      };\n\n      // Usage:\n      //    buffer.fill(number[, offset[, end]])\n      //    buffer.fill(buffer[, offset[, end]])\n      //    buffer.fill(string[, offset[, end]][, encoding])\n      Buffer.prototype.fill = function fill(val, start, end, encoding) {\n        // Handle string cases:\n        if (typeof val === 'string') {\n          if (typeof start === 'string') {\n            encoding = start;\n            start = 0;\n            end = this.length;\n          } else if (typeof end === 'string') {\n            encoding = end;\n            end = this.length;\n          }\n          if (encoding !== undefined && typeof encoding !== 'string') {\n            throw new TypeError('encoding must be a string');\n          }\n          if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n            throw new TypeError('Unknown encoding: ' + encoding);\n          }\n          if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n              // Fast path: If `val` fits into a single byte, use that numeric value.\n              val = code;\n            }\n          }\n        } else if (typeof val === 'number') {\n          val = val & 255;\n        }\n\n        // Invalid ranges are not set to a default, so can range check early.\n        if (start < 0 || this.length < start || this.length < end) {\n          throw new RangeError('Out of range index');\n        }\n        if (end <= start) {\n          return this;\n        }\n        start = start >>> 0;\n        end = end === undefined ? this.length : end >>> 0;\n        if (!val) val = 0;\n        var i;\n        if (typeof val === 'number') {\n          for (i = start; i < end; ++i) {\n            this[i] = val;\n          }\n        } else {\n          var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n          var len = bytes.length;\n          if (len === 0) {\n            throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n          }\n          for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n          }\n        }\n        return this;\n      };\n\n      // HELPER FUNCTIONS\n      // ================\n\n      var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n      function base64clean(str) {\n        // Node takes equal signs as end of the Base64 encoding\n        str = str.split('=')[0];\n        // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n        str = str.trim().replace(INVALID_BASE64_RE, '');\n        // Node converts strings with length < 2 to ''\n        if (str.length < 2) return '';\n        // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n        while (str.length % 4 !== 0) {\n          str = str + '=';\n        }\n        return str;\n      }\n      function toHex(n) {\n        if (n < 16) return '0' + n.toString(16);\n        return n.toString(16);\n      }\n      function utf8ToBytes(string, units) {\n        units = units || Infinity;\n        var codePoint;\n        var length = string.length;\n        var leadSurrogate = null;\n        var bytes = [];\n        for (var i = 0; i < length; ++i) {\n          codePoint = string.charCodeAt(i);\n\n          // is surrogate component\n          if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n              // no lead yet\n              if (codePoint > 0xDBFF) {\n                // unexpected trail\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                continue;\n              } else if (i + 1 === length) {\n                // unpaired lead\n                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n                continue;\n              }\n\n              // valid lead\n              leadSurrogate = codePoint;\n              continue;\n            }\n\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              leadSurrogate = codePoint;\n              continue;\n            }\n\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n          } else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          }\n          leadSurrogate = null;\n\n          // encode utf8\n          if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break;\n            bytes.push(codePoint);\n          } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n          } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n          } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n          } else {\n            throw new Error('Invalid code point');\n          }\n        }\n        return bytes;\n      }\n      function asciiToBytes(str) {\n        var byteArray = [];\n        for (var i = 0; i < str.length; ++i) {\n          // Node's code seems to be doing this and not & 0x7F..\n          byteArray.push(str.charCodeAt(i) & 0xFF);\n        }\n        return byteArray;\n      }\n      function utf16leToBytes(str, units) {\n        var c, hi, lo;\n        var byteArray = [];\n        for (var i = 0; i < str.length; ++i) {\n          if ((units -= 2) < 0) break;\n          c = str.charCodeAt(i);\n          hi = c >> 8;\n          lo = c % 256;\n          byteArray.push(lo);\n          byteArray.push(hi);\n        }\n        return byteArray;\n      }\n      function base64ToBytes(str) {\n        return base64.toByteArray(base64clean(str));\n      }\n      function blitBuffer(src, dst, offset, length) {\n        for (var i = 0; i < length; ++i) {\n          if (i + offset >= dst.length || i >= src.length) break;\n          dst[i + offset] = src[i];\n        }\n        return i;\n      }\n\n      // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n      // the `instanceof` check but they should be treated as of that type.\n      // See: https://github.com/feross/buffer/issues/166\n      function isInstance(obj, type) {\n        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n      }\n      function numberIsNaN(obj) {\n        // For IE11 support\n        return obj !== obj; // eslint-disable-line no-self-compare\n      }\n    }).call(this, require(\"buffer\").Buffer);\n  }, {\n    \"base64-js\": 2,\n    \"buffer\": 3,\n    \"ieee754\": 4\n  }],\n  4: [function (require, module, exports) {\n    exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n      var e, m;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var nBits = -7;\n      var i = isLE ? nBytes - 1 : 0;\n      var d = isLE ? -1 : 1;\n      var s = buffer[offset + i];\n      i += d;\n      e = s & (1 << -nBits) - 1;\n      s >>= -nBits;\n      nBits += eLen;\n      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n      m = e & (1 << -nBits) - 1;\n      e >>= -nBits;\n      nBits += mLen;\n      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n      if (e === 0) {\n        e = 1 - eBias;\n      } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n      } else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n      }\n      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n    };\n    exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n      var e, m, c;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n      var i = isLE ? 0 : nBytes - 1;\n      var d = isLE ? 1 : -1;\n      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n      value = Math.abs(value);\n      if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n      } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n          e--;\n          c *= 2;\n        }\n        if (e + eBias >= 1) {\n          value += rt / c;\n        } else {\n          value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n          e++;\n          c /= 2;\n        }\n        if (e + eBias >= eMax) {\n          m = 0;\n          e = eMax;\n        } else if (e + eBias >= 1) {\n          m = (value * c - 1) * Math.pow(2, mLen);\n          e = e + eBias;\n        } else {\n          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n          e = 0;\n        }\n      }\n      for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n      e = e << mLen | m;\n      eLen += mLen;\n      for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n      buffer[offset + i - d] |= s * 128;\n    };\n  }, {}]\n}, {}, [1]);","map":{"version":3,"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Buffer","window","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","len","charCodeAt","getLens","b64","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","base64","ieee754","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","__proto__","prototype","foo","Object","defineProperty","enumerable","get","isBuffer","undefined","buffer","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","Symbol","species","value","configurable","writable","poolSize","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","fromArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","slice","array","obj","copy","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","subarray","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","hi","lo","src","dst","constructor","name","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","isNaN","floor","log","LN2"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/buffer-es/buffer.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nconst Buffer = require(\"buffer/\").Buffer;\nif (window) {\n  window.Buffer = Buffer;\n}\n\n},{\"buffer/\":3}],2:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],3:[function(require,module,exports){\n(function (Buffer){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n}).call(this,require(\"buffer\").Buffer)\n},{\"base64-js\":2,\"buffer\":3,\"ieee754\":4}],4:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}]},{},[1]);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}