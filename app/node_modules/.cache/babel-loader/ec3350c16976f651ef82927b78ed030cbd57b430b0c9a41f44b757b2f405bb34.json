{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { createDefaultAddressSelector, createDefaultAuthorizationResultCache, createDefaultWalletNotFoundHandler, SolanaMobileWalletAdapter, SolanaMobileWalletAdapterWalletName } from '@solana-mobile/wallet-adapter-mobile';\nimport { useStandardWalletAdapters } from '@solana/wallet-standard-wallet-adapter-react';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport getEnvironment, { Environment } from './getEnvironment.js';\nimport getInferredClusterFromEndpoint from './getInferredClusterFromEndpoint.js';\nimport { useConnection } from './useConnection.js';\nimport { useLocalStorage } from './useLocalStorage.js';\nimport { WalletProviderBase } from './WalletProviderBase.js';\nvar _userAgent;\nfunction getUserAgent() {\n  if (_userAgent === undefined) {\n    var _globalThis$navigator, _globalThis$navigator2;\n    _userAgent = (_globalThis$navigator = (_globalThis$navigator2 = globalThis.navigator) === null || _globalThis$navigator2 === void 0 ? void 0 : _globalThis$navigator2.userAgent) !== null && _globalThis$navigator !== void 0 ? _globalThis$navigator : null;\n  }\n  return _userAgent;\n}\nfunction getIsMobile(adapters) {\n  var userAgentString = getUserAgent();\n  return getEnvironment({\n    adapters: adapters,\n    userAgentString: userAgentString\n  }) === Environment.MOBILE_WEB;\n}\nfunction getUriForAppIdentity() {\n  var location = globalThis.location;\n  if (!location) return;\n  return \"\".concat(location.protocol, \"//\").concat(location.host);\n}\nexport function WalletProvider(_ref) {\n  var children = _ref.children,\n    adapters = _ref.wallets,\n    autoConnect = _ref.autoConnect,\n    _ref$localStorageKey = _ref.localStorageKey,\n    localStorageKey = _ref$localStorageKey === void 0 ? 'walletName' : _ref$localStorageKey,\n    onError = _ref.onError;\n  var _useConnection = useConnection(),\n    connection = _useConnection.connection;\n  var adaptersWithStandardAdapters = useStandardWalletAdapters(adapters);\n  var mobileWalletAdapter = useMemo(function () {\n    if (!getIsMobile(adaptersWithStandardAdapters)) {\n      return null;\n    }\n    var existingMobileWalletAdapter = adaptersWithStandardAdapters.find(function (adapter) {\n      return adapter.name === SolanaMobileWalletAdapterWalletName;\n    });\n    if (existingMobileWalletAdapter) {\n      return existingMobileWalletAdapter;\n    }\n    return new SolanaMobileWalletAdapter({\n      addressSelector: createDefaultAddressSelector(),\n      appIdentity: {\n        uri: getUriForAppIdentity()\n      },\n      authorizationResultCache: createDefaultAuthorizationResultCache(),\n      cluster: getInferredClusterFromEndpoint(connection === null || connection === void 0 ? void 0 : connection.rpcEndpoint),\n      onWalletNotFound: createDefaultWalletNotFoundHandler()\n    });\n  }, [adaptersWithStandardAdapters, connection === null || connection === void 0 ? void 0 : connection.rpcEndpoint]);\n  var adaptersWithMobileWalletAdapter = useMemo(function () {\n    if (mobileWalletAdapter == null || adaptersWithStandardAdapters.indexOf(mobileWalletAdapter) !== -1) {\n      return adaptersWithStandardAdapters;\n    }\n    return [mobileWalletAdapter].concat(_toConsumableArray(adaptersWithStandardAdapters));\n  }, [adaptersWithStandardAdapters, mobileWalletAdapter]);\n  var _useLocalStorage = useLocalStorage(localStorageKey, getIsMobile(adaptersWithStandardAdapters) ? SolanaMobileWalletAdapterWalletName : null),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    walletName = _useLocalStorage2[0],\n    setWalletName = _useLocalStorage2[1];\n  var adapter = useMemo(function () {\n    var _adaptersWithMobileWa;\n    return (_adaptersWithMobileWa = adaptersWithMobileWalletAdapter.find(function (a) {\n      return a.name === walletName;\n    })) !== null && _adaptersWithMobileWa !== void 0 ? _adaptersWithMobileWa : null;\n  }, [adaptersWithMobileWalletAdapter, walletName]);\n  var changeWallet = useCallback(function (nextWalletName) {\n    if (walletName === nextWalletName) return;\n    if (adapter &&\n    // Selecting a wallet other than the mobile wallet adapter is not\n    // sufficient reason to call `disconnect` on the mobile wallet adapter.\n    // Calling `disconnect` on the mobile wallet adapter causes the entire\n    // authorization store to be wiped.\n    adapter.name !== SolanaMobileWalletAdapterWalletName) {\n      adapter.disconnect();\n    }\n    setWalletName(nextWalletName);\n  }, [adapter, setWalletName, walletName]);\n  useEffect(function () {\n    if (!adapter) return;\n    function handleDisconnect() {\n      if (isUnloadingRef.current) return;\n      // Leave the adapter selected in the event of a disconnection.\n      if (walletName === SolanaMobileWalletAdapterWalletName && getIsMobile(adaptersWithStandardAdapters)) return;\n      setWalletName(null);\n    }\n    adapter.on('disconnect', handleDisconnect);\n    return function () {\n      adapter.off('disconnect', handleDisconnect);\n    };\n  }, [adapter, adaptersWithStandardAdapters, setWalletName, walletName]);\n  var hasUserSelectedAWallet = useRef(false);\n  var handleAutoConnectRequest = useMemo(function () {\n    if (!autoConnect || !adapter) return;\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = autoConnect === true;\n            if (_context.t0) {\n              _context.next = 5;\n              break;\n            }\n            _context.next = 4;\n            return autoConnect(adapter);\n          case 4:\n            _context.t0 = _context.sent;\n          case 5:\n            if (!_context.t0) {\n              _context.next = 13;\n              break;\n            }\n            if (!hasUserSelectedAWallet.current) {\n              _context.next = 11;\n              break;\n            }\n            _context.next = 9;\n            return adapter.connect();\n          case 9:\n            _context.next = 13;\n            break;\n          case 11:\n            _context.next = 13;\n            return adapter.autoConnect();\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n  }, [autoConnect, adapter]);\n  var isUnloadingRef = useRef(false);\n  useEffect(function () {\n    if (walletName === SolanaMobileWalletAdapterWalletName && getIsMobile(adaptersWithStandardAdapters)) {\n      isUnloadingRef.current = false;\n      return;\n    }\n    function handleBeforeUnload() {\n      isUnloadingRef.current = true;\n    }\n    /**\n     * Some wallets fire disconnection events when the window unloads. Since there's no way to\n     * distinguish between a disconnection event received because a user initiated it, and one\n     * that was received because they've closed the window, we have to track window unload\n     * events themselves. Downstream components use this information to decide whether to act\n     * upon or drop wallet events and errors.\n     */\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return function () {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [adaptersWithStandardAdapters, walletName]);\n  var handleConnectError = useCallback(function () {\n    if (adapter && adapter.name !== SolanaMobileWalletAdapterWalletName) {\n      // If any error happens while connecting, unset the adapter.\n      changeWallet(null);\n    }\n  }, [adapter, changeWallet]);\n  var selectWallet = useCallback(function (walletName) {\n    hasUserSelectedAWallet.current = true;\n    changeWallet(walletName);\n  }, [changeWallet]);\n  return React.createElement(WalletProviderBase, {\n    wallets: adaptersWithMobileWalletAdapter,\n    adapter: adapter,\n    isUnloadingRef: isUnloadingRef,\n    onAutoConnectRequest: handleAutoConnectRequest,\n    onConnectError: handleConnectError,\n    onError: onError,\n    onSelectWallet: selectWallet\n  }, children);\n}","map":{"version":3,"names":["createDefaultAddressSelector","createDefaultAuthorizationResultCache","createDefaultWalletNotFoundHandler","SolanaMobileWalletAdapter","SolanaMobileWalletAdapterWalletName","useStandardWalletAdapters","React","useCallback","useEffect","useMemo","useRef","getEnvironment","Environment","getInferredClusterFromEndpoint","useConnection","useLocalStorage","WalletProviderBase","_userAgent","getUserAgent","undefined","_globalThis$navigator","_globalThis$navigator2","globalThis","navigator","userAgent","getIsMobile","adapters","userAgentString","MOBILE_WEB","getUriForAppIdentity","location","concat","protocol","host","WalletProvider","_ref","children","wallets","autoConnect","_ref$localStorageKey","localStorageKey","onError","_useConnection","connection","adaptersWithStandardAdapters","mobileWalletAdapter","existingMobileWalletAdapter","find","adapter","name","addressSelector","appIdentity","uri","authorizationResultCache","cluster","rpcEndpoint","onWalletNotFound","adaptersWithMobileWalletAdapter","indexOf","_toConsumableArray","_useLocalStorage","_useLocalStorage2","_slicedToArray","walletName","setWalletName","_adaptersWithMobileWa","a","changeWallet","nextWalletName","disconnect","handleDisconnect","isUnloadingRef","current","on","off","hasUserSelectedAWallet","handleAutoConnectRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","t0","sent","connect","stop","handleBeforeUnload","window","addEventListener","removeEventListener","handleConnectError","selectWallet","createElement","onAutoConnectRequest","onConnectError","onSelectWallet"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@solana/wallet-adapter-react/src/WalletProvider.tsx"],"sourcesContent":["import {\n    createDefaultAddressSelector,\n    createDefaultAuthorizationResultCache,\n    createDefaultWalletNotFoundHandler,\n    SolanaMobileWalletAdapter,\n    SolanaMobileWalletAdapterWalletName,\n} from '@solana-mobile/wallet-adapter-mobile';\nimport { type Adapter, type WalletError, type WalletName } from '@solana/wallet-adapter-base';\nimport { useStandardWalletAdapters } from '@solana/wallet-standard-wallet-adapter-react';\nimport React, { type ReactNode, useCallback, useEffect, useMemo, useRef } from 'react';\nimport getEnvironment, { Environment } from './getEnvironment.js';\nimport getInferredClusterFromEndpoint from './getInferredClusterFromEndpoint.js';\nimport { useConnection } from './useConnection.js';\nimport { useLocalStorage } from './useLocalStorage.js';\nimport { WalletProviderBase } from './WalletProviderBase.js';\n\nexport interface WalletProviderProps {\n    children: ReactNode;\n    wallets: Adapter[];\n    autoConnect?: boolean | ((adapter: Adapter) => Promise<boolean>);\n    localStorageKey?: string;\n    onError?: (error: WalletError, adapter?: Adapter) => void;\n}\n\nlet _userAgent: string | null;\nfunction getUserAgent() {\n    if (_userAgent === undefined) {\n        _userAgent = globalThis.navigator?.userAgent ?? null;\n    }\n    return _userAgent;\n}\n\nfunction getIsMobile(adapters: Adapter[]) {\n    const userAgentString = getUserAgent();\n    return getEnvironment({ adapters, userAgentString }) === Environment.MOBILE_WEB;\n}\n\nfunction getUriForAppIdentity() {\n    const location = globalThis.location;\n    if (!location) return;\n    return `${location.protocol}//${location.host}`;\n}\n\nexport function WalletProvider({\n    children,\n    wallets: adapters,\n    autoConnect,\n    localStorageKey = 'walletName',\n    onError,\n}: WalletProviderProps) {\n    const { connection } = useConnection();\n    const adaptersWithStandardAdapters = useStandardWalletAdapters(adapters);\n    const mobileWalletAdapter = useMemo(() => {\n        if (!getIsMobile(adaptersWithStandardAdapters)) {\n            return null;\n        }\n        const existingMobileWalletAdapter = adaptersWithStandardAdapters.find(\n            (adapter) => adapter.name === SolanaMobileWalletAdapterWalletName\n        );\n        if (existingMobileWalletAdapter) {\n            return existingMobileWalletAdapter;\n        }\n        return new SolanaMobileWalletAdapter({\n            addressSelector: createDefaultAddressSelector(),\n            appIdentity: {\n                uri: getUriForAppIdentity(),\n            },\n            authorizationResultCache: createDefaultAuthorizationResultCache(),\n            cluster: getInferredClusterFromEndpoint(connection?.rpcEndpoint),\n            onWalletNotFound: createDefaultWalletNotFoundHandler(),\n        });\n    }, [adaptersWithStandardAdapters, connection?.rpcEndpoint]);\n    const adaptersWithMobileWalletAdapter = useMemo(() => {\n        if (mobileWalletAdapter == null || adaptersWithStandardAdapters.indexOf(mobileWalletAdapter) !== -1) {\n            return adaptersWithStandardAdapters;\n        }\n        return [mobileWalletAdapter, ...adaptersWithStandardAdapters];\n    }, [adaptersWithStandardAdapters, mobileWalletAdapter]);\n    const [walletName, setWalletName] = useLocalStorage<WalletName | null>(\n        localStorageKey,\n        getIsMobile(adaptersWithStandardAdapters) ? SolanaMobileWalletAdapterWalletName : null\n    );\n    const adapter = useMemo(\n        () => adaptersWithMobileWalletAdapter.find((a) => a.name === walletName) ?? null,\n        [adaptersWithMobileWalletAdapter, walletName]\n    );\n    const changeWallet = useCallback(\n        (nextWalletName: WalletName<string> | null) => {\n            if (walletName === nextWalletName) return;\n            if (\n                adapter &&\n                // Selecting a wallet other than the mobile wallet adapter is not\n                // sufficient reason to call `disconnect` on the mobile wallet adapter.\n                // Calling `disconnect` on the mobile wallet adapter causes the entire\n                // authorization store to be wiped.\n                adapter.name !== SolanaMobileWalletAdapterWalletName\n            ) {\n                adapter.disconnect();\n            }\n            setWalletName(nextWalletName);\n        },\n        [adapter, setWalletName, walletName]\n    );\n    useEffect(() => {\n        if (!adapter) return;\n        function handleDisconnect() {\n            if (isUnloadingRef.current) return;\n            // Leave the adapter selected in the event of a disconnection.\n            if (walletName === SolanaMobileWalletAdapterWalletName && getIsMobile(adaptersWithStandardAdapters)) return;\n            setWalletName(null);\n        }\n        adapter.on('disconnect', handleDisconnect);\n        return () => {\n            adapter.off('disconnect', handleDisconnect);\n        };\n    }, [adapter, adaptersWithStandardAdapters, setWalletName, walletName]);\n    const hasUserSelectedAWallet = useRef(false);\n    const handleAutoConnectRequest = useMemo(() => {\n        if (!autoConnect || !adapter) return;\n        return async () => {\n            // If autoConnect is true or returns true, use the default autoConnect behavior.\n            if (autoConnect === true || (await autoConnect(adapter))) {\n                if (hasUserSelectedAWallet.current) {\n                    await adapter.connect();\n                } else {\n                    await adapter.autoConnect();\n                }\n            }\n        };\n    }, [autoConnect, adapter]);\n    const isUnloadingRef = useRef(false);\n    useEffect(() => {\n        if (walletName === SolanaMobileWalletAdapterWalletName && getIsMobile(adaptersWithStandardAdapters)) {\n            isUnloadingRef.current = false;\n            return;\n        }\n        function handleBeforeUnload() {\n            isUnloadingRef.current = true;\n        }\n        /**\n         * Some wallets fire disconnection events when the window unloads. Since there's no way to\n         * distinguish between a disconnection event received because a user initiated it, and one\n         * that was received because they've closed the window, we have to track window unload\n         * events themselves. Downstream components use this information to decide whether to act\n         * upon or drop wallet events and errors.\n         */\n        window.addEventListener('beforeunload', handleBeforeUnload);\n        return () => {\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        };\n    }, [adaptersWithStandardAdapters, walletName]);\n    const handleConnectError = useCallback(() => {\n        if (adapter && adapter.name !== SolanaMobileWalletAdapterWalletName) {\n            // If any error happens while connecting, unset the adapter.\n            changeWallet(null);\n        }\n    }, [adapter, changeWallet]);\n    const selectWallet = useCallback(\n        (walletName: WalletName | null) => {\n            hasUserSelectedAWallet.current = true;\n            changeWallet(walletName);\n        },\n        [changeWallet]\n    );\n    return (\n        <WalletProviderBase\n            wallets={adaptersWithMobileWalletAdapter}\n            adapter={adapter}\n            isUnloadingRef={isUnloadingRef}\n            onAutoConnectRequest={handleAutoConnectRequest}\n            onConnectError={handleConnectError}\n            onError={onError}\n            onSelectWallet={selectWallet}\n        >\n            {children}\n        </WalletProviderBase>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}