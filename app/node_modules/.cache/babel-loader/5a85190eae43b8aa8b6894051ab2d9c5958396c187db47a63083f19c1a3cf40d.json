{"ast":null,"code":"var _jsxFileName = \"/Users/wuhuan/gif-portal-starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport RankContainer from './components/RankContainer';\nimport idl from './idl.json';\nimport { RankProvider } from './context/Rank';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\nconst App = () => {\n  _s();\n  const endpoint = \"http://127.0.0.1:8899\";\n  const wallets = useMemo(() => [new PhantomWalletAdapter()], []);\n  const [walletAddress, setWalletAddress] = useState(null);\n  const checkIfWalletIsConnected = async () => {\n    var _window, _window$solana;\n    // We're using optional chaining (question mark) to check if the object is null\n    if ((_window = window) !== null && _window !== void 0 && (_window$solana = _window.solana) !== null && _window$solana !== void 0 && _window$solana.isPhantom) {\n      console.log('Phantom wallet found!');\n      const response = await window.solana.connect({\n        onlyIfTrusted: true\n      });\n      console.log('Connected with Public Key:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    } else {\n      alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\n    }\n  };\n  const connectWallet = async () => {\n    const {\n      solana\n    } = window;\n    if (solana) {\n      const response = await solana.connect();\n      console.log('Connected with Public Key:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"cta-button connect-wallet-button\",\n    onClick: connectWallet,\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n\n  const topUsers = [{\n    rank: 1,\n    name: \"ds\",\n    score: 420\n  }, {\n    rank: 2,\n    name: \"22\",\n    score: 234\n  }, {\n    rank: 3,\n    name: \"33\",\n    score: 123\n  }, {\n    rank: 4,\n    name: \"44\",\n    score: 234\n  }, {\n    rank: 5,\n    name: \"55\",\n    score: 123\n  }, {\n    rank: 6,\n    name: \"66\",\n    score: 234\n  }, {\n    rank: 7,\n    name: \"77\",\n    score: 123\n  }, {\n    rank: 8,\n    name: \"88\",\n    score: 234\n  }, {\n    rank: 9,\n    name: \"99\",\n    score: 123\n  }, {\n    rank: 10,\n    name: \"100\",\n    score: 234\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header\",\n          children: \"Top Users \\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), !walletAddress && renderNotConnectedContainer(), /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n          children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n            children: /*#__PURE__*/_jsxDEV(RankProvider, {\n              children: /*#__PURE__*/_jsxDEV(RankContainer, {\n                topUsers: topUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zWBedqREG1VLFYGvsMrmAcMksDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","RankContainer","idl","RankProvider","ConnectionProvider","WalletProvider","jsxDEV","_jsxDEV","TWITTER_HANDLE","TWITTER_LINK","PROGRAM_KEY","PublicKey","metadata","address","App","_s","endpoint","wallets","useMemo","PhantomWalletAdapter","walletAddress","setWalletAddress","checkIfWalletIsConnected","_window","_window$solana","window","solana","isPhantom","console","log","response","connect","onlyIfTrusted","publicKey","toString","alert","connectWallet","renderNotConnectedContainer","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","addEventListener","removeEventListener","topUsers","rank","name","score","alt","src","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/wuhuan/gif-portal-starter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport RankContainer from './components/RankContainer';\nimport idl from './idl.json';\nimport { RankProvider } from './context/Rank';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\n\nconst App = () => {\n  const endpoint = \"http://127.0.0.1:8899\"\n  const wallets = useMemo(\n    () => [\n      new PhantomWalletAdapter()\n    ],\n    []\n\n  )\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const checkIfWalletIsConnected = async () => {\n    // We're using optional chaining (question mark) to check if the object is null\n      if (window?.solana?.isPhantom) {\n        console.log('Phantom wallet found!');\n        const response = await window.solana.connect({ onlyIfTrusted: true })\n        console.log(\n          'Connected with Public Key:',\n          response.publicKey.toString()\n        );\n        setWalletAddress(response.publicKey.toString());\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\n      }\n    };\n    \n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log('Connected with Public Key:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n\n    const topUsers = [\n    {rank: 1, name: \"ds\", score: 420},\n    {rank: 2, name: \"22\", score: 234},\n    {rank: 3, name: \"33\", score: 123},\n    {rank: 4, name: \"44\", score: 234},\n    {rank: 5, name: \"55\", score: 123},\n    {rank: 6, name: \"66\", score: 234},\n    {rank: 7, name: \"77\", score: 123},\n    {rank: 8, name: \"88\", score: 234},\n    {rank: 9, name: \"99\", score: 123},\n    {rank: 10, name: \"100\", score: 234},\n  ]\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header\">\n            Top Users âœ¨\n          </p>\n\n\n          {!walletAddress && renderNotConnectedContainer()}\n          <ConnectionProvider>\n            <WalletProvider>\n            <RankProvider>\n            <RankContainer topUsers={topUsers}></RankContainer>\n          </RankProvider>\n            </WalletProvider>\n          </ConnectionProvider>\n\n        </div>\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,8BAA8B;;AAEjF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG,aAAa;AACpC,MAAMC,YAAY,GAAI,uBAAsBD,cAAe,EAAC;AAE5D,MAAME,WAAW,GAAG,IAAIC,SAAS,CAACT,GAAG,CAACU,QAAQ,CAACC,OAAO,CAAC;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAG,uBAAuB;EACxC,MAAMC,OAAO,GAAGC,OAAO,CACrB,MAAM,CACJ,IAAIC,oBAAoB,CAAC,CAAC,CAC3B,EACD,EAEF,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMuB,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,OAAA,EAAAC,cAAA;IAC3C;IACE,KAAAD,OAAA,GAAIE,MAAM,cAAAF,OAAA,gBAAAC,cAAA,GAAND,OAAA,CAAQG,MAAM,cAAAF,cAAA,eAAdA,cAAA,CAAgBG,SAAS,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,MAAMC,QAAQ,GAAG,MAAML,MAAM,CAACC,MAAM,CAACK,OAAO,CAAC;QAAEC,aAAa,EAAE;MAAK,CAAC,CAAC;MACrEJ,OAAO,CAACC,GAAG,CACT,4BAA4B,EAC5BC,QAAQ,CAACG,SAAS,CAACC,QAAQ,CAAC,CAC9B,CAAC;MACDb,gBAAgB,CAACS,QAAQ,CAACG,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC;IACjD,CAAC,MAAM;MACLC,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAEH,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAM;MAAEV;IAAO,CAAC,GAAGD,MAAM;IAEzB,IAAIC,MAAM,EAAE;MACV,MAAMI,QAAQ,GAAG,MAAMJ,MAAM,CAACK,OAAO,CAAC,CAAC;MACvCH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,QAAQ,CAACG,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC;MACxEb,gBAAgB,CAACS,QAAQ,CAACG,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMG,2BAA2B,GAAGA,CAAA,kBAClC9B,OAAA;IACE+B,SAAS,EAAC,kCAAkC;IAC5CC,OAAO,EAAEH,aAAc;IAAAI,QAAA,EACxB;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;EAED9C,SAAS,CAAC,MAAM;IACd,MAAM+C,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMvB,wBAAwB,CAAC,CAAC;IAClC,CAAC;IACDG,MAAM,CAACqB,gBAAgB,CAAC,MAAM,EAAED,MAAM,CAAC;IACvC,OAAO,MAAMpB,MAAM,CAACsB,mBAAmB,CAAC,MAAM,EAAEF,MAAM,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EACN;AACF;AACA;AACA;;EAEI,MAAMG,QAAQ,GAAG,CACjB;IAACC,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,CAAC;IAAEC,IAAI,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjC;IAACF,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAG,CAAC,CACpC;EACD,oBACE5C,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAE,QAAA,eAClBjC,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBjC,OAAA;QAAK+B,SAAS,EAAC,kBAAkB;QAAAE,QAAA,gBAC/BjC,OAAA;UAAG+B,SAAS,EAAC,QAAQ;UAAAE,QAAA,EAAC;QAEtB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAGH,CAACxB,aAAa,IAAIiB,2BAA2B,CAAC,CAAC,eAChD9B,OAAA,CAACH,kBAAkB;UAAAoC,QAAA,eACjBjC,OAAA,CAACF,cAAc;YAAAmC,QAAA,eACfjC,OAAA,CAACJ,YAAY;cAAAqC,QAAA,eACbjC,OAAA,CAACN,aAAa;gBAAC+C,QAAQ,EAAEA;cAAS;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CAAC,eAENrC,OAAA;QAAK+B,SAAS,EAAC,kBAAkB;QAAAE,QAAA,gBAC/BjC,OAAA;UAAK6C,GAAG,EAAC,cAAc;UAACd,SAAS,EAAC,cAAc;UAACe,GAAG,EAAErD;QAAY;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrErC,OAAA;UACE+B,SAAS,EAAC,aAAa;UACvBgB,IAAI,EAAE7C,YAAa;UACnB8C,MAAM,EAAC,QAAQ;UACfC,GAAG,EAAC,YAAY;UAAAhB,QAAA,EACf,aAAYhC,cAAe;QAAC;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CArGID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAuGT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}