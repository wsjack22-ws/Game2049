{"ast":null,"code":"var _jsxFileName = \"/Users/wuhuan/gif-portal-starter/src/context/Lottery.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Program } from \"@project-serum/anchor\";\nimport { useAnchorWallet, useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport idl from \"../idl.json\";\nimport { utf8 } from '@project-serum/anchor/dist/cjs/utils/bytes';\nimport { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { PublicKey } from \"@solana/web3.js\";\nimport { AnchorProvider } from \"@project-serum/anchor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\nconst LotteryContext = /*#__PURE__*/createContext();\nfunction getProgram(provider) {\n  console.log(\"provider:\", provider);\n  return new Program(idl, PROGRAM_KEY, provider);\n}\nexport const useLottery = () => {\n  _s();\n  const context = useContext(LotteryContext);\n  if (!context) {\n    throw new Error(\"Missing Lottery context\");\n  }\n  return context;\n};\n_s(useLottery, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LotteryProvider = ({\n  children\n}) => {\n  _s2();\n  //const [topUsers, setTopUsers] = useState([]);\n  const [provider, setProvider] = useState();\n  const wallet = useWallet();\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  const [score, setScore] = useState();\n  const [user, setUser] = useState();\n  const [lottery, setLottery] = useState();\n  const anchorWallet = useAnchorWallet();\n  const program = useMemo(() => {\n    if (anchorWallet) {\n      const provider = new AnchorProvider(connection, anchorWallet, {});\n      return new anchor.Program(idl, PROGRAM_KEY, provider);\n    }\n  }, [anchorWallet, connection]);\n  useEffect(() => {\n    if (wallet) {\n      const provider = new AnchorProvider(connection, wallet, {});\n      setProvider(provider);\n    }\n  }, [connection, wallet]);\n  useEffect(() => {\n    const start = async () => {\n      if (program && publicKey) {\n        try {\n          const [userPda] = await findProgramAddressSync([utf8.encode('master')], program.programId);\n          console.log(\"data:\", userPda.toString());\n          const userData = await program.account.boardAccount.fetch(userPda);\n          if (userData) {\n            console.log('User data:', userData);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    start();\n  }, [program, publicKey]);\n  useEffect(() => {\n    initMaster();\n    // console.log(\"Master account initialized\")\n  }, [program, publicKey]);\n  function createLottery(program, wallet) {\n    console.log(\"Creating lottery\");\n    program.rpc.createLottery({\n      accounts: {\n        authority: wallet.publicKey\n      },\n      signers: [wallet.publicKey]\n    });\n  }\n  const initMaster = async () => {\n    if (program && publicKey) {\n      try {\n        const [userPda] = findProgramAddressSync([utf8.encode('master')], program.programId);\n        console.log(\"data:\", userPda.toString());\n        await program.methods.initMaster().accounts({\n          master: userPda,\n          payer: publicKey\n        }).rpc();\n        console.log(\"Master account initialized\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const buyTicket = async () => {\n    if (program && publicKey) {\n      try {\n        const [userPda] = findProgramAddressSync([utf8.encode('master')], program.programId);\n        await program.methods.buyTicket().accounts({\n          master: userPda,\n          payer: publicKey\n        }).rpc();\n        console.log(\"Ticket bought\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LotteryContext.Provider, {\n    value: score,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }, this);\n};\n_s2(LotteryProvider, \"CenCm/neuRu6s37E+73ZzJzFvgc=\", false, function () {\n  return [useWallet, useConnection, useWallet, useAnchorWallet];\n});\n_c = LotteryProvider;\nvar _c;\n$RefreshReg$(_c, \"LotteryProvider\");","map":{"version":3,"names":["useEffect","Program","useAnchorWallet","useConnection","useWallet","createContext","useContext","useMemo","useState","idl","utf8","findProgramAddressSync","PublicKey","AnchorProvider","jsxDEV","_jsxDEV","PROGRAM_KEY","metadata","address","LotteryContext","getProgram","provider","console","log","useLottery","_s","context","Error","LotteryProvider","children","_s2","setProvider","wallet","connection","publicKey","score","setScore","user","setUser","lottery","setLottery","anchorWallet","program","anchor","start","userPda","encode","programId","toString","userData","account","boardAccount","fetch","error","initMaster","createLottery","rpc","accounts","authority","signers","methods","master","payer","buyTicket","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wuhuan/gif-portal-starter/src/context/Lottery.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Program } from \"@project-serum/anchor\";\nimport {\n  useAnchorWallet,\n  useConnection,\n  useWallet\n} from \"@solana/wallet-adapter-react\";\n\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport idl from \"../idl.json\";\nimport { utf8 } from '@project-serum/anchor/dist/cjs/utils/bytes'\nimport { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey'\nimport { PublicKey } from \"@solana/web3.js\";\nimport { AnchorProvider } from \"@project-serum/anchor\";\n\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\n\nconst LotteryContext = createContext();\n\nfunction getProgram(provider) {\n    console.log(\"provider:\", provider)\n    return new Program(idl, PROGRAM_KEY, provider);\n  }\n\n\n\nexport const useLottery = () => {\n    const context = useContext(LotteryContext);\n    if (!context) {\n        throw new Error(\"Missing Lottery context\");\n    }\n    return context;\n}\n\nexport const LotteryProvider = ({ children }) => {\n    //const [topUsers, setTopUsers] = useState([]);\n    const [provider, setProvider] = useState();\n    const wallet = useWallet();\n\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n    const [ score, setScore ] = useState();\n    const [ user, setUser ] = useState();\n    const [ lottery, setLottery ] = useState();\n    const anchorWallet = useAnchorWallet();\n\n    const program = useMemo(() => {\n        if (anchorWallet) {\n            const provider = new AnchorProvider(connection, anchorWallet, {});\n            return new anchor.Program(idl, PROGRAM_KEY, provider)\n        }\n    }, [anchorWallet, connection]);\n\n    useEffect(() => {\n      if (wallet) {\n        const provider = new AnchorProvider(connection, wallet, {});\n        setProvider(provider);\n      }\n    }, [connection, wallet]);\n    \n    useEffect(() => {\n\n        const start = async () => {\n          if (program && publicKey) {\n            try {\n              const [userPda] = await findProgramAddressSync([utf8.encode('master')], program.programId)\n              console.log(\"data:\", userPda.toString())\n              const userData = await program.account.boardAccount.fetch(userPda)\n              if (userData) {\n                console.log('User data:', userData)\n              }\n            } catch (error) {\n              console.log(error)\n            }\n          }\n        }\n    \n        start()\n    \n      }, [program, publicKey]);\n      \n\n    useEffect(() => {\n      initMaster()\n      // console.log(\"Master account initialized\")\n    }, [program, publicKey]);\n\n    function createLottery(program, wallet) {\n        console.log(\"Creating lottery\")\n        program.rpc.createLottery({\n            accounts: {\n                authority: wallet.publicKey,\n            },\n            signers: [wallet.publicKey],\n        });\n    }\n    \n    const initMaster = async () => {\n      if (program && publicKey) {\n        try {\n          const [userPda] = findProgramAddressSync([utf8.encode('master')], program.programId)\n            console.log(\"data:\", userPda.toString())\n          await program.methods\n            .initMaster()\n            .accounts({\n              master: userPda,\n              payer: publicKey,\n            })\n            .rpc()\n            console.log(\"Master account initialized\")\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    }\n\n    const buyTicket = async () => {\n        if (program && publicKey) {\n            try {\n            const [userPda] = findProgramAddressSync([utf8.encode('master')], program.programId)\n    \n            await program.methods\n                .buyTicket()\n                .accounts({\n                master: userPda,\n                payer: publicKey,\n                })\n                .rpc()\n                console.log(\"Ticket bought\")\n            } catch (error) {\n            console.log(error)\n            }\n        }\n        }\n    return (\n      <LotteryContext.Provider value={score}>{children}</LotteryContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}