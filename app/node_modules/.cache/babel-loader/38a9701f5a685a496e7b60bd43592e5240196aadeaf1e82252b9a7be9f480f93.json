{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar context_js_1 = require(\"../context.js\");\nvar TransactionFactory = /*#__PURE__*/function () {\n  function TransactionFactory() {\n    _classCallCheck(this, TransactionFactory);\n  }\n  _createClass(TransactionFactory, null, [{\n    key: \"build\",\n    value: function build(idlIx, ixFn) {\n      var txFn = function txFn() {\n        var _a, _b, _c;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var _ref = (0, context_js_1.splitArgsAndCtx)(idlIx, [].concat(args)),\n          _ref2 = _slicedToArray(_ref, 2),\n          ctx = _ref2[1];\n        var tx = new web3_js_1.Transaction();\n        if (ctx.preInstructions && ctx.instructions) {\n          throw new Error(\"instructions is deprecated, use preInstructions\");\n        }\n        (_a = ctx.preInstructions) === null || _a === void 0 ? void 0 : _a.forEach(function (ix) {\n          return tx.add(ix);\n        });\n        (_b = ctx.instructions) === null || _b === void 0 ? void 0 : _b.forEach(function (ix) {\n          return tx.add(ix);\n        });\n        tx.add(ixFn.apply(void 0, args));\n        (_c = ctx.postInstructions) === null || _c === void 0 ? void 0 : _c.forEach(function (ix) {\n          return tx.add(ix);\n        });\n        return tx;\n      };\n      return txFn;\n    }\n  }]);\n  return TransactionFactory;\n}();\nexports.default = TransactionFactory;","map":{"version":3,"names":["web3_js_1","require","context_js_1","TransactionFactory","_classCallCheck","_createClass","key","value","build","idlIx","ixFn","txFn","args","Array","_len","_key","arguments","_ref","splitArgsAndCtx","concat","_ref2","_slicedToArray","ctx","tx","Transaction","preInstructions","instructions","Error","_a","forEach","ix","add","_b","apply","_c","postInstructions","exports","default"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/program/namespace/transaction.ts"],"sourcesContent":["import { Transaction } from \"@solana/web3.js\";\nimport { Idl, IdlInstruction } from \"../../idl.js\";\nimport { splitArgsAndCtx } from \"../context.js\";\nimport { InstructionFn } from \"./instruction.js\";\nimport {\n  AllInstructions,\n  InstructionContextFn,\n  MakeInstructionsNamespace,\n} from \"./types.js\";\n\nexport default class TransactionFactory {\n  public static build<IDL extends Idl, I extends AllInstructions<IDL>>(\n    idlIx: I,\n    ixFn: InstructionFn<IDL, I>\n  ): TransactionFn<IDL, I> {\n    const txFn: TransactionFn<IDL, I> = (...args): Transaction => {\n      const [, ctx] = splitArgsAndCtx(idlIx, [...args]);\n      const tx = new Transaction();\n      if (ctx.preInstructions && ctx.instructions) {\n        throw new Error(\"instructions is deprecated, use preInstructions\");\n      }\n      ctx.preInstructions?.forEach((ix) => tx.add(ix));\n      ctx.instructions?.forEach((ix) => tx.add(ix));\n      tx.add(ixFn(...args));\n      ctx.postInstructions?.forEach((ix) => tx.add(ix));\n      return tx;\n    };\n\n    return txFn;\n  }\n}\n\n/**\n * The namespace provides functions to build [[Transaction]] objects for each\n * method of a program.\n *\n * ## Usage\n *\n * ```javascript\n * program.transaction.<method>(...args, ctx);\n * ```\n *\n * ## Parameters\n *\n * 1. `args` - The positional arguments for the program. The type and number\n *    of these arguments depend on the program being used.\n * 2. `ctx`  - [[Context]] non-argument parameters to pass to the method.\n *    Always the last parameter in the method call.\n *\n * ## Example\n *\n * To create an instruction for the `increment` method above,\n *\n * ```javascript\n * const tx = await program.transaction.increment({\n *   accounts: {\n *     counter,\n *   },\n * });\n * ```\n */\nexport type TransactionNamespace<\n  IDL extends Idl = Idl,\n  I extends AllInstructions<IDL> = AllInstructions<IDL>\n> = MakeInstructionsNamespace<IDL, I, Transaction>;\n\n/**\n * Tx is a function to create a `Transaction` for a given program instruction.\n */\nexport type TransactionFn<\n  IDL extends Idl = Idl,\n  I extends AllInstructions<IDL> = AllInstructions<IDL>\n> = InstructionContextFn<IDL, I, Transaction>;\n"],"mappings":";;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAD,OAAA;AAAgD,IAQ3BE,kBAAkB;EAAA,SAAAA,mBAAA;IAAAC,eAAA,OAAAD,kBAAA;EAAA;EAAAE,YAAA,CAAAF,kBAAA;IAAAG,GAAA;IAAAC,KAAA,EAC9B,SAAAC,MACLC,KAAQ,EACRC,IAA2B;MAE3B,IAAMC,IAAI,GAA0B,SAA9BA,IAAIA,CAAA,EAAmD;;0CAArBC,IAAI,OAAAC,KAAA,CAAAC,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;UAAJH,IAAI,CAAAG,IAAA,IAAAC,SAAA,CAAAD,IAAA;QAAA;QAC1C,IAAAE,IAAA,GAAgB,IAAAf,YAAA,CAAAgB,eAAe,EAACT,KAAK,KAAAU,MAAA,CAAMP,IAAI,CAAC,CAAC;UAAAQ,KAAA,GAAAC,cAAA,CAAAJ,IAAA;UAAxCK,GAAG,GAAAF,KAAA;QACZ,IAAMG,EAAE,GAAG,IAAIvB,SAAA,CAAAwB,WAAW,EAAE;QAC5B,IAAIF,GAAG,CAACG,eAAe,IAAIH,GAAG,CAACI,YAAY,EAAE;UAC3C,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;;QAEpE,CAAAC,EAAA,GAAAN,GAAG,CAACG,eAAe,cAAAG,EAAA,uBAAAA,EAAA,CAAEC,OAAO,CAAC,UAACC,EAAE;UAAA,OAAKP,EAAE,CAACQ,GAAG,CAACD,EAAE,CAAC;QAAA,EAAC;QAChD,CAAAE,EAAA,GAAAV,GAAG,CAACI,YAAY,cAAAM,EAAA,uBAAAA,EAAA,CAAEH,OAAO,CAAC,UAACC,EAAE;UAAA,OAAKP,EAAE,CAACQ,GAAG,CAACD,EAAE,CAAC;QAAA,EAAC;QAC7CP,EAAE,CAACQ,GAAG,CAACrB,IAAI,CAAAuB,KAAA,SAAIrB,IAAI,CAAC,CAAC;QACrB,CAAAsB,EAAA,GAAAZ,GAAG,CAACa,gBAAgB,cAAAD,EAAA,uBAAAA,EAAA,CAAEL,OAAO,CAAC,UAACC,EAAE;UAAA,OAAKP,EAAE,CAACQ,GAAG,CAACD,EAAE,CAAC;QAAA,EAAC;QACjD,OAAOP,EAAE;MACX,CAAC;MAED,OAAOZ,IAAI;IACb;EAAC;EAAA,OAAAR,kBAAA;AAAA;AAnBHiC,OAAA,CAAAC,OAAA,GAAAlC,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}