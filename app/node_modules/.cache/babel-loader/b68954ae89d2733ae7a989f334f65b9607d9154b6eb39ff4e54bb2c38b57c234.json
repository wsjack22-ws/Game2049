{"ast":null,"code":"import _regeneratorRuntime from\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import twitterLogo from'./assets/twitter-logo.svg';import'./App.css';// Constants\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TWITTER_HANDLE='_buildspace';var TWITTER_LINK=\"https://twitter.com/\".concat(TWITTER_HANDLE);var App=function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),walletAddress=_useState2[0],setWalletAddress=_useState2[1];var checkIfWalletIsConnected=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _window,_window$solana;var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!((_window=window)!==null&&_window!==void 0&&(_window$solana=_window.solana)!==null&&_window$solana!==void 0&&_window$solana.isPhantom)){_context.next=9;break;}console.log('Phantom wallet found!');_context.next=4;return window.solana.connect({onlyIfTrusted:true});case 4:response=_context.sent;console.log('Connected with Public Key:',response.publicKey.toString());setWalletAddress(response.publicKey.toString());_context.next=10;break;case 9:alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');case 10:case\"end\":return _context.stop();}},_callee);}));return function checkIfWalletIsConnected(){return _ref.apply(this,arguments);};}();useEffect(function(){var onLoad=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return checkIfWalletIsConnected();case 2:case\"end\":return _context2.stop();}},_callee2);}));return function onLoad(){return _ref2.apply(this,arguments);};}();window.addEventListener('load',onLoad);return function(){return window.removeEventListener('load',onLoad);};},[]);var connectWallet=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var _window2,solana,response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_window2=window,solana=_window2.solana;if(!solana){_context3.next=7;break;}_context3.next=4;return solana.connect();case 4:response=_context3.sent;console.log('Connected with Public Key:',response.publicKey.toString());setWalletAddress(response.publicKey.toString());case 7:case\"end\":return _context3.stop();}},_callee3);}));return function connectWallet(){return _ref3.apply(this,arguments);};}();/*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */var renderNotConnectedContainer=function renderNotConnectedContainer(){return/*#__PURE__*/_jsx(\"button\",{className:\"cta-button connect-wallet-button\",onClick:connectWallet,children:\"Connect to Wallet\"});};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"header\",children:\"\\uD83D\\uDDBC GIF Portal\"}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-text\",children:\"View your GIF collection in the metaverse \\u2728\"}),!walletAddress&&renderNotConnectedContainer()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer-container\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"Twitter Logo\",className:\"twitter-logo\",src:twitterLogo}),/*#__PURE__*/_jsx(\"a\",{className:\"footer-text\",href:TWITTER_LINK,target:\"_blank\",rel:\"noreferrer\",children:\"built on @\".concat(TWITTER_HANDLE)})]})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","twitterLogo","jsx","_jsx","jsxs","_jsxs","TWITTER_HANDLE","TWITTER_LINK","concat","App","_useState","_useState2","_slicedToArray","walletAddress","setWalletAddress","checkIfWalletIsConnected","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_window","_window$solana","response","wrap","_callee$","_context","prev","next","window","solana","isPhantom","console","log","connect","onlyIfTrusted","sent","publicKey","toString","alert","stop","apply","arguments","onLoad","_ref2","_callee2","_callee2$","_context2","addEventListener","removeEventListener","connectWallet","_ref3","_callee3","_window2","_callee3$","_context3","renderNotConnectedContainer","className","onClick","children","alt","src","href","target","rel"],"sources":["/Users/wuhuan/gif-portal-starter/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\n\n// Constants\nconst TWITTER_HANDLE = '_buildspace';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const checkIfWalletIsConnected = async () => {\n    // We're using optional chaining (question mark) to check if the object is null\n      if (window?.solana?.isPhantom) {\n        console.log('Phantom wallet found!');\n        const response = await window.solana.connect({ onlyIfTrusted: true })\n        console.log(\n          'Connected with Public Key:',\n          response.publicKey.toString()\n        );\n        setWalletAddress(response.publicKey.toString());\n      } else {\n        alert('Solana object not found! Get a Phantom Wallet ðŸ‘»');\n      }\n    };\n    useEffect(() => {\n      const onLoad = async () => {\n        await checkIfWalletIsConnected();\n      };\n      window.addEventListener('load', onLoad);\n      return () => window.removeEventListener('load', onLoad);\n    }, []);\n    \n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log('Connected with Public Key:', response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  /*\n   * We want to render this UI when the user hasn't connected\n   * their wallet to our app yet.\n   */\n  const renderNotConnectedContainer = () => (\n    <button\n      className=\"cta-button connect-wallet-button\"\n      onClick={connectWallet}\n    >\n      Connect to Wallet\n    </button>\n  );\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <p className=\"header\">ðŸ–¼ GIF Portal</p>\n          <p className=\"sub-text\">\n            View your GIF collection in the metaverse âœ¨\n          </p>\n          {!walletAddress && renderNotConnectedContainer()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built on @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}