{"ast":null,"code":"import { InstructionCoder } from \"./instruction\";\nimport { AccountsCoder } from \"./accounts\";\nimport { EventCoder } from \"./event\";\nimport { StateCoder } from \"./state\";\nimport { sighash } from \"./common\";\nexport { accountSize } from \"./common\";\nexport { InstructionCoder } from \"./instruction\";\nexport { AccountsCoder, ACCOUNT_DISCRIMINATOR_SIZE } from \"./accounts\";\nexport { EventCoder, eventDiscriminator } from \"./event\";\nexport { StateCoder, stateDiscriminator } from \"./state\";\n/**\n * Coder provides a facade for encoding and decoding all IDL related objects.\n */\nexport default class Coder {\n  constructor(idl) {\n    this.instruction = new InstructionCoder(idl);\n    this.accounts = new AccountsCoder(idl);\n    this.events = new EventCoder(idl);\n    if (idl.state) {\n      this.state = new StateCoder(idl);\n    }\n  }\n  sighash(nameSpace, ixName) {\n    return sighash(nameSpace, ixName);\n  }\n}","map":{"version":3,"names":["InstructionCoder","AccountsCoder","EventCoder","StateCoder","sighash","accountSize","ACCOUNT_DISCRIMINATOR_SIZE","eventDiscriminator","stateDiscriminator","Coder","constructor","idl","instruction","accounts","events","state","nameSpace","ixName"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/coder/index.ts"],"sourcesContent":["import { Idl } from \"../idl\";\nimport { InstructionCoder } from \"./instruction\";\nimport { AccountsCoder } from \"./accounts\";\nimport { EventCoder } from \"./event\";\nimport { StateCoder } from \"./state\";\nimport { sighash } from \"./common\";\n\nexport { accountSize } from \"./common\";\nexport { InstructionCoder } from \"./instruction\";\nexport { AccountsCoder, ACCOUNT_DISCRIMINATOR_SIZE } from \"./accounts\";\nexport { EventCoder, eventDiscriminator } from \"./event\";\nexport { StateCoder, stateDiscriminator } from \"./state\";\n\n/**\n * Coder provides a facade for encoding and decoding all IDL related objects.\n */\nexport default class Coder<A extends string = string> {\n  /**\n   * Instruction coder.\n   */\n  readonly instruction: InstructionCoder;\n\n  /**\n   * Account coder.\n   */\n  readonly accounts: AccountsCoder<A>;\n\n  /**\n   * Coder for state structs.\n   */\n  readonly state: StateCoder;\n\n  /**\n   * Coder for events.\n   */\n  readonly events: EventCoder;\n\n  constructor(idl: Idl) {\n    this.instruction = new InstructionCoder(idl);\n    this.accounts = new AccountsCoder(idl);\n    this.events = new EventCoder(idl);\n    if (idl.state) {\n      this.state = new StateCoder(idl);\n    }\n  }\n\n  public sighash(nameSpace: string, ixName: string): Buffer {\n    return sighash(nameSpace, ixName);\n  }\n}\n"],"mappings":"AACA,SAASA,gBAAgB,QAAQ,eAAe;AAChD,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,UAAU,QAAQ,SAAS;AACpC,SAASC,UAAU,QAAQ,SAAS;AACpC,SAASC,OAAO,QAAQ,UAAU;AAElC,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASL,gBAAgB,QAAQ,eAAe;AAChD,SAASC,aAAa,EAAEK,0BAA0B,QAAQ,YAAY;AACtE,SAASJ,UAAU,EAAEK,kBAAkB,QAAQ,SAAS;AACxD,SAASJ,UAAU,EAAEK,kBAAkB,QAAQ,SAAS;AAExD;;;AAGA,eAAc,MAAOC,KAAK;EAqBxBC,YAAYC,GAAQ;IAClB,IAAI,CAACC,WAAW,GAAG,IAAIZ,gBAAgB,CAACW,GAAG,CAAC;IAC5C,IAAI,CAACE,QAAQ,GAAG,IAAIZ,aAAa,CAACU,GAAG,CAAC;IACtC,IAAI,CAACG,MAAM,GAAG,IAAIZ,UAAU,CAACS,GAAG,CAAC;IACjC,IAAIA,GAAG,CAACI,KAAK,EAAE;MACb,IAAI,CAACA,KAAK,GAAG,IAAIZ,UAAU,CAACQ,GAAG,CAAC;;EAEpC;EAEOP,OAAOA,CAACY,SAAiB,EAAEC,MAAc;IAC9C,OAAOb,OAAO,CAACY,SAAS,EAAEC,MAAM,CAAC;EACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}