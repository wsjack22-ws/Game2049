{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _toConsumableArray = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createClass = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _inherits = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _wrapNativeSuper = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LangErrorMessage = exports.LangErrorCode = exports.translateError = exports.ProgramError = exports.AnchorError = exports.ProgramErrorStack = exports.IdlError = void 0;\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar features = __importStar(require(\"./utils/features.js\"));\nvar IdlError = /*#__PURE__*/function (_Error) {\n  _inherits(IdlError, _Error);\n  var _super = _createSuper(IdlError);\n  function IdlError(message) {\n    var _this;\n    _classCallCheck(this, IdlError);\n    _this = _super.call(this, message);\n    _this.name = \"IdlError\";\n    return _this;\n  }\n  return _createClass(IdlError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.IdlError = IdlError;\nvar ProgramErrorStack = /*#__PURE__*/function () {\n  function ProgramErrorStack(stack) {\n    _classCallCheck(this, ProgramErrorStack);\n    this.stack = stack;\n  }\n  _createClass(ProgramErrorStack, null, [{\n    key: \"parse\",\n    value: function parse(logs) {\n      var _a;\n      var programKeyRegex = /^Program (\\w*) invoke/;\n      var successRegex = /^Program \\w* success/;\n      var programStack = [];\n      for (var i = 0; i < logs.length; i++) {\n        if (successRegex.exec(logs[i])) {\n          programStack.pop();\n          continue;\n        }\n        var programKey = (_a = programKeyRegex.exec(logs[i])) === null || _a === void 0 ? void 0 : _a[1];\n        if (!programKey) {\n          continue;\n        }\n        programStack.push(new web3_js_1.PublicKey(programKey));\n      }\n      return new ProgramErrorStack(programStack);\n    }\n  }]);\n  return ProgramErrorStack;\n}();\nexports.ProgramErrorStack = ProgramErrorStack;\nvar AnchorError = /*#__PURE__*/function (_Error2) {\n  _inherits(AnchorError, _Error2);\n  var _super2 = _createSuper(AnchorError);\n  function AnchorError(errorCode, errorMessage, errorLogs, logs, origin, comparedValues) {\n    var _this2;\n    _classCallCheck(this, AnchorError);\n    _this2 = _super2.call(this, errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n    _this2.errorLogs = errorLogs;\n    _this2.logs = logs;\n    _this2.error = {\n      errorCode: errorCode,\n      errorMessage: errorMessage,\n      comparedValues: comparedValues,\n      origin: origin\n    };\n    _this2._programErrorStack = ProgramErrorStack.parse(logs);\n    return _this2;\n  }\n  _createClass(AnchorError, [{\n    key: \"program\",\n    get: function get() {\n      return this._programErrorStack.stack[this._programErrorStack.stack.length - 1];\n    }\n  }, {\n    key: \"programErrorStack\",\n    get: function get() {\n      return this._programErrorStack.stack;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.message;\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(logs) {\n      if (!logs) {\n        return null;\n      }\n      var anchorErrorLogIndex = logs.findIndex(function (log) {\n        return log.startsWith(\"Program log: AnchorError\");\n      });\n      if (anchorErrorLogIndex === -1) {\n        return null;\n      }\n      var anchorErrorLog = logs[anchorErrorLogIndex];\n      var errorLogs = [anchorErrorLog];\n      var comparedValues;\n      if (anchorErrorLogIndex + 1 < logs.length) {\n        // This catches the comparedValues where the following is logged\n        // <AnchorError>\n        // Left:\n        // <Pubkey>\n        // Right:\n        // <Pubkey>\n        if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n          var pubkeyRegex = /^Program log: (.*)$/;\n          var leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])[1];\n          var rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])[1];\n          comparedValues = [new web3_js_1.PublicKey(leftPubkey), new web3_js_1.PublicKey(rightPubkey)];\n          errorLogs.push.apply(errorLogs, _toConsumableArray(logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5)));\n        }\n        // This catches the comparedValues where the following is logged\n        // <AnchorError>\n        // Left: <value>\n        // Right: <value>\n        else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n          var valueRegex = /^Program log: (Left|Right): (.*)$/;\n          var leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])[2];\n          var rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])[2];\n          errorLogs.push.apply(errorLogs, _toConsumableArray(logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3)));\n          comparedValues = [leftValue, rightValue];\n        }\n      }\n      var regexNoInfo = /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n      var noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n      var regexFileLine = /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n      var fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n      var regexAccountName = /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n      var accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n      if (noInfoAnchorErrorLog) {\n        var _noInfoAnchorErrorLog = noInfoAnchorErrorLog.slice(1, 4),\n          _noInfoAnchorErrorLog2 = _slicedToArray(_noInfoAnchorErrorLog, 3),\n          errorCodeString = _noInfoAnchorErrorLog2[0],\n          errorNumber = _noInfoAnchorErrorLog2[1],\n          errorMessage = _noInfoAnchorErrorLog2[2];\n        var errorCode = {\n          code: errorCodeString,\n          number: parseInt(errorNumber)\n        };\n        return new AnchorError(errorCode, errorMessage, errorLogs, logs, undefined, comparedValues);\n      } else if (fileLineAnchorErrorLog) {\n        var _fileLineAnchorErrorL = fileLineAnchorErrorLog.slice(1, 6),\n          _fileLineAnchorErrorL2 = _slicedToArray(_fileLineAnchorErrorL, 5),\n          file = _fileLineAnchorErrorL2[0],\n          line = _fileLineAnchorErrorL2[1],\n          _errorCodeString = _fileLineAnchorErrorL2[2],\n          _errorNumber = _fileLineAnchorErrorL2[3],\n          _errorMessage = _fileLineAnchorErrorL2[4];\n        var _errorCode = {\n          code: _errorCodeString,\n          number: parseInt(_errorNumber)\n        };\n        var fileLine = {\n          file: file,\n          line: parseInt(line)\n        };\n        return new AnchorError(_errorCode, _errorMessage, errorLogs, logs, fileLine, comparedValues);\n      } else if (accountNameAnchorErrorLog) {\n        var _accountNameAnchorErr = accountNameAnchorErrorLog.slice(1, 5),\n          _accountNameAnchorErr2 = _slicedToArray(_accountNameAnchorErr, 4),\n          accountName = _accountNameAnchorErr2[0],\n          _errorCodeString2 = _accountNameAnchorErr2[1],\n          _errorNumber2 = _accountNameAnchorErr2[2],\n          _errorMessage2 = _accountNameAnchorErr2[3];\n        var origin = accountName;\n        var _errorCode2 = {\n          code: _errorCodeString2,\n          number: parseInt(_errorNumber2)\n        };\n        return new AnchorError(_errorCode2, _errorMessage2, errorLogs, logs, origin, comparedValues);\n      } else {\n        return null;\n      }\n    }\n  }]);\n  return AnchorError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.AnchorError = AnchorError;\n// An error from a user defined program.\nvar ProgramError = /*#__PURE__*/function (_Error3) {\n  _inherits(ProgramError, _Error3);\n  var _super3 = _createSuper(ProgramError);\n  function ProgramError(code, msg, logs) {\n    var _this3;\n    _classCallCheck(this, ProgramError);\n    _this3 = _super3.call(this);\n    _this3.code = code;\n    _this3.msg = msg;\n    _this3.logs = logs;\n    if (logs) {\n      _this3._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n    return _this3;\n  }\n  _createClass(ProgramError, [{\n    key: \"program\",\n    get: function get() {\n      var _a;\n      return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack[this._programErrorStack.stack.length - 1];\n    }\n  }, {\n    key: \"programErrorStack\",\n    get: function get() {\n      var _a;\n      return (_a = this._programErrorStack) === null || _a === void 0 ? void 0 : _a.stack;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.msg;\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(err, idlErrors) {\n      var errString = err.toString();\n      // TODO: don't rely on the error string. web3.js should preserve the error\n      //       code information instead of giving us an untyped string.\n      var unparsedErrorCode;\n      if (errString.includes(\"custom program error:\")) {\n        var components = errString.split(\"custom program error: \");\n        if (components.length !== 2) {\n          return null;\n        } else {\n          unparsedErrorCode = components[1];\n        }\n      } else {\n        var matches = errString.match(/\"Custom\":([0-9]+)}/g);\n        if (!matches || matches.length > 1) {\n          return null;\n        }\n        unparsedErrorCode = matches[0].match(/([0-9]+)/g)[0];\n      }\n      var errorCode;\n      try {\n        errorCode = parseInt(unparsedErrorCode);\n      } catch (parseErr) {\n        return null;\n      }\n      // Parse user error.\n      var errorMsg = idlErrors.get(errorCode);\n      if (errorMsg !== undefined) {\n        return new ProgramError(errorCode, errorMsg, err.logs);\n      }\n      // Parse framework internal error.\n      errorMsg = exports.LangErrorMessage.get(errorCode);\n      if (errorMsg !== undefined) {\n        return new ProgramError(errorCode, errorMsg, err.logs);\n      }\n      // Unable to parse the error. Just return the untranslated error.\n      return null;\n    }\n  }]);\n  return ProgramError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexports.ProgramError = ProgramError;\nfunction translateError(err, idlErrors) {\n  if (features.isSet(\"debug-logs\")) {\n    console.log(\"Translating error:\", err);\n  }\n  var anchorError = AnchorError.parse(err.logs);\n  if (anchorError) {\n    return anchorError;\n  }\n  var programError = ProgramError.parse(err, idlErrors);\n  if (programError) {\n    return programError;\n  }\n  if (err.logs) {\n    var handler = {\n      get: function get(target, prop) {\n        if (prop === \"programErrorStack\") {\n          return target.programErrorStack.stack;\n        } else if (prop === \"program\") {\n          return target.programErrorStack.stack[err.programErrorStack.stack.length - 1];\n        } else {\n          // this is the normal way to return all other props\n          // without modifying them.\n          // @ts-expect-error\n          return Reflect.get.apply(Reflect, arguments);\n        }\n      }\n    };\n    err.programErrorStack = ProgramErrorStack.parse(err.logs);\n    return new Proxy(err, handler);\n  }\n  return err;\n}\nexports.translateError = translateError;\nexports.LangErrorCode = {\n  // Instructions.\n  InstructionMissing: 100,\n  InstructionFallbackNotFound: 101,\n  InstructionDidNotDeserialize: 102,\n  InstructionDidNotSerialize: 103,\n  // IDL instructions.\n  IdlInstructionStub: 1000,\n  IdlInstructionInvalidProgram: 1001,\n  // Constraints.\n  ConstraintMut: 2000,\n  ConstraintHasOne: 2001,\n  ConstraintSigner: 2002,\n  ConstraintRaw: 2003,\n  ConstraintOwner: 2004,\n  ConstraintRentExempt: 2005,\n  ConstraintSeeds: 2006,\n  ConstraintExecutable: 2007,\n  ConstraintState: 2008,\n  ConstraintAssociated: 2009,\n  ConstraintAssociatedInit: 2010,\n  ConstraintClose: 2011,\n  ConstraintAddress: 2012,\n  ConstraintZero: 2013,\n  ConstraintTokenMint: 2014,\n  ConstraintTokenOwner: 2015,\n  ConstraintMintMintAuthority: 2016,\n  ConstraintMintFreezeAuthority: 2017,\n  ConstraintMintDecimals: 2018,\n  ConstraintSpace: 2019,\n  // Require.\n  RequireViolated: 2500,\n  RequireEqViolated: 2501,\n  RequireKeysEqViolated: 2502,\n  RequireNeqViolated: 2503,\n  RequireKeysNeqViolated: 2504,\n  RequireGtViolated: 2505,\n  RequireGteViolated: 2506,\n  // Accounts.\n  AccountDiscriminatorAlreadySet: 3000,\n  AccountDiscriminatorNotFound: 3001,\n  AccountDiscriminatorMismatch: 3002,\n  AccountDidNotDeserialize: 3003,\n  AccountDidNotSerialize: 3004,\n  AccountNotEnoughKeys: 3005,\n  AccountNotMutable: 3006,\n  AccountOwnedByWrongProgram: 3007,\n  InvalidProgramId: 3008,\n  InvalidProgramExecutable: 3009,\n  AccountNotSigner: 3010,\n  AccountNotSystemOwned: 3011,\n  AccountNotInitialized: 3012,\n  AccountNotProgramData: 3013,\n  AccountNotAssociatedTokenAccount: 3014,\n  AccountSysvarMismatch: 3015,\n  // State.\n  StateInvalidAddress: 4000,\n  // Miscellaneous\n  DeclaredProgramIdMismatch: 4100,\n  // Used for APIs that shouldn't be used anymore.\n  Deprecated: 5000\n};\nexports.LangErrorMessage = new Map([\n// Instructions.\n[exports.LangErrorCode.InstructionMissing, \"8 byte instruction identifier not provided\"], [exports.LangErrorCode.InstructionFallbackNotFound, \"Fallback functions are not supported\"], [exports.LangErrorCode.InstructionDidNotDeserialize, \"The program could not deserialize the given instruction\"], [exports.LangErrorCode.InstructionDidNotSerialize, \"The program could not serialize the given instruction\"],\n// Idl instructions.\n[exports.LangErrorCode.IdlInstructionStub, \"The program was compiled without idl instructions\"], [exports.LangErrorCode.IdlInstructionInvalidProgram, \"The transaction was given an invalid program for the IDL instruction\"],\n// Constraints.\n[exports.LangErrorCode.ConstraintMut, \"A mut constraint was violated\"], [exports.LangErrorCode.ConstraintHasOne, \"A has_one constraint was violated\"], [exports.LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"], [exports.LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"], [exports.LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"], [exports.LangErrorCode.ConstraintRentExempt, \"A rent exemption constraint was violated\"], [exports.LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"], [exports.LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"], [exports.LangErrorCode.ConstraintState, \"A state constraint was violated\"], [exports.LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"], [exports.LangErrorCode.ConstraintAssociatedInit, \"An associated init constraint was violated\"], [exports.LangErrorCode.ConstraintClose, \"A close constraint was violated\"], [exports.LangErrorCode.ConstraintAddress, \"An address constraint was violated\"], [exports.LangErrorCode.ConstraintZero, \"Expected zero account discriminant\"], [exports.LangErrorCode.ConstraintTokenMint, \"A token mint constraint was violated\"], [exports.LangErrorCode.ConstraintTokenOwner, \"A token owner constraint was violated\"], [exports.LangErrorCode.ConstraintMintMintAuthority, \"A mint mint authority constraint was violated\"], [exports.LangErrorCode.ConstraintMintFreezeAuthority, \"A mint freeze authority constraint was violated\"], [exports.LangErrorCode.ConstraintMintDecimals, \"A mint decimals constraint was violated\"], [exports.LangErrorCode.ConstraintSpace, \"A space constraint was violated\"],\n// Require.\n[exports.LangErrorCode.RequireViolated, \"A require expression was violated\"], [exports.LangErrorCode.RequireEqViolated, \"A require_eq expression was violated\"], [exports.LangErrorCode.RequireKeysEqViolated, \"A require_keys_eq expression was violated\"], [exports.LangErrorCode.RequireNeqViolated, \"A require_neq expression was violated\"], [exports.LangErrorCode.RequireKeysNeqViolated, \"A require_keys_neq expression was violated\"], [exports.LangErrorCode.RequireGtViolated, \"A require_gt expression was violated\"], [exports.LangErrorCode.RequireGteViolated, \"A require_gte expression was violated\"],\n// Accounts.\n[exports.LangErrorCode.AccountDiscriminatorAlreadySet, \"The account discriminator was already set on this account\"], [exports.LangErrorCode.AccountDiscriminatorNotFound, \"No 8 byte discriminator was found on the account\"], [exports.LangErrorCode.AccountDiscriminatorMismatch, \"8 byte discriminator did not match what was expected\"], [exports.LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"], [exports.LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"], [exports.LangErrorCode.AccountNotEnoughKeys, \"Not enough account keys given to the instruction\"], [exports.LangErrorCode.AccountNotMutable, \"The given account is not mutable\"], [exports.LangErrorCode.AccountOwnedByWrongProgram, \"The given account is owned by a different program than expected\"], [exports.LangErrorCode.InvalidProgramId, \"Program ID was not as expected\"], [exports.LangErrorCode.InvalidProgramExecutable, \"Program account is not executable\"], [exports.LangErrorCode.AccountNotSigner, \"The given account did not sign\"], [exports.LangErrorCode.AccountNotSystemOwned, \"The given account is not owned by the system program\"], [exports.LangErrorCode.AccountNotInitialized, \"The program expected this account to be already initialized\"], [exports.LangErrorCode.AccountNotProgramData, \"The given account is not a program data account\"], [exports.LangErrorCode.AccountNotAssociatedTokenAccount, \"The given account is not the associated token account\"], [exports.LangErrorCode.AccountSysvarMismatch, \"The given public key does not match the required sysvar\"],\n// State.\n[exports.LangErrorCode.StateInvalidAddress, \"The given state account does not have the correct address\"],\n// Miscellaneous\n[exports.LangErrorCode.DeclaredProgramIdMismatch, \"The declared program id does not match the actual program id\"],\n// Deprecated\n[exports.LangErrorCode.Deprecated, \"The API being used is deprecated and should no longer be used\"]]);","map":{"version":3,"names":["web3_js_1","require","features","__importStar","IdlError","_Error","_inherits","_super","_createSuper","message","_this","_classCallCheck","call","name","_createClass","_wrapNativeSuper","Error","exports","ProgramErrorStack","stack","key","value","parse","logs","programKeyRegex","successRegex","programStack","i","length","exec","pop","programKey","_a","push","PublicKey","AnchorError","_Error2","_super2","errorCode","errorMessage","errorLogs","origin","comparedValues","_this2","join","replace","error","_programErrorStack","get","toString","anchorErrorLogIndex","findIndex","log","startsWith","anchorErrorLog","pubkeyRegex","leftPubkey","rightPubkey","apply","_toConsumableArray","slice","valueRegex","leftValue","rightValue","regexNoInfo","noInfoAnchorErrorLog","regexFileLine","fileLineAnchorErrorLog","regexAccountName","accountNameAnchorErrorLog","_noInfoAnchorErrorLog","_noInfoAnchorErrorLog2","_slicedToArray","errorCodeString","errorNumber","code","number","parseInt","undefined","_fileLineAnchorErrorL","_fileLineAnchorErrorL2","file","line","fileLine","_accountNameAnchorErr","_accountNameAnchorErr2","accountName","ProgramError","_Error3","_super3","msg","_this3","err","idlErrors","errString","unparsedErrorCode","includes","components","split","matches","match","parseErr","errorMsg","LangErrorMessage","translateError","isSet","console","anchorError","programError","handler","target","prop","programErrorStack","Reflect","arguments","Proxy","LangErrorCode","InstructionMissing","InstructionFallbackNotFound","InstructionDidNotDeserialize","InstructionDidNotSerialize","IdlInstructionStub","IdlInstructionInvalidProgram","ConstraintMut","ConstraintHasOne","ConstraintSigner","ConstraintRaw","ConstraintOwner","ConstraintRentExempt","ConstraintSeeds","ConstraintExecutable","ConstraintState","ConstraintAssociated","ConstraintAssociatedInit","ConstraintClose","ConstraintAddress","ConstraintZero","ConstraintTokenMint","ConstraintTokenOwner","ConstraintMintMintAuthority","ConstraintMintFreezeAuthority","ConstraintMintDecimals","ConstraintSpace","RequireViolated","RequireEqViolated","RequireKeysEqViolated","RequireNeqViolated","RequireKeysNeqViolated","RequireGtViolated","RequireGteViolated","AccountDiscriminatorAlreadySet","AccountDiscriminatorNotFound","AccountDiscriminatorMismatch","AccountDidNotDeserialize","AccountDidNotSerialize","AccountNotEnoughKeys","AccountNotMutable","AccountOwnedByWrongProgram","InvalidProgramId","InvalidProgramExecutable","AccountNotSigner","AccountNotSystemOwned","AccountNotInitialized","AccountNotProgramData","AccountNotAssociatedTokenAccount","AccountSysvarMismatch","StateInvalidAddress","DeclaredProgramIdMismatch","Deprecated","Map"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/error.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport * as features from \"./utils/features.js\";\n\nexport class IdlError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"IdlError\";\n  }\n}\n\ninterface ErrorCode {\n  code: string;\n  number: number;\n}\n\ninterface FileLine {\n  file: string;\n  line: number;\n}\n\ntype Origin = string | FileLine;\ntype ComparedAccountNames = [string, string];\ntype ComparedPublicKeys = [PublicKey, PublicKey];\ntype ComparedValues = ComparedAccountNames | ComparedPublicKeys;\n\nexport class ProgramErrorStack {\n  constructor(readonly stack: PublicKey[]) {}\n\n  public static parse(logs: string[]) {\n    const programKeyRegex = /^Program (\\w*) invoke/;\n    const successRegex = /^Program \\w* success/;\n\n    const programStack: PublicKey[] = [];\n    for (let i = 0; i < logs.length; i++) {\n      if (successRegex.exec(logs[i])) {\n        programStack.pop();\n        continue;\n      }\n\n      const programKey = programKeyRegex.exec(logs[i])?.[1];\n      if (!programKey) {\n        continue;\n      }\n      programStack.push(new PublicKey(programKey));\n    }\n    return new ProgramErrorStack(programStack);\n  }\n}\n\nexport class AnchorError extends Error {\n  readonly error: {\n    errorCode: ErrorCode;\n    errorMessage: string;\n    comparedValues?: ComparedValues;\n    origin?: Origin;\n  };\n  private readonly _programErrorStack: ProgramErrorStack;\n\n  constructor(\n    errorCode: ErrorCode,\n    errorMessage: string,\n    readonly errorLogs: string[],\n    readonly logs: string[],\n    origin?: Origin,\n    comparedValues?: ComparedValues\n  ) {\n    super(errorLogs.join(\"\\n\").replace(\"Program log: \", \"\"));\n    this.error = { errorCode, errorMessage, comparedValues, origin };\n    this._programErrorStack = ProgramErrorStack.parse(logs);\n  }\n\n  public static parse(logs: string[]) {\n    if (!logs) {\n      return null;\n    }\n\n    const anchorErrorLogIndex = logs.findIndex((log) =>\n      log.startsWith(\"Program log: AnchorError\")\n    );\n    if (anchorErrorLogIndex === -1) {\n      return null;\n    }\n    const anchorErrorLog = logs[anchorErrorLogIndex];\n    const errorLogs = [anchorErrorLog];\n    let comparedValues: ComparedValues | undefined;\n    if (anchorErrorLogIndex + 1 < logs.length) {\n      // This catches the comparedValues where the following is logged\n      // <AnchorError>\n      // Left:\n      // <Pubkey>\n      // Right:\n      // <Pubkey>\n      if (logs[anchorErrorLogIndex + 1] === \"Program log: Left:\") {\n        const pubkeyRegex = /^Program log: (.*)$/;\n        const leftPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 2])![1];\n        const rightPubkey = pubkeyRegex.exec(logs[anchorErrorLogIndex + 4])![1];\n        comparedValues = [\n          new PublicKey(leftPubkey),\n          new PublicKey(rightPubkey),\n        ];\n        errorLogs.push(\n          ...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 5)\n        );\n      }\n      // This catches the comparedValues where the following is logged\n      // <AnchorError>\n      // Left: <value>\n      // Right: <value>\n      else if (logs[anchorErrorLogIndex + 1].startsWith(\"Program log: Left:\")) {\n        const valueRegex = /^Program log: (Left|Right): (.*)$/;\n        const leftValue = valueRegex.exec(logs[anchorErrorLogIndex + 1])![2];\n        const rightValue = valueRegex.exec(logs[anchorErrorLogIndex + 2])![2];\n        errorLogs.push(\n          ...logs.slice(anchorErrorLogIndex + 1, anchorErrorLogIndex + 3)\n        );\n        comparedValues = [leftValue, rightValue];\n      }\n    }\n    const regexNoInfo =\n      /^Program log: AnchorError occurred\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n    const noInfoAnchorErrorLog = regexNoInfo.exec(anchorErrorLog);\n    const regexFileLine =\n      /^Program log: AnchorError thrown in (.*):(\\d*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n    const fileLineAnchorErrorLog = regexFileLine.exec(anchorErrorLog);\n    const regexAccountName =\n      /^Program log: AnchorError caused by account: (.*)\\. Error Code: (.*)\\. Error Number: (\\d*)\\. Error Message: (.*)\\./;\n    const accountNameAnchorErrorLog = regexAccountName.exec(anchorErrorLog);\n    if (noInfoAnchorErrorLog) {\n      const [errorCodeString, errorNumber, errorMessage] =\n        noInfoAnchorErrorLog.slice(1, 4);\n      const errorCode = {\n        code: errorCodeString,\n        number: parseInt(errorNumber),\n      };\n      return new AnchorError(\n        errorCode,\n        errorMessage,\n        errorLogs,\n        logs,\n        undefined,\n        comparedValues\n      );\n    } else if (fileLineAnchorErrorLog) {\n      const [file, line, errorCodeString, errorNumber, errorMessage] =\n        fileLineAnchorErrorLog.slice(1, 6);\n      const errorCode = {\n        code: errorCodeString,\n        number: parseInt(errorNumber),\n      };\n      const fileLine = { file, line: parseInt(line) };\n      return new AnchorError(\n        errorCode,\n        errorMessage,\n        errorLogs,\n        logs,\n        fileLine,\n        comparedValues\n      );\n    } else if (accountNameAnchorErrorLog) {\n      const [accountName, errorCodeString, errorNumber, errorMessage] =\n        accountNameAnchorErrorLog.slice(1, 5);\n      const origin = accountName;\n      const errorCode = {\n        code: errorCodeString,\n        number: parseInt(errorNumber),\n      };\n      return new AnchorError(\n        errorCode,\n        errorMessage,\n        errorLogs,\n        logs,\n        origin,\n        comparedValues\n      );\n    } else {\n      return null;\n    }\n  }\n\n  get program(): PublicKey {\n    return this._programErrorStack.stack[\n      this._programErrorStack.stack.length - 1\n    ];\n  }\n\n  get programErrorStack(): PublicKey[] {\n    return this._programErrorStack.stack;\n  }\n\n  public toString(): string {\n    return this.message;\n  }\n}\n\n// An error from a user defined program.\nexport class ProgramError extends Error {\n  private readonly _programErrorStack?: ProgramErrorStack;\n\n  constructor(\n    readonly code: number,\n    readonly msg: string,\n    readonly logs?: string[]\n  ) {\n    super();\n    if (logs) {\n      this._programErrorStack = ProgramErrorStack.parse(logs);\n    }\n  }\n\n  public static parse(\n    err: any,\n    idlErrors: Map<number, string>\n  ): ProgramError | null {\n    const errString: string = err.toString();\n    // TODO: don't rely on the error string. web3.js should preserve the error\n    //       code information instead of giving us an untyped string.\n    let unparsedErrorCode: string;\n    if (errString.includes(\"custom program error:\")) {\n      let components = errString.split(\"custom program error: \");\n      if (components.length !== 2) {\n        return null;\n      } else {\n        unparsedErrorCode = components[1];\n      }\n    } else {\n      const matches = errString.match(/\"Custom\":([0-9]+)}/g);\n      if (!matches || matches.length > 1) {\n        return null;\n      }\n      unparsedErrorCode = matches[0].match(/([0-9]+)/g)![0];\n    }\n\n    let errorCode: number;\n    try {\n      errorCode = parseInt(unparsedErrorCode);\n    } catch (parseErr) {\n      return null;\n    }\n\n    // Parse user error.\n    let errorMsg = idlErrors.get(errorCode);\n    if (errorMsg !== undefined) {\n      return new ProgramError(errorCode, errorMsg, err.logs);\n    }\n\n    // Parse framework internal error.\n    errorMsg = LangErrorMessage.get(errorCode);\n    if (errorMsg !== undefined) {\n      return new ProgramError(errorCode, errorMsg, err.logs);\n    }\n\n    // Unable to parse the error. Just return the untranslated error.\n    return null;\n  }\n\n  get program(): PublicKey | undefined {\n    return this._programErrorStack?.stack[\n      this._programErrorStack.stack.length - 1\n    ];\n  }\n\n  get programErrorStack(): PublicKey[] | undefined {\n    return this._programErrorStack?.stack;\n  }\n\n  public toString(): string {\n    return this.msg;\n  }\n}\n\nexport function translateError(err: any, idlErrors: Map<number, string>) {\n  if (features.isSet(\"debug-logs\")) {\n    console.log(\"Translating error:\", err);\n  }\n\n  const anchorError = AnchorError.parse(err.logs);\n  if (anchorError) {\n    return anchorError;\n  }\n\n  const programError = ProgramError.parse(err, idlErrors);\n  if (programError) {\n    return programError;\n  }\n  if (err.logs) {\n    const handler = {\n      get: function (target, prop) {\n        if (prop === \"programErrorStack\") {\n          return target.programErrorStack.stack;\n        } else if (prop === \"program\") {\n          return target.programErrorStack.stack[\n            err.programErrorStack.stack.length - 1\n          ];\n        } else {\n          // this is the normal way to return all other props\n          // without modifying them.\n          // @ts-expect-error\n          return Reflect.get(...arguments);\n        }\n      },\n    };\n    err.programErrorStack = ProgramErrorStack.parse(err.logs);\n    return new Proxy(err, handler);\n  }\n  return err;\n}\n\nexport const LangErrorCode = {\n  // Instructions.\n  InstructionMissing: 100,\n  InstructionFallbackNotFound: 101,\n  InstructionDidNotDeserialize: 102,\n  InstructionDidNotSerialize: 103,\n\n  // IDL instructions.\n  IdlInstructionStub: 1000,\n  IdlInstructionInvalidProgram: 1001,\n\n  // Constraints.\n  ConstraintMut: 2000,\n  ConstraintHasOne: 2001,\n  ConstraintSigner: 2002,\n  ConstraintRaw: 2003,\n  ConstraintOwner: 2004,\n  ConstraintRentExempt: 2005,\n  ConstraintSeeds: 2006,\n  ConstraintExecutable: 2007,\n  ConstraintState: 2008,\n  ConstraintAssociated: 2009,\n  ConstraintAssociatedInit: 2010,\n  ConstraintClose: 2011,\n  ConstraintAddress: 2012,\n  ConstraintZero: 2013,\n  ConstraintTokenMint: 2014,\n  ConstraintTokenOwner: 2015,\n  ConstraintMintMintAuthority: 2016,\n  ConstraintMintFreezeAuthority: 2017,\n  ConstraintMintDecimals: 2018,\n  ConstraintSpace: 2019,\n\n  // Require.\n  RequireViolated: 2500,\n  RequireEqViolated: 2501,\n  RequireKeysEqViolated: 2502,\n  RequireNeqViolated: 2503,\n  RequireKeysNeqViolated: 2504,\n  RequireGtViolated: 2505,\n  RequireGteViolated: 2506,\n\n  // Accounts.\n  AccountDiscriminatorAlreadySet: 3000,\n  AccountDiscriminatorNotFound: 3001,\n  AccountDiscriminatorMismatch: 3002,\n  AccountDidNotDeserialize: 3003,\n  AccountDidNotSerialize: 3004,\n  AccountNotEnoughKeys: 3005,\n  AccountNotMutable: 3006,\n  AccountOwnedByWrongProgram: 3007,\n  InvalidProgramId: 3008,\n  InvalidProgramExecutable: 3009,\n  AccountNotSigner: 3010,\n  AccountNotSystemOwned: 3011,\n  AccountNotInitialized: 3012,\n  AccountNotProgramData: 3013,\n  AccountNotAssociatedTokenAccount: 3014,\n  AccountSysvarMismatch: 3015,\n  // State.\n  StateInvalidAddress: 4000,\n\n  // Miscellaneous\n  DeclaredProgramIdMismatch: 4100,\n\n  // Used for APIs that shouldn't be used anymore.\n  Deprecated: 5000,\n};\n\nexport const LangErrorMessage = new Map([\n  // Instructions.\n  [\n    LangErrorCode.InstructionMissing,\n    \"8 byte instruction identifier not provided\",\n  ],\n  [\n    LangErrorCode.InstructionFallbackNotFound,\n    \"Fallback functions are not supported\",\n  ],\n  [\n    LangErrorCode.InstructionDidNotDeserialize,\n    \"The program could not deserialize the given instruction\",\n  ],\n  [\n    LangErrorCode.InstructionDidNotSerialize,\n    \"The program could not serialize the given instruction\",\n  ],\n\n  // Idl instructions.\n  [\n    LangErrorCode.IdlInstructionStub,\n    \"The program was compiled without idl instructions\",\n  ],\n  [\n    LangErrorCode.IdlInstructionInvalidProgram,\n    \"The transaction was given an invalid program for the IDL instruction\",\n  ],\n\n  // Constraints.\n  [LangErrorCode.ConstraintMut, \"A mut constraint was violated\"],\n  [LangErrorCode.ConstraintHasOne, \"A has_one constraint was violated\"],\n  [LangErrorCode.ConstraintSigner, \"A signer constraint was violated\"],\n  [LangErrorCode.ConstraintRaw, \"A raw constraint was violated\"],\n  [LangErrorCode.ConstraintOwner, \"An owner constraint was violated\"],\n  [\n    LangErrorCode.ConstraintRentExempt,\n    \"A rent exemption constraint was violated\",\n  ],\n  [LangErrorCode.ConstraintSeeds, \"A seeds constraint was violated\"],\n  [LangErrorCode.ConstraintExecutable, \"An executable constraint was violated\"],\n  [LangErrorCode.ConstraintState, \"A state constraint was violated\"],\n  [LangErrorCode.ConstraintAssociated, \"An associated constraint was violated\"],\n  [\n    LangErrorCode.ConstraintAssociatedInit,\n    \"An associated init constraint was violated\",\n  ],\n  [LangErrorCode.ConstraintClose, \"A close constraint was violated\"],\n  [LangErrorCode.ConstraintAddress, \"An address constraint was violated\"],\n  [LangErrorCode.ConstraintZero, \"Expected zero account discriminant\"],\n  [LangErrorCode.ConstraintTokenMint, \"A token mint constraint was violated\"],\n  [LangErrorCode.ConstraintTokenOwner, \"A token owner constraint was violated\"],\n  [\n    LangErrorCode.ConstraintMintMintAuthority,\n    \"A mint mint authority constraint was violated\",\n  ],\n  [\n    LangErrorCode.ConstraintMintFreezeAuthority,\n    \"A mint freeze authority constraint was violated\",\n  ],\n  [\n    LangErrorCode.ConstraintMintDecimals,\n    \"A mint decimals constraint was violated\",\n  ],\n  [LangErrorCode.ConstraintSpace, \"A space constraint was violated\"],\n\n  // Require.\n  [LangErrorCode.RequireViolated, \"A require expression was violated\"],\n  [LangErrorCode.RequireEqViolated, \"A require_eq expression was violated\"],\n  [\n    LangErrorCode.RequireKeysEqViolated,\n    \"A require_keys_eq expression was violated\",\n  ],\n  [LangErrorCode.RequireNeqViolated, \"A require_neq expression was violated\"],\n  [\n    LangErrorCode.RequireKeysNeqViolated,\n    \"A require_keys_neq expression was violated\",\n  ],\n  [LangErrorCode.RequireGtViolated, \"A require_gt expression was violated\"],\n  [LangErrorCode.RequireGteViolated, \"A require_gte expression was violated\"],\n\n  // Accounts.\n  [\n    LangErrorCode.AccountDiscriminatorAlreadySet,\n    \"The account discriminator was already set on this account\",\n  ],\n  [\n    LangErrorCode.AccountDiscriminatorNotFound,\n    \"No 8 byte discriminator was found on the account\",\n  ],\n  [\n    LangErrorCode.AccountDiscriminatorMismatch,\n    \"8 byte discriminator did not match what was expected\",\n  ],\n  [LangErrorCode.AccountDidNotDeserialize, \"Failed to deserialize the account\"],\n  [LangErrorCode.AccountDidNotSerialize, \"Failed to serialize the account\"],\n  [\n    LangErrorCode.AccountNotEnoughKeys,\n    \"Not enough account keys given to the instruction\",\n  ],\n  [LangErrorCode.AccountNotMutable, \"The given account is not mutable\"],\n  [\n    LangErrorCode.AccountOwnedByWrongProgram,\n    \"The given account is owned by a different program than expected\",\n  ],\n  [LangErrorCode.InvalidProgramId, \"Program ID was not as expected\"],\n  [LangErrorCode.InvalidProgramExecutable, \"Program account is not executable\"],\n  [LangErrorCode.AccountNotSigner, \"The given account did not sign\"],\n  [\n    LangErrorCode.AccountNotSystemOwned,\n    \"The given account is not owned by the system program\",\n  ],\n  [\n    LangErrorCode.AccountNotInitialized,\n    \"The program expected this account to be already initialized\",\n  ],\n  [\n    LangErrorCode.AccountNotProgramData,\n    \"The given account is not a program data account\",\n  ],\n  [\n    LangErrorCode.AccountNotAssociatedTokenAccount,\n    \"The given account is not the associated token account\",\n  ],\n  [\n    LangErrorCode.AccountSysvarMismatch,\n    \"The given public key does not match the required sysvar\",\n  ],\n\n  // State.\n  [\n    LangErrorCode.StateInvalidAddress,\n    \"The given state account does not have the correct address\",\n  ],\n\n  // Miscellaneous\n  [\n    LangErrorCode.DeclaredProgramIdMismatch,\n    \"The declared program id does not match the actual program id\",\n  ],\n\n  // Deprecated\n  [\n    LangErrorCode.Deprecated,\n    \"The API being used is deprecated and should no longer be used\",\n  ],\n]);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAC,YAAA,CAAAF,OAAA;AAAgD,IAEnCG,QAAS,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACpB,SAAAA,SAAYK,OAAe;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,QAAA;IACzBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKG,IAAI,GAAG,UAAU;IAAC,OAAAH,KAAA;EACzB;EAAC,OAAAI,YAAA,CAAAV,QAAA;AAAA,gBAAAW,gBAAA,CAJ2BC,KAAK;AAAnCC,OAAA,CAAAb,QAAA,GAAAA,QAAA;AAKC,IAiBYc,iBAAiB;EAC5B,SAAAA,kBAAqBC,KAAkB;IAAAR,eAAA,OAAAO,iBAAA;IAAlB,KAAAC,KAAK,GAALA,KAAK;EAAgB;EAACL,YAAA,CAAAI,iBAAA;IAAAE,GAAA;IAAAC,KAAA,EAEpC,SAAAC,MAAaC,IAAc;;MAChC,IAAMC,eAAe,GAAG,uBAAuB;MAC/C,IAAMC,YAAY,GAAG,sBAAsB;MAE3C,IAAMC,YAAY,GAAgB,EAAE;MACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,IAAIF,YAAY,CAACI,IAAI,CAACN,IAAI,CAACI,CAAC,CAAC,CAAC,EAAE;UAC9BD,YAAY,CAACI,GAAG,EAAE;UAClB;;QAGF,IAAMC,UAAU,GAAG,CAAAC,EAAA,GAAAR,eAAe,CAACK,IAAI,CAACN,IAAI,CAACI,CAAC,CAAC,CAAC,cAAAK,EAAA,uBAAAA,EAAA,CAAG,CAAC,CAAC;QACrD,IAAI,CAACD,UAAU,EAAE;UACf;;QAEFL,YAAY,CAACO,IAAI,CAAC,IAAIjC,SAAA,CAAAkC,SAAS,CAACH,UAAU,CAAC,CAAC;;MAE9C,OAAO,IAAIb,iBAAiB,CAACQ,YAAY,CAAC;IAC5C;EAAC;EAAA,OAAAR,iBAAA;AAAA;AArBHD,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAsBC,IAEYiB,WAAY,0BAAAC,OAAA;EAAA9B,SAAA,CAAA6B,WAAA,EAAAC,OAAA;EAAA,IAAAC,OAAA,GAAA7B,YAAA,CAAA2B,WAAA;EASvB,SAAAA,YACEG,SAAoB,EACpBC,YAAoB,EACXC,SAAmB,EACnBjB,IAAc,EACvBkB,MAAe,EACfC,cAA+B;IAAA,IAAAC,MAAA;IAAAhC,eAAA,OAAAwB,WAAA;IAE/BQ,MAAA,GAAAN,OAAA,CAAAzB,IAAA,OAAM4B,SAAS,CAACI,IAAI,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;IAL9CF,MAAA,CAAAH,SAAS,GAATA,SAAS;IACTG,MAAA,CAAApB,IAAI,GAAJA,IAAI;IAKboB,MAAA,CAAKG,KAAK,GAAG;MAAER,SAAS,EAATA,SAAS;MAAEC,YAAY,EAAZA,YAAY;MAAEG,cAAc,EAAdA,cAAc;MAAED,MAAM,EAANA;IAAM,CAAE;IAChEE,MAAA,CAAKI,kBAAkB,GAAG7B,iBAAiB,CAACI,KAAK,CAACC,IAAI,CAAC;IAAC,OAAAoB,MAAA;EAC1D;EAAC7B,YAAA,CAAAqB,WAAA;IAAAf,GAAA;IAAA4B,GAAA,EA8GD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACD,kBAAkB,CAAC5B,KAAK,CAClC,IAAI,CAAC4B,kBAAkB,CAAC5B,KAAK,CAACS,MAAM,GAAG,CAAC,CACzC;IACH;EAAC;IAAAR,GAAA;IAAA4B,GAAA,EAED,SAAAA,IAAA,EAAqB;MACnB,OAAO,IAAI,CAACD,kBAAkB,CAAC5B,KAAK;IACtC;EAAC;IAAAC,GAAA;IAAAC,KAAA,EAEM,SAAA4B,SAAA,EAAQ;MACb,OAAO,IAAI,CAACxC,OAAO;IACrB;EAAC;IAAAW,GAAA;IAAAC,KAAA,EAxHM,SAAAC,MAAaC,IAAc;MAChC,IAAI,CAACA,IAAI,EAAE;QACT,OAAO,IAAI;;MAGb,IAAM2B,mBAAmB,GAAG3B,IAAI,CAAC4B,SAAS,CAAC,UAACC,GAAG;QAAA,OAC7CA,GAAG,CAACC,UAAU,CAAC,0BAA0B,CAAC;MAAA,EAC3C;MACD,IAAIH,mBAAmB,KAAK,CAAC,CAAC,EAAE;QAC9B,OAAO,IAAI;;MAEb,IAAMI,cAAc,GAAG/B,IAAI,CAAC2B,mBAAmB,CAAC;MAChD,IAAMV,SAAS,GAAG,CAACc,cAAc,CAAC;MAClC,IAAIZ,cAA0C;MAC9C,IAAIQ,mBAAmB,GAAG,CAAC,GAAG3B,IAAI,CAACK,MAAM,EAAE;QACzC;QACA;QACA;QACA;QACA;QACA;QACA,IAAIL,IAAI,CAAC2B,mBAAmB,GAAG,CAAC,CAAC,KAAK,oBAAoB,EAAE;UAC1D,IAAMK,WAAW,GAAG,qBAAqB;UACzC,IAAMC,UAAU,GAAGD,WAAW,CAAC1B,IAAI,CAACN,IAAI,CAAC2B,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;UACtE,IAAMO,WAAW,GAAGF,WAAW,CAAC1B,IAAI,CAACN,IAAI,CAAC2B,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;UACvER,cAAc,GAAG,CACf,IAAI1C,SAAA,CAAAkC,SAAS,CAACsB,UAAU,CAAC,EACzB,IAAIxD,SAAA,CAAAkC,SAAS,CAACuB,WAAW,CAAC,CAC3B;UACDjB,SAAS,CAACP,IAAI,CAAAyB,KAAA,CAAdlB,SAAS,EAAAmB,kBAAA,CACJpC,IAAI,CAACqC,KAAK,CAACV,mBAAmB,GAAG,CAAC,EAAEA,mBAAmB,GAAG,CAAC,CAAC,EAChE;;QAEH;QACA;QACA;QACA;QAAA,KACK,IAAI3B,IAAI,CAAC2B,mBAAmB,GAAG,CAAC,CAAC,CAACG,UAAU,CAAC,oBAAoB,CAAC,EAAE;UACvE,IAAMQ,UAAU,GAAG,mCAAmC;UACtD,IAAMC,SAAS,GAAGD,UAAU,CAAChC,IAAI,CAACN,IAAI,CAAC2B,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;UACpE,IAAMa,UAAU,GAAGF,UAAU,CAAChC,IAAI,CAACN,IAAI,CAAC2B,mBAAmB,GAAG,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;UACrEV,SAAS,CAACP,IAAI,CAAAyB,KAAA,CAAdlB,SAAS,EAAAmB,kBAAA,CACJpC,IAAI,CAACqC,KAAK,CAACV,mBAAmB,GAAG,CAAC,EAAEA,mBAAmB,GAAG,CAAC,CAAC,EAChE;UACDR,cAAc,GAAG,CAACoB,SAAS,EAAEC,UAAU,CAAC;;;MAG5C,IAAMC,WAAW,GACf,qGAAqG;MACvG,IAAMC,oBAAoB,GAAGD,WAAW,CAACnC,IAAI,CAACyB,cAAc,CAAC;MAC7D,IAAMY,aAAa,GACjB,iHAAiH;MACnH,IAAMC,sBAAsB,GAAGD,aAAa,CAACrC,IAAI,CAACyB,cAAc,CAAC;MACjE,IAAMc,gBAAgB,GACpB,oHAAoH;MACtH,IAAMC,yBAAyB,GAAGD,gBAAgB,CAACvC,IAAI,CAACyB,cAAc,CAAC;MACvE,IAAIW,oBAAoB,EAAE;QACxB,IAAAK,qBAAA,GACEL,oBAAoB,CAACL,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAAAW,sBAAA,GAAAC,cAAA,CAAAF,qBAAA;UAD3BG,eAAe,GAAAF,sBAAA;UAAEG,WAAW,GAAAH,sBAAA;UAAEhC,YAAY,GAAAgC,sBAAA;QAEjD,IAAMjC,SAAS,GAAG;UAChBqC,IAAI,EAAEF,eAAe;UACrBG,MAAM,EAAEC,QAAQ,CAACH,WAAW;SAC7B;QACD,OAAO,IAAIvC,WAAW,CACpBG,SAAS,EACTC,YAAY,EACZC,SAAS,EACTjB,IAAI,EACJuD,SAAS,EACTpC,cAAc,CACf;OACF,MAAM,IAAIyB,sBAAsB,EAAE;QACjC,IAAAY,qBAAA,GACEZ,sBAAsB,CAACP,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAAAoB,sBAAA,GAAAR,cAAA,CAAAO,qBAAA;UAD7BE,IAAI,GAAAD,sBAAA;UAAEE,IAAI,GAAAF,sBAAA;UAAEP,gBAAe,GAAAO,sBAAA;UAAEN,YAAW,GAAAM,sBAAA;UAAEzC,aAAY,GAAAyC,sBAAA;QAE7D,IAAM1C,UAAS,GAAG;UAChBqC,IAAI,EAAEF,gBAAe;UACrBG,MAAM,EAAEC,QAAQ,CAACH,YAAW;SAC7B;QACD,IAAMS,QAAQ,GAAG;UAAEF,IAAI,EAAJA,IAAI;UAAEC,IAAI,EAAEL,QAAQ,CAACK,IAAI;QAAC,CAAE;QAC/C,OAAO,IAAI/C,WAAW,CACpBG,UAAS,EACTC,aAAY,EACZC,SAAS,EACTjB,IAAI,EACJ4D,QAAQ,EACRzC,cAAc,CACf;OACF,MAAM,IAAI2B,yBAAyB,EAAE;QACpC,IAAAe,qBAAA,GACEf,yBAAyB,CAACT,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAAAyB,sBAAA,GAAAb,cAAA,CAAAY,qBAAA;UADhCE,WAAW,GAAAD,sBAAA;UAAEZ,iBAAe,GAAAY,sBAAA;UAAEX,aAAW,GAAAW,sBAAA;UAAE9C,cAAY,GAAA8C,sBAAA;QAE9D,IAAM5C,MAAM,GAAG6C,WAAW;QAC1B,IAAMhD,WAAS,GAAG;UAChBqC,IAAI,EAAEF,iBAAe;UACrBG,MAAM,EAAEC,QAAQ,CAACH,aAAW;SAC7B;QACD,OAAO,IAAIvC,WAAW,CACpBG,WAAS,EACTC,cAAY,EACZC,SAAS,EACTjB,IAAI,EACJkB,MAAM,EACNC,cAAc,CACf;OACF,MAAM;QACL,OAAO,IAAI;;IAEf;EAAC;EAAA,OAAAP,WAAA;AAAA,gBAAApB,gBAAA,CAhI8BC,KAAK;AAAtCC,OAAA,CAAAkB,WAAA,GAAAA,WAAA;AAiJA;AAAA,IACaoD,YAAa,0BAAAC,OAAA;EAAAlF,SAAA,CAAAiF,YAAA,EAAAC,OAAA;EAAA,IAAAC,OAAA,GAAAjF,YAAA,CAAA+E,YAAA;EAGxB,SAAAA,aACWZ,IAAY,EACZe,GAAW,EACXnE,IAAe;IAAA,IAAAoE,MAAA;IAAAhF,eAAA,OAAA4E,YAAA;IAExBI,MAAA,GAAAF,OAAA,CAAA7E,IAAA;IAJS+E,MAAA,CAAAhB,IAAI,GAAJA,IAAI;IACJgB,MAAA,CAAAD,GAAG,GAAHA,GAAG;IACHC,MAAA,CAAApE,IAAI,GAAJA,IAAI;IAGb,IAAIA,IAAI,EAAE;MACRoE,MAAA,CAAK5C,kBAAkB,GAAG7B,iBAAiB,CAACI,KAAK,CAACC,IAAI,CAAC;;IACxD,OAAAoE,MAAA;EACH;EAAC7E,YAAA,CAAAyE,YAAA;IAAAnE,GAAA;IAAA4B,GAAA,EAgDD,SAAAA,IAAA,EAAW;;MACT,OAAO,CAAAhB,EAAA,OAAI,CAACe,kBAAkB,cAAAf,EAAA,uBAAAA,EAAA,CAAEb,KAAK,CACnC,IAAI,CAAC4B,kBAAkB,CAAC5B,KAAK,CAACS,MAAM,GAAG,CAAC,CACzC;IACH;EAAC;IAAAR,GAAA;IAAA4B,GAAA,EAED,SAAAA,IAAA,EAAqB;;MACnB,OAAO,CAAAhB,EAAA,OAAI,CAACe,kBAAkB,cAAAf,EAAA,uBAAAA,EAAA,CAAEb,KAAK;IACvC;EAAC;IAAAC,GAAA;IAAAC,KAAA,EAEM,SAAA4B,SAAA,EAAQ;MACb,OAAO,IAAI,CAACyC,GAAG;IACjB;EAAC;IAAAtE,GAAA;IAAAC,KAAA,EA1DM,SAAAC,MACLsE,GAAQ,EACRC,SAA8B;MAE9B,IAAMC,SAAS,GAAWF,GAAG,CAAC3C,QAAQ,EAAE;MACxC;MACA;MACA,IAAI8C,iBAAyB;MAC7B,IAAID,SAAS,CAACE,QAAQ,CAAC,uBAAuB,CAAC,EAAE;QAC/C,IAAIC,UAAU,GAAGH,SAAS,CAACI,KAAK,CAAC,wBAAwB,CAAC;QAC1D,IAAID,UAAU,CAACrE,MAAM,KAAK,CAAC,EAAE;UAC3B,OAAO,IAAI;SACZ,MAAM;UACLmE,iBAAiB,GAAGE,UAAU,CAAC,CAAC,CAAC;;OAEpC,MAAM;QACL,IAAME,OAAO,GAAGL,SAAS,CAACM,KAAK,CAAC,qBAAqB,CAAC;QACtD,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACvE,MAAM,GAAG,CAAC,EAAE;UAClC,OAAO,IAAI;;QAEbmE,iBAAiB,GAAGI,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,WAAW,CAAE,CAAC,CAAC,CAAC;;MAGvD,IAAI9D,SAAiB;MACrB,IAAI;QACFA,SAAS,GAAGuC,QAAQ,CAACkB,iBAAiB,CAAC;OACxC,CAAC,OAAOM,QAAQ,EAAE;QACjB,OAAO,IAAI;;MAGb;MACA,IAAIC,QAAQ,GAAGT,SAAS,CAAC7C,GAAG,CAACV,SAAS,CAAC;MACvC,IAAIgE,QAAQ,KAAKxB,SAAS,EAAE;QAC1B,OAAO,IAAIS,YAAY,CAACjD,SAAS,EAAEgE,QAAQ,EAAEV,GAAG,CAACrE,IAAI,CAAC;;MAGxD;MACA+E,QAAQ,GAAGrF,OAAA,CAAAsF,gBAAgB,CAACvD,GAAG,CAACV,SAAS,CAAC;MAC1C,IAAIgE,QAAQ,KAAKxB,SAAS,EAAE;QAC1B,OAAO,IAAIS,YAAY,CAACjD,SAAS,EAAEgE,QAAQ,EAAEV,GAAG,CAACrE,IAAI,CAAC;;MAGxD;MACA,OAAO,IAAI;IACb;EAAC;EAAA,OAAAgE,YAAA;AAAA,gBAAAxE,gBAAA,CA1D+BC,KAAK;AAAvCC,OAAA,CAAAsE,YAAA,GAAAA,YAAA;AA2EA,SAAgBiB,cAAcA,CAACZ,GAAQ,EAAEC,SAA8B;EACrE,IAAI3F,QAAQ,CAACuG,KAAK,CAAC,YAAY,CAAC,EAAE;IAChCC,OAAO,CAACtD,GAAG,CAAC,oBAAoB,EAAEwC,GAAG,CAAC;;EAGxC,IAAMe,WAAW,GAAGxE,WAAW,CAACb,KAAK,CAACsE,GAAG,CAACrE,IAAI,CAAC;EAC/C,IAAIoF,WAAW,EAAE;IACf,OAAOA,WAAW;;EAGpB,IAAMC,YAAY,GAAGrB,YAAY,CAACjE,KAAK,CAACsE,GAAG,EAAEC,SAAS,CAAC;EACvD,IAAIe,YAAY,EAAE;IAChB,OAAOA,YAAY;;EAErB,IAAIhB,GAAG,CAACrE,IAAI,EAAE;IACZ,IAAMsF,OAAO,GAAG;MACd7D,GAAG,EAAE,SAAAA,IAAU8D,MAAM,EAAEC,IAAI;QACzB,IAAIA,IAAI,KAAK,mBAAmB,EAAE;UAChC,OAAOD,MAAM,CAACE,iBAAiB,CAAC7F,KAAK;SACtC,MAAM,IAAI4F,IAAI,KAAK,SAAS,EAAE;UAC7B,OAAOD,MAAM,CAACE,iBAAiB,CAAC7F,KAAK,CACnCyE,GAAG,CAACoB,iBAAiB,CAAC7F,KAAK,CAACS,MAAM,GAAG,CAAC,CACvC;SACF,MAAM;UACL;UACA;UACA;UACA,OAAOqF,OAAO,CAACjE,GAAG,CAAAU,KAAA,CAAXuD,OAAO,EAAQC,SAAS,CAAC;;MAEpC;KACD;IACDtB,GAAG,CAACoB,iBAAiB,GAAG9F,iBAAiB,CAACI,KAAK,CAACsE,GAAG,CAACrE,IAAI,CAAC;IACzD,OAAO,IAAI4F,KAAK,CAACvB,GAAG,EAAEiB,OAAO,CAAC;;EAEhC,OAAOjB,GAAG;AACZ;AAnCA3E,OAAA,CAAAuF,cAAA,GAAAA,cAAA;AAqCavF,OAAA,CAAAmG,aAAa,GAAG;EAC3B;EACAC,kBAAkB,EAAE,GAAG;EACvBC,2BAA2B,EAAE,GAAG;EAChCC,4BAA4B,EAAE,GAAG;EACjCC,0BAA0B,EAAE,GAAG;EAE/B;EACAC,kBAAkB,EAAE,IAAI;EACxBC,4BAA4B,EAAE,IAAI;EAElC;EACAC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,IAAI;EACtBC,gBAAgB,EAAE,IAAI;EACtBC,aAAa,EAAE,IAAI;EACnBC,eAAe,EAAE,IAAI;EACrBC,oBAAoB,EAAE,IAAI;EAC1BC,eAAe,EAAE,IAAI;EACrBC,oBAAoB,EAAE,IAAI;EAC1BC,eAAe,EAAE,IAAI;EACrBC,oBAAoB,EAAE,IAAI;EAC1BC,wBAAwB,EAAE,IAAI;EAC9BC,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE,IAAI;EACvBC,cAAc,EAAE,IAAI;EACpBC,mBAAmB,EAAE,IAAI;EACzBC,oBAAoB,EAAE,IAAI;EAC1BC,2BAA2B,EAAE,IAAI;EACjCC,6BAA6B,EAAE,IAAI;EACnCC,sBAAsB,EAAE,IAAI;EAC5BC,eAAe,EAAE,IAAI;EAErB;EACAC,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE,IAAI;EACvBC,qBAAqB,EAAE,IAAI;EAC3BC,kBAAkB,EAAE,IAAI;EACxBC,sBAAsB,EAAE,IAAI;EAC5BC,iBAAiB,EAAE,IAAI;EACvBC,kBAAkB,EAAE,IAAI;EAExB;EACAC,8BAA8B,EAAE,IAAI;EACpCC,4BAA4B,EAAE,IAAI;EAClCC,4BAA4B,EAAE,IAAI;EAClCC,wBAAwB,EAAE,IAAI;EAC9BC,sBAAsB,EAAE,IAAI;EAC5BC,oBAAoB,EAAE,IAAI;EAC1BC,iBAAiB,EAAE,IAAI;EACvBC,0BAA0B,EAAE,IAAI;EAChCC,gBAAgB,EAAE,IAAI;EACtBC,wBAAwB,EAAE,IAAI;EAC9BC,gBAAgB,EAAE,IAAI;EACtBC,qBAAqB,EAAE,IAAI;EAC3BC,qBAAqB,EAAE,IAAI;EAC3BC,qBAAqB,EAAE,IAAI;EAC3BC,gCAAgC,EAAE,IAAI;EACtCC,qBAAqB,EAAE,IAAI;EAC3B;EACAC,mBAAmB,EAAE,IAAI;EAEzB;EACAC,yBAAyB,EAAE,IAAI;EAE/B;EACAC,UAAU,EAAE;CACb;AAEYvJ,OAAA,CAAAsF,gBAAgB,GAAG,IAAIkE,GAAG,CAAC;AACtC;AACA,CACExJ,OAAA,CAAAmG,aAAa,CAACC,kBAAkB,EAChC,4CAA4C,CAC7C,EACD,CACEpG,OAAA,CAAAmG,aAAa,CAACE,2BAA2B,EACzC,sCAAsC,CACvC,EACD,CACErG,OAAA,CAAAmG,aAAa,CAACG,4BAA4B,EAC1C,yDAAyD,CAC1D,EACD,CACEtG,OAAA,CAAAmG,aAAa,CAACI,0BAA0B,EACxC,uDAAuD,CACxD;AAED;AACA,CACEvG,OAAA,CAAAmG,aAAa,CAACK,kBAAkB,EAChC,mDAAmD,CACpD,EACD,CACExG,OAAA,CAAAmG,aAAa,CAACM,4BAA4B,EAC1C,sEAAsE,CACvE;AAED;AACA,CAACzG,OAAA,CAAAmG,aAAa,CAACO,aAAa,EAAE,+BAA+B,CAAC,EAC9D,CAAC1G,OAAA,CAAAmG,aAAa,CAACQ,gBAAgB,EAAE,mCAAmC,CAAC,EACrE,CAAC3G,OAAA,CAAAmG,aAAa,CAACS,gBAAgB,EAAE,kCAAkC,CAAC,EACpE,CAAC5G,OAAA,CAAAmG,aAAa,CAACU,aAAa,EAAE,+BAA+B,CAAC,EAC9D,CAAC7G,OAAA,CAAAmG,aAAa,CAACW,eAAe,EAAE,kCAAkC,CAAC,EACnE,CACE9G,OAAA,CAAAmG,aAAa,CAACY,oBAAoB,EAClC,0CAA0C,CAC3C,EACD,CAAC/G,OAAA,CAAAmG,aAAa,CAACa,eAAe,EAAE,iCAAiC,CAAC,EAClE,CAAChH,OAAA,CAAAmG,aAAa,CAACc,oBAAoB,EAAE,uCAAuC,CAAC,EAC7E,CAACjH,OAAA,CAAAmG,aAAa,CAACe,eAAe,EAAE,iCAAiC,CAAC,EAClE,CAAClH,OAAA,CAAAmG,aAAa,CAACgB,oBAAoB,EAAE,uCAAuC,CAAC,EAC7E,CACEnH,OAAA,CAAAmG,aAAa,CAACiB,wBAAwB,EACtC,4CAA4C,CAC7C,EACD,CAACpH,OAAA,CAAAmG,aAAa,CAACkB,eAAe,EAAE,iCAAiC,CAAC,EAClE,CAACrH,OAAA,CAAAmG,aAAa,CAACmB,iBAAiB,EAAE,oCAAoC,CAAC,EACvE,CAACtH,OAAA,CAAAmG,aAAa,CAACoB,cAAc,EAAE,oCAAoC,CAAC,EACpE,CAACvH,OAAA,CAAAmG,aAAa,CAACqB,mBAAmB,EAAE,sCAAsC,CAAC,EAC3E,CAACxH,OAAA,CAAAmG,aAAa,CAACsB,oBAAoB,EAAE,uCAAuC,CAAC,EAC7E,CACEzH,OAAA,CAAAmG,aAAa,CAACuB,2BAA2B,EACzC,+CAA+C,CAChD,EACD,CACE1H,OAAA,CAAAmG,aAAa,CAACwB,6BAA6B,EAC3C,iDAAiD,CAClD,EACD,CACE3H,OAAA,CAAAmG,aAAa,CAACyB,sBAAsB,EACpC,yCAAyC,CAC1C,EACD,CAAC5H,OAAA,CAAAmG,aAAa,CAAC0B,eAAe,EAAE,iCAAiC,CAAC;AAElE;AACA,CAAC7H,OAAA,CAAAmG,aAAa,CAAC2B,eAAe,EAAE,mCAAmC,CAAC,EACpE,CAAC9H,OAAA,CAAAmG,aAAa,CAAC4B,iBAAiB,EAAE,sCAAsC,CAAC,EACzE,CACE/H,OAAA,CAAAmG,aAAa,CAAC6B,qBAAqB,EACnC,2CAA2C,CAC5C,EACD,CAAChI,OAAA,CAAAmG,aAAa,CAAC8B,kBAAkB,EAAE,uCAAuC,CAAC,EAC3E,CACEjI,OAAA,CAAAmG,aAAa,CAAC+B,sBAAsB,EACpC,4CAA4C,CAC7C,EACD,CAAClI,OAAA,CAAAmG,aAAa,CAACgC,iBAAiB,EAAE,sCAAsC,CAAC,EACzE,CAACnI,OAAA,CAAAmG,aAAa,CAACiC,kBAAkB,EAAE,uCAAuC,CAAC;AAE3E;AACA,CACEpI,OAAA,CAAAmG,aAAa,CAACkC,8BAA8B,EAC5C,2DAA2D,CAC5D,EACD,CACErI,OAAA,CAAAmG,aAAa,CAACmC,4BAA4B,EAC1C,kDAAkD,CACnD,EACD,CACEtI,OAAA,CAAAmG,aAAa,CAACoC,4BAA4B,EAC1C,sDAAsD,CACvD,EACD,CAACvI,OAAA,CAAAmG,aAAa,CAACqC,wBAAwB,EAAE,mCAAmC,CAAC,EAC7E,CAACxI,OAAA,CAAAmG,aAAa,CAACsC,sBAAsB,EAAE,iCAAiC,CAAC,EACzE,CACEzI,OAAA,CAAAmG,aAAa,CAACuC,oBAAoB,EAClC,kDAAkD,CACnD,EACD,CAAC1I,OAAA,CAAAmG,aAAa,CAACwC,iBAAiB,EAAE,kCAAkC,CAAC,EACrE,CACE3I,OAAA,CAAAmG,aAAa,CAACyC,0BAA0B,EACxC,iEAAiE,CAClE,EACD,CAAC5I,OAAA,CAAAmG,aAAa,CAAC0C,gBAAgB,EAAE,gCAAgC,CAAC,EAClE,CAAC7I,OAAA,CAAAmG,aAAa,CAAC2C,wBAAwB,EAAE,mCAAmC,CAAC,EAC7E,CAAC9I,OAAA,CAAAmG,aAAa,CAAC4C,gBAAgB,EAAE,gCAAgC,CAAC,EAClE,CACE/I,OAAA,CAAAmG,aAAa,CAAC6C,qBAAqB,EACnC,sDAAsD,CACvD,EACD,CACEhJ,OAAA,CAAAmG,aAAa,CAAC8C,qBAAqB,EACnC,6DAA6D,CAC9D,EACD,CACEjJ,OAAA,CAAAmG,aAAa,CAAC+C,qBAAqB,EACnC,iDAAiD,CAClD,EACD,CACElJ,OAAA,CAAAmG,aAAa,CAACgD,gCAAgC,EAC9C,uDAAuD,CACxD,EACD,CACEnJ,OAAA,CAAAmG,aAAa,CAACiD,qBAAqB,EACnC,yDAAyD,CAC1D;AAED;AACA,CACEpJ,OAAA,CAAAmG,aAAa,CAACkD,mBAAmB,EACjC,2DAA2D,CAC5D;AAED;AACA,CACErJ,OAAA,CAAAmG,aAAa,CAACmD,yBAAyB,EACvC,8DAA8D,CAC/D;AAED;AACA,CACEtJ,OAAA,CAAAmG,aAAa,CAACoD,UAAU,EACxB,+DAA+D,CAChE,CACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}