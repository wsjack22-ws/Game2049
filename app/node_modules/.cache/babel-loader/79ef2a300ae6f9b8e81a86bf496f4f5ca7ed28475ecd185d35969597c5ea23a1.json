{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/wuhuan/gif-portal-starter/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MethodsBuilderFactory = exports.AccountClient = exports.StateClient = void 0;\nvar camelcase_1 = __importDefault(require(\"camelcase\"));\nvar state_js_1 = __importDefault(require(\"./state.js\"));\nvar instruction_js_1 = __importDefault(require(\"./instruction.js\"));\nvar transaction_js_1 = __importDefault(require(\"./transaction.js\"));\nvar rpc_js_1 = __importDefault(require(\"./rpc.js\"));\nvar account_js_1 = __importDefault(require(\"./account.js\"));\nvar simulate_js_1 = __importDefault(require(\"./simulate.js\"));\nvar common_js_1 = require(\"../common.js\");\nvar methods_1 = require(\"./methods\");\nvar views_1 = __importDefault(require(\"./views\"));\n// Re-exports.\nvar state_js_2 = require(\"./state.js\");\nObject.defineProperty(exports, \"StateClient\", {\n  enumerable: true,\n  get: function get() {\n    return state_js_2.StateClient;\n  }\n});\nvar account_js_2 = require(\"./account.js\");\nObject.defineProperty(exports, \"AccountClient\", {\n  enumerable: true,\n  get: function get() {\n    return account_js_2.AccountClient;\n  }\n});\nvar methods_2 = require(\"./methods\");\nObject.defineProperty(exports, \"MethodsBuilderFactory\", {\n  enumerable: true,\n  get: function get() {\n    return methods_2.MethodsBuilderFactory;\n  }\n});\nvar NamespaceFactory = /*#__PURE__*/function () {\n  function NamespaceFactory() {\n    _classCallCheck(this, NamespaceFactory);\n  }\n  _createClass(NamespaceFactory, null, [{\n    key: \"build\",\n    value:\n    /**\n     * Generates all namespaces for a given program.\n     */\n    function build(idl, coder, programId, provider) {\n      var rpc = {};\n      var instruction = {};\n      var transaction = {};\n      var simulate = {};\n      var methods = {};\n      var view = {};\n      var idlErrors = (0, common_js_1.parseIdlErrors)(idl);\n      var account = idl.accounts ? account_js_1.default.build(idl, coder, programId, provider) : {};\n      var state = state_js_1.default.build(idl, coder, programId, provider);\n      idl.instructions.forEach(function (idlIx) {\n        var ixItem = instruction_js_1.default.build(idlIx, function (ixName, ix) {\n          return coder.instruction.encode(ixName, ix);\n        }, programId);\n        var txItem = transaction_js_1.default.build(idlIx, ixItem);\n        var rpcItem = rpc_js_1.default.build(idlIx, txItem, idlErrors, provider);\n        var simulateItem = simulate_js_1.default.build(idlIx, txItem, idlErrors, provider, coder, programId, idl);\n        var viewItem = views_1.default.build(programId, idlIx, simulateItem, idl);\n        var methodItem = methods_1.MethodsBuilderFactory.build(provider, programId, idlIx, ixItem, txItem, rpcItem, simulateItem, viewItem, account);\n        var name = (0, camelcase_1.default)(idlIx.name);\n        instruction[name] = ixItem;\n        transaction[name] = txItem;\n        rpc[name] = rpcItem;\n        simulate[name] = simulateItem;\n        methods[name] = methodItem;\n        if (viewItem) {\n          view[name] = viewItem;\n        }\n      });\n      return [rpc, instruction, transaction, account, simulate, methods, state, view];\n    }\n  }]);\n  return NamespaceFactory;\n}();\nexports.default = NamespaceFactory;","map":{"version":3,"names":["camelcase_1","__importDefault","require","state_js_1","instruction_js_1","transaction_js_1","rpc_js_1","account_js_1","simulate_js_1","common_js_1","methods_1","views_1","state_js_2","Object","defineProperty","exports","enumerable","get","StateClient","account_js_2","AccountClient","methods_2","MethodsBuilderFactory","NamespaceFactory","_classCallCheck","_createClass","key","value","build","idl","coder","programId","provider","rpc","instruction","transaction","simulate","methods","view","idlErrors","parseIdlErrors","account","accounts","default","state","instructions","forEach","idlIx","ixItem","ixName","ix","encode","txItem","rpcItem","simulateItem","viewItem","methodItem","name"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@project-serum/anchor/src/program/namespace/index.ts"],"sourcesContent":["import camelCase from \"camelcase\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { Coder } from \"../../coder/index.js\";\nimport Provider from \"../../provider.js\";\nimport { Idl } from \"../../idl.js\";\nimport StateFactory, { StateClient } from \"./state.js\";\nimport InstructionFactory, { InstructionNamespace } from \"./instruction.js\";\nimport TransactionFactory, { TransactionNamespace } from \"./transaction.js\";\nimport RpcFactory, { RpcNamespace } from \"./rpc.js\";\nimport AccountFactory, { AccountNamespace } from \"./account.js\";\nimport SimulateFactory, { SimulateNamespace } from \"./simulate.js\";\nimport { parseIdlErrors } from \"../common.js\";\nimport { MethodsBuilderFactory, MethodsNamespace } from \"./methods\";\nimport ViewFactory, { ViewNamespace } from \"./views\";\n\n// Re-exports.\nexport { StateClient } from \"./state.js\";\nexport { InstructionNamespace, InstructionFn } from \"./instruction.js\";\nexport { TransactionNamespace, TransactionFn } from \"./transaction.js\";\nexport { RpcNamespace, RpcFn } from \"./rpc.js\";\nexport { AccountNamespace, AccountClient, ProgramAccount } from \"./account.js\";\nexport { SimulateNamespace, SimulateFn } from \"./simulate.js\";\nexport { IdlAccounts, IdlTypes } from \"./types.js\";\nexport { MethodsBuilderFactory, MethodsNamespace } from \"./methods\";\nexport { ViewNamespace, ViewFn } from \"./views\";\n\nexport default class NamespaceFactory {\n  /**\n   * Generates all namespaces for a given program.\n   */\n  public static build<IDL extends Idl>(\n    idl: IDL,\n    coder: Coder,\n    programId: PublicKey,\n    provider: Provider\n  ): [\n    RpcNamespace<IDL>,\n    InstructionNamespace<IDL>,\n    TransactionNamespace<IDL>,\n    AccountNamespace<IDL>,\n    SimulateNamespace<IDL>,\n    MethodsNamespace<IDL>,\n    StateClient<IDL> | undefined,\n    ViewNamespace<IDL> | undefined\n  ] {\n    const rpc: RpcNamespace = {};\n    const instruction: InstructionNamespace = {};\n    const transaction: TransactionNamespace = {};\n    const simulate: SimulateNamespace = {};\n    const methods: MethodsNamespace = {};\n    const view: ViewNamespace = {};\n\n    const idlErrors = parseIdlErrors(idl);\n\n    const account: AccountNamespace<IDL> = idl.accounts\n      ? AccountFactory.build(idl, coder, programId, provider)\n      : ({} as AccountNamespace<IDL>);\n\n    const state = StateFactory.build(idl, coder, programId, provider);\n\n    idl.instructions.forEach((idlIx) => {\n      const ixItem = InstructionFactory.build<IDL, typeof idlIx>(\n        idlIx,\n        (ixName, ix) => coder.instruction.encode(ixName, ix),\n        programId\n      );\n      const txItem = TransactionFactory.build(idlIx, ixItem);\n      const rpcItem = RpcFactory.build(idlIx, txItem, idlErrors, provider);\n      const simulateItem = SimulateFactory.build(\n        idlIx,\n        txItem,\n        idlErrors,\n        provider,\n        coder,\n        programId,\n        idl\n      );\n      const viewItem = ViewFactory.build(programId, idlIx, simulateItem, idl);\n      const methodItem = MethodsBuilderFactory.build<IDL, typeof idlIx>(\n        provider,\n        programId,\n        idlIx,\n        ixItem,\n        txItem,\n        rpcItem,\n        simulateItem,\n        viewItem,\n        account\n      );\n      const name = camelCase(idlIx.name);\n\n      instruction[name] = ixItem;\n      transaction[name] = txItem;\n      rpc[name] = rpcItem;\n      simulate[name] = simulateItem;\n      methods[name] = methodItem;\n      if (viewItem) {\n        view[name] = viewItem;\n      }\n    });\n\n    return [\n      rpc as RpcNamespace<IDL>,\n      instruction as InstructionNamespace<IDL>,\n      transaction as TransactionNamespace<IDL>,\n      account,\n      simulate as SimulateNamespace<IDL>,\n      methods as MethodsNamespace<IDL>,\n      state,\n      view as ViewNamespace<IDL>,\n    ];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}