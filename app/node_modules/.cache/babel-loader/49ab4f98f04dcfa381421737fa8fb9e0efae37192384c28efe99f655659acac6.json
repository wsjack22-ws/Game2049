{"ast":null,"code":"var _jsxFileName = \"/Users/wuhuan/gif-portal-starter/src/context/Rank.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { Program } from \"@project-serum/anchor\";\nimport { useAnchorWallet, useConnection, useWallet } from \"@solana/wallet-adapter-react\";\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport idl from \"../idl.json\";\nimport { utf8 } from '@project-serum/anchor/dist/cjs/utils/bytes';\nimport { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey';\nimport { PublicKey } from \"@solana/web3.js\";\nimport { AnchorProvider } from \"@project-serum/anchor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\nconst RankContext = /*#__PURE__*/createContext();\nfunction getProgram(provider) {\n  console.log(\"provider:\", provider);\n  return new Program(idl, PROGRAM_KEY, provider);\n}\nexport const useRank = () => {\n  _s();\n  const context = useContext(RankContext);\n  if (!context) {\n    throw new Error(\"Missing rank context\");\n  }\n  return context;\n};\n_s(useRank, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const RankProvider = ({\n  children\n}) => {\n  _s2();\n  //const [topUsers, setTopUsers] = useState([]);\n  const [provider, setProvider] = useState();\n  const wallet = useWallet();\n  const {\n    connection\n  } = useConnection();\n  const {\n    publicKey\n  } = useWallet();\n  const {\n    score,\n    setScore\n  } = useState();\n  const program = useMemo(() => {\n    if (!provider || !connection) return null;\n    return getProgram(provider);\n  }, [provider]);\n  useEffect(() => {\n    if (wallet) {\n      const provider = new AnchorProvider(connection, wallet, {});\n      setProvider(provider);\n    }\n  }, [connection, wallet]);\n  useEffect(() => {\n    const start = async () => {\n      if (program && publicKey) {\n        try {\n          const [userPda] = await findProgramAddressSync([utf8.encode('user')], program.programId);\n          console.log(\"data:\", userPda.toString());\n          const userData = await program.account.boardAccount.fetch(userPda);\n          if (userData) {\n            setScore(userData.scores);\n            console.log('User data:', userData);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    start();\n  }, [program, publicKey]);\n  function createLottery(program, wallet) {\n    console.log(\"Creating lottery\");\n    program.rpc.createLottery({\n      accounts: {\n        authority: wallet.publicKey\n      },\n      signers: [wallet.publicKey]\n    });\n  }\n  function buyTicket(program, wallet) {\n    console.log(\"Buying ticket\");\n    program.rpc.buyTicket({\n      accounts: {\n        authority: wallet.publicKey\n      },\n      signers: [wallet.publicKey]\n    });\n  }\n  function pickWinner(program, wallet) {\n    console.log(\"Drawing winner\");\n    program.rpc.pickWinner({\n      accounts: {\n        authority: wallet.publicKey\n      },\n      signers: [wallet.publicKey]\n    });\n  }\n  const initMaster = async () => {\n    if (program && publicKey) {\n      try {\n        const [userPda] = findProgramAddressSync([utf8.encode('master')], program.programId);\n        await program.methods.initMaster().accounts({\n          master: userPda,\n          payer: publicKey\n        }).rpc();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  function claimPrize(program, wallet) {\n    console.log(\"Claiming prize\");\n    program.rpc.claimPrize({\n      accounts: {\n        authority: wallet.publicKey\n      },\n      signers: [wallet.publicKey]\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(RankContext.Provider, {\n    value: score,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 7\n  }, this);\n};\n_s2(RankProvider, \"PGdincwmnQhiAZ4RMoVTFeeXgn0=\", false, function () {\n  return [useWallet, useConnection, useWallet];\n});\n_c = RankProvider;\nvar _c;\n$RefreshReg$(_c, \"RankProvider\");","map":{"version":3,"names":["useEffect","Program","useAnchorWallet","useConnection","useWallet","createContext","useContext","useMemo","useState","idl","utf8","findProgramAddressSync","PublicKey","AnchorProvider","jsxDEV","_jsxDEV","PROGRAM_KEY","metadata","address","RankContext","getProgram","provider","console","log","useRank","_s","context","Error","RankProvider","children","_s2","setProvider","wallet","connection","publicKey","score","setScore","program","start","userPda","encode","programId","toString","userData","account","boardAccount","fetch","scores","error","createLottery","rpc","accounts","authority","signers","buyTicket","pickWinner","initMaster","methods","master","payer","claimPrize","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wuhuan/gif-portal-starter/src/context/Rank.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { Program } from \"@project-serum/anchor\";\nimport {\n  useAnchorWallet,\n  useConnection,\n  useWallet\n} from \"@solana/wallet-adapter-react\";\n\nimport { createContext, useContext, useMemo, useState } from \"react\";\nimport idl from \"../idl.json\";\nimport { utf8 } from '@project-serum/anchor/dist/cjs/utils/bytes'\nimport { findProgramAddressSync } from '@project-serum/anchor/dist/cjs/utils/pubkey'\nimport { PublicKey } from \"@solana/web3.js\";\nimport { AnchorProvider } from \"@project-serum/anchor\";\n\nconst PROGRAM_KEY = new PublicKey(idl.metadata.address);\n\nconst RankContext = createContext();\n\nfunction getProgram(provider) {\n    console.log(\"provider:\", provider)\n    return new Program(idl, PROGRAM_KEY, provider);\n  }\n\n\n\nexport const useRank = () => {\n    const context = useContext(RankContext);\n    if (!context) {\n        throw new Error(\"Missing rank context\");\n    }\n    return context;\n}\n\nexport const RankProvider = ({ children }) => {\n    //const [topUsers, setTopUsers] = useState([]);\n    const [provider, setProvider] = useState();\n    const wallet = useWallet();\n\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n    const { score, setScore } = useState();\n\n    const program = useMemo(() => {\n        if (!provider || !connection) return null;\n        return getProgram(provider);\n    }, [\n        provider,\n    ]);\n\n    useEffect(() => {\n      if (wallet) {\n        const provider = new AnchorProvider(connection, wallet, {});\n        setProvider(provider);\n      }\n    }, [connection, wallet]);\n\n    useEffect(() => {\n\n        const start = async () => {\n          if (program && publicKey) {\n            try {\n              const [userPda] = await findProgramAddressSync([utf8.encode('user')], program.programId)\n              console.log(\"data:\", userPda.toString())\n              const userData = await program.account.boardAccount.fetch(userPda)\n              if (userData) {\n                setScore(userData.scores)\n                console.log('User data:', userData)\n              }\n            } catch (error) {\n              console.log(error)\n            }\n          }\n        }\n    \n        start()\n    \n      }, [program, publicKey]);\n\n    function createLottery(program, wallet) {\n        console.log(\"Creating lottery\")\n        program.rpc.createLottery({\n            accounts: {\n                authority: wallet.publicKey,\n            },\n            signers: [wallet.publicKey],\n        });\n    }\n    \n    function buyTicket(program, wallet) {\n        console.log(\"Buying ticket\")\n        program.rpc.buyTicket({\n            accounts: {\n                authority: wallet.publicKey,\n            },\n            signers: [wallet.publicKey],\n        });\n    }\n    \n    function pickWinner(program, wallet) {\n        console.log(\"Drawing winner\")\n        program.rpc.pickWinner({\n            accounts: {\n                authority: wallet.publicKey,\n            },\n            signers: [wallet.publicKey],\n        });\n    }\n\n    const initMaster = async () => {\n      if (program && publicKey) {\n        try {\n          const [userPda] = findProgramAddressSync([utf8.encode('master')], program.programId)\n  \n          await program.methods\n            .initMaster()\n            .accounts({\n              master: userPda,\n              payer: publicKey,\n            })\n            .rpc()\n        } catch (error) {\n          console.log(error)\n        }\n      }\n    }\n\n    function claimPrize(program, wallet) {\n        console.log(\"Claiming prize\")\n        program.rpc.claimPrize({\n            accounts: {\n                authority: wallet.publicKey,\n            },\n            signers: [wallet.publicKey],\n        });\n    }\n    return (\n      <RankContext.Provider value={score}>{children}</RankContext.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}