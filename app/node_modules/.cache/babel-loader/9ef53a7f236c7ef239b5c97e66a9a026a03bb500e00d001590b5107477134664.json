{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport Transport from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportOpenUserCancelled, DisconnectedDeviceDuringOperation, DisconnectedDevice, TransportError } from \"@ledgerhq/errors\";\nvar ledgerDevices = [{\n  vendorId: ledgerUSBVendorId\n}];\nvar isSupported = function () {\n  return Promise.resolve(!!(window.navigator && window.navigator.hid));\n};\nvar getHID = function () {\n  // $FlowFixMe\n  var hid = navigator.hid;\n  if (!hid) throw new TransportError(\"navigator.hid is not supported\", \"HIDNotSupported\");\n  return hid;\n};\nfunction requestLedgerDevices() {\n  return __awaiter(this, void 0, void 0, function () {\n    var device;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getHID().requestDevice({\n            filters: ledgerDevices\n          })];\n        case 1:\n          device = _a.sent();\n          if (Array.isArray(device)) return [2 /*return*/, device];\n          return [2 /*return*/, [device]];\n      }\n    });\n  });\n}\nfunction getLedgerDevices() {\n  return __awaiter(this, void 0, void 0, function () {\n    var devices;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getHID().getDevices()];\n        case 1:\n          devices = _a.sent();\n          return [2 /*return*/, devices.filter(function (d) {\n            return d.vendorId === ledgerUSBVendorId;\n          })];\n      }\n    });\n  });\n}\nfunction getFirstLedgerDevice() {\n  return __awaiter(this, void 0, void 0, function () {\n    var existingDevices, devices;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getLedgerDevices()];\n        case 1:\n          existingDevices = _a.sent();\n          if (existingDevices.length > 0) return [2 /*return*/, existingDevices[0]];\n          return [4 /*yield*/, requestLedgerDevices()];\n        case 2:\n          devices = _a.sent();\n          return [2 /*return*/, devices[0]];\n      }\n    });\n  });\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\nvar TransportWebHID = /** @class */function (_super) {\n  __extends(TransportWebHID, _super);\n  function TransportWebHID(device) {\n    var _this = _super.call(this) || this;\n    _this.channel = Math.floor(Math.random() * 0xffff);\n    _this.packetSize = 64;\n    _this.inputs = [];\n    _this.read = function () {\n      if (_this.inputs.length) {\n        return Promise.resolve(_this.inputs.shift());\n      }\n      return new Promise(function (success) {\n        _this.inputCallback = success;\n      });\n    };\n    _this.onInputReport = function (e) {\n      var buffer = Buffer.from(e.data.buffer);\n      if (_this.inputCallback) {\n        _this.inputCallback(buffer);\n        _this.inputCallback = null;\n      } else {\n        _this.inputs.push(buffer);\n      }\n    };\n    _this._disconnectEmitted = false;\n    _this._emitDisconnect = function (e) {\n      if (_this._disconnectEmitted) return;\n      _this._disconnectEmitted = true;\n      _this.emit(\"disconnect\", e);\n    };\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     */\n    _this.exchange = function (apdu) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var b;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, this.exchangeAtomicImpl(function () {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var _a, channel, packetSize, framing, blocks, i, result, acc, buffer;\n                  return __generator(this, function (_b) {\n                    switch (_b.label) {\n                      case 0:\n                        _a = this, channel = _a.channel, packetSize = _a.packetSize;\n                        log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                        framing = hidFraming(channel, packetSize);\n                        blocks = framing.makeBlocks(apdu);\n                        i = 0;\n                        _b.label = 1;\n                      case 1:\n                        if (!(i < blocks.length)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.device.sendReport(0, blocks[i])];\n                      case 2:\n                        _b.sent();\n                        _b.label = 3;\n                      case 3:\n                        i++;\n                        return [3 /*break*/, 1];\n                      case 4:\n                        if (!!(result = framing.getReducedResult(acc))) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.read()];\n                      case 5:\n                        buffer = _b.sent();\n                        acc = framing.reduceResponse(acc, buffer);\n                        return [3 /*break*/, 4];\n                      case 6:\n                        log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                        return [2 /*return*/, result];\n                    }\n                  });\n                });\n              })[\"catch\"](function (e) {\n                if (e && e.message && e.message.includes(\"write\")) {\n                  _this._emitDisconnect(e);\n                  throw new DisconnectedDeviceDuringOperation(e.message);\n                }\n                throw e;\n              })];\n            case 1:\n              b = _a.sent();\n              return [2 /*return*/, b];\n          }\n        });\n      });\n    };\n    _this.device = device;\n    _this.deviceModel = typeof device.productId === \"number\" ? identifyUSBProductId(device.productId) : undefined;\n    device.addEventListener(\"inputreport\", _this.onInputReport);\n    return _this;\n  }\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  TransportWebHID.request = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, device;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, requestLedgerDevices()];\n          case 1:\n            _a = __read.apply(void 0, [_b.sent(), 1]), device = _a[0];\n            return [2 /*return*/, TransportWebHID.open(device)];\n        }\n      });\n    });\n  };\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  TransportWebHID.openConnected = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var devices;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, getLedgerDevices()];\n          case 1:\n            devices = _a.sent();\n            if (devices.length === 0) return [2 /*return*/, null];\n            return [2 /*return*/, TransportWebHID.open(devices[0])];\n        }\n      });\n    });\n  };\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  TransportWebHID.open = function (device) {\n    return __awaiter(this, void 0, void 0, function () {\n      var transport, onDisconnect;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, device.open()];\n          case 1:\n            _a.sent();\n            transport = new TransportWebHID(device);\n            onDisconnect = function (e) {\n              if (device === e.device) {\n                getHID().removeEventListener(\"disconnect\", onDisconnect);\n                transport._emitDisconnect(new DisconnectedDevice());\n              }\n            };\n            getHID().addEventListener(\"disconnect\", onDisconnect);\n            return [2 /*return*/, transport];\n        }\n      });\n    });\n  };\n  /**\n   * Release the transport device\n   */\n  TransportWebHID.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.exchangeBusyPromise];\n          case 1:\n            _a.sent();\n            this.device.removeEventListener(\"inputreport\", this.onInputReport);\n            return [4 /*yield*/, this.device.close()];\n          case 2:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  TransportWebHID.prototype.setScrambleKey = function () {};\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  TransportWebHID.isSupported = isSupported;\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  TransportWebHID.list = getLedgerDevices;\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  TransportWebHID.listen = function (observer) {\n    var unsubscribed = false;\n    getFirstLedgerDevice().then(function (device) {\n      if (!device) {\n        observer.error(new TransportOpenUserCancelled(\"Access denied to use Ledger device\"));\n      } else if (!unsubscribed) {\n        var deviceModel = typeof device.productId === \"number\" ? identifyUSBProductId(device.productId) : undefined;\n        observer.next({\n          type: \"add\",\n          descriptor: device,\n          deviceModel: deviceModel\n        });\n        observer.complete();\n      }\n    }, function (error) {\n      observer.error(new TransportOpenUserCancelled(error.message));\n    });\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return {\n      unsubscribe: unsubscribe\n    };\n  };\n  return TransportWebHID;\n}(Transport);\nexport default TransportWebHID;","map":{"version":3,"names":["Transport","hidFraming","identifyUSBProductId","ledgerUSBVendorId","log","TransportOpenUserCancelled","DisconnectedDeviceDuringOperation","DisconnectedDevice","TransportError","ledgerDevices","vendorId","isSupported","Promise","resolve","window","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","_a","sent","Array","isArray","getLedgerDevices","getDevices","devices","filter","d","getFirstLedgerDevice","existingDevices","length","TransportWebHID","_super","__extends","_this","call","channel","Math","floor","random","packetSize","inputs","read","shift","success","inputCallback","onInputReport","e","buffer","Buffer","from","data","push","_disconnectEmitted","_emitDisconnect","emit","exchange","apdu","__awaiter","exchangeAtomicImpl","toString","framing","blocks","makeBlocks","i","sendReport","_b","result","getReducedResult","acc","reduceResponse","message","includes","b","deviceModel","productId","undefined","addEventListener","request","__read","apply","open","openConnected","transport","onDisconnect","removeEventListener","prototype","close","exchangeBusyPromise","setScrambleKey","list","listen","observer","unsubscribed","then","error","next","type","descriptor","complete","unsubscribe"],"sources":["/Users/wuhuan/gif-portal-starter/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts"],"sourcesContent":["import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}